"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_web3modal_siwe_dist_esm_exports_index_js"],{

/***/ "./node_modules/@web3modal/siwe/node_modules/@walletconnect/utils/dist/index.es.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@walletconnect/utils/dist/index.es.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE10: function() { return /* binding */ Gi; },\n/* harmony export */   BASE16: function() { return /* binding */ zt; },\n/* harmony export */   BASE64: function() { return /* binding */ Jr; },\n/* harmony export */   COLON: function() { return /* binding */ Yo; },\n/* harmony export */   DEFAULT_DEPTH: function() { return /* binding */ di; },\n/* harmony export */   EMPTY_SPACE: function() { return /* binding */ Br; },\n/* harmony export */   ENV_MAP: function() { return /* binding */ qt; },\n/* harmony export */   INTERNAL_ERRORS: function() { return /* binding */ Ao; },\n/* harmony export */   MemoryStore: function() { return /* binding */ lh; },\n/* harmony export */   ONE_THOUSAND: function() { return /* binding */ Vo; },\n/* harmony export */   REACT_NATIVE_PRODUCT: function() { return /* binding */ xn; },\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: function() { return /* binding */ ro; },\n/* harmony export */   SDK_ERRORS: function() { return /* binding */ go; },\n/* harmony export */   SDK_TYPE: function() { return /* binding */ En; },\n/* harmony export */   SLASH: function() { return /* binding */ Mn; },\n/* harmony export */   TYPE_0: function() { return /* binding */ Yi; },\n/* harmony export */   TYPE_1: function() { return /* binding */ lr; },\n/* harmony export */   UTF8: function() { return /* binding */ Gr; },\n/* harmony export */   addResourceToRecap: function() { return /* binding */ Vf; },\n/* harmony export */   appendToQueryString: function() { return /* binding */ Sn; },\n/* harmony export */   assertType: function() { return /* binding */ e0; },\n/* harmony export */   assignAbilityToActions: function() { return /* binding */ ji; },\n/* harmony export */   base64Decode: function() { return /* binding */ Gf; },\n/* harmony export */   base64Encode: function() { return /* binding */ Jf; },\n/* harmony export */   buildApprovedNamespaces: function() { return /* binding */ Lu; },\n/* harmony export */   buildAuthObject: function() { return /* binding */ su; },\n/* harmony export */   buildNamespacesFromAuth: function() { return /* binding */ ju; },\n/* harmony export */   buildRecapStatement: function() { return /* binding */ Xf; },\n/* harmony export */   calcExpiry: function() { return /* binding */ d0; },\n/* harmony export */   capitalize: function() { return /* binding */ s0; },\n/* harmony export */   capitalizeWord: function() { return /* binding */ Rn; },\n/* harmony export */   createDelayedPromise: function() { return /* binding */ a0; },\n/* harmony export */   createEncodedRecap: function() { return /* binding */ cu; },\n/* harmony export */   createExpiringPromise: function() { return /* binding */ u0; },\n/* harmony export */   createRecap: function() { return /* binding */ Yf; },\n/* harmony export */   decodeRecap: function() { return /* binding */ Oe; },\n/* harmony export */   decodeTypeByte: function() { return /* binding */ Mr; },\n/* harmony export */   decrypt: function() { return /* binding */ xu; },\n/* harmony export */   deriveSymKey: function() { return /* binding */ Au; },\n/* harmony export */   deserialize: function() { return /* binding */ Xi; },\n/* harmony export */   encodeRecap: function() { return /* binding */ jr; },\n/* harmony export */   encodeTypeByte: function() { return /* binding */ $f; },\n/* harmony export */   encrypt: function() { return /* binding */ wu; },\n/* harmony export */   engineEvent: function() { return /* binding */ v0; },\n/* harmony export */   enumify: function() { return /* binding */ o0; },\n/* harmony export */   formatAccountId: function() { return /* binding */ vn; },\n/* harmony export */   formatAccountWithChain: function() { return /* binding */ Ko; },\n/* harmony export */   formatChainId: function() { return /* binding */ pn; },\n/* harmony export */   formatExpirerTarget: function() { return /* binding */ vi; },\n/* harmony export */   formatIdTarget: function() { return /* binding */ c0; },\n/* harmony export */   formatMessage: function() { return /* binding */ zf; },\n/* harmony export */   formatMessageContext: function() { return /* binding */ r0; },\n/* harmony export */   formatRelayParams: function() { return /* binding */ ao; },\n/* harmony export */   formatRelayRpcUrl: function() { return /* binding */ $o; },\n/* harmony export */   formatStatementFromRecap: function() { return /* binding */ Ji; },\n/* harmony export */   formatTopicTarget: function() { return /* binding */ h0; },\n/* harmony export */   formatUA: function() { return /* binding */ _n; },\n/* harmony export */   formatUri: function() { return /* binding */ Du; },\n/* harmony export */   generateKeyPair: function() { return /* binding */ mu; },\n/* harmony export */   generateRandomBytes32: function() { return /* binding */ gu; },\n/* harmony export */   getAccountsChains: function() { return /* binding */ $e; },\n/* harmony export */   getAccountsFromNamespaces: function() { return /* binding */ zo; },\n/* harmony export */   getAddressFromAccount: function() { return /* binding */ mn; },\n/* harmony export */   getAddressesFromAccounts: function() { return /* binding */ Ho; },\n/* harmony export */   getAppMetadata: function() { return /* binding */ Xo; },\n/* harmony export */   getBrowserOnlineStatus: function() { return /* binding */ Bo; },\n/* harmony export */   getBundleId: function() { return /* binding */ Wo; },\n/* harmony export */   getChainFromAccount: function() { return /* binding */ gn; },\n/* harmony export */   getChainsFromAccounts: function() { return /* binding */ An; },\n/* harmony export */   getChainsFromNamespace: function() { return /* binding */ _r; },\n/* harmony export */   getChainsFromNamespaces: function() { return /* binding */ Lo; },\n/* harmony export */   getChainsFromRecap: function() { return /* binding */ pu; },\n/* harmony export */   getChainsFromRequiredNamespaces: function() { return /* binding */ jo; },\n/* harmony export */   getCommonValuesInArrays: function() { return /* binding */ mi; },\n/* harmony export */   getDecodedRecapFromResources: function() { return /* binding */ Lf; },\n/* harmony export */   getDeepLink: function() { return /* binding */ g0; },\n/* harmony export */   getDidAddress: function() { return /* binding */ Li; },\n/* harmony export */   getDidAddressSegments: function() { return /* binding */ Lr; },\n/* harmony export */   getDidChainId: function() { return /* binding */ zi; },\n/* harmony export */   getEnvironment: function() { return /* binding */ We; },\n/* harmony export */   getHttpUrl: function() { return /* binding */ t0; },\n/* harmony export */   getInternalError: function() { return /* binding */ xe; },\n/* harmony export */   getJavascriptID: function() { return /* binding */ In; },\n/* harmony export */   getJavascriptOS: function() { return /* binding */ Nn; },\n/* harmony export */   getLastItems: function() { return /* binding */ Cn; },\n/* harmony export */   getMethodsFromRecap: function() { return /* binding */ du; },\n/* harmony export */   getNamespacedDidChainId: function() { return /* binding */ fu; },\n/* harmony export */   getNamespacesChains: function() { return /* binding */ co; },\n/* harmony export */   getNamespacesEventsForChainId: function() { return /* binding */ po; },\n/* harmony export */   getNamespacesFromAccounts: function() { return /* binding */ mo; },\n/* harmony export */   getNamespacesMethodsForChainId: function() { return /* binding */ lo; },\n/* harmony export */   getNodeOnlineStatus: function() { return /* binding */ Ro; },\n/* harmony export */   getReCapActions: function() { return /* binding */ Qf; },\n/* harmony export */   getReactNativeOnlineStatus: function() { return /* binding */ Co; },\n/* harmony export */   getRecapAbilitiesFromResource: function() { return /* binding */ hu; },\n/* harmony export */   getRecapFromResources: function() { return /* binding */ Qr; },\n/* harmony export */   getRecapResource: function() { return /* binding */ jf; },\n/* harmony export */   getRelayClientMetadata: function() { return /* binding */ Zo; },\n/* harmony export */   getRelayProtocolApi: function() { return /* binding */ Nu; },\n/* harmony export */   getRelayProtocolName: function() { return /* binding */ Su; },\n/* harmony export */   getRequiredNamespacesFromNamespaces: function() { return /* binding */ zu; },\n/* harmony export */   getSdkError: function() { return /* binding */ tr; },\n/* harmony export */   getUniqueValues: function() { return /* binding */ li; },\n/* harmony export */   handleDeeplinkRedirect: function() { return /* binding */ m0; },\n/* harmony export */   hasOverlap: function() { return /* binding */ _e; },\n/* harmony export */   hashKey: function() { return /* binding */ bu; },\n/* harmony export */   hashMessage: function() { return /* binding */ yu; },\n/* harmony export */   isBrowser: function() { return /* binding */ pr; },\n/* harmony export */   isCaipNamespace: function() { return /* binding */ Zi; },\n/* harmony export */   isConformingNamespaces: function() { return /* binding */ Io; },\n/* harmony export */   isExpired: function() { return /* binding */ p0; },\n/* harmony export */   isNode: function() { return /* binding */ pi; },\n/* harmony export */   isOnline: function() { return /* binding */ hh; },\n/* harmony export */   isProposalStruct: function() { return /* binding */ Gu; },\n/* harmony export */   isReactNative: function() { return /* binding */ er; },\n/* harmony export */   isRecap: function() { return /* binding */ Qi; },\n/* harmony export */   isSessionCompatible: function() { return /* binding */ Qu; },\n/* harmony export */   isSessionStruct: function() { return /* binding */ Yu; },\n/* harmony export */   isTypeOneEnvelope: function() { return /* binding */ Eu; },\n/* harmony export */   isUndefined: function() { return /* binding */ Pe; },\n/* harmony export */   isValidAccountId: function() { return /* binding */ bo; },\n/* harmony export */   isValidAccounts: function() { return /* binding */ xo; },\n/* harmony export */   isValidActions: function() { return /* binding */ Eo; },\n/* harmony export */   isValidArray: function() { return /* binding */ Er; },\n/* harmony export */   isValidChainId: function() { return /* binding */ Sr; },\n/* harmony export */   isValidChains: function() { return /* binding */ yo; },\n/* harmony export */   isValidController: function() { return /* binding */ Vu; },\n/* harmony export */   isValidEip1271Signature: function() { return /* binding */ kf; },\n/* harmony export */   isValidEip191Signature: function() { return /* binding */ Uf; },\n/* harmony export */   isValidErrorReason: function() { return /* binding */ th; },\n/* harmony export */   isValidEvent: function() { return /* binding */ ih; },\n/* harmony export */   isValidId: function() { return /* binding */ Zu; },\n/* harmony export */   isValidNamespaceAccounts: function() { return /* binding */ Mo; },\n/* harmony export */   isValidNamespaceActions: function() { return /* binding */ en; },\n/* harmony export */   isValidNamespaceChains: function() { return /* binding */ wo; },\n/* harmony export */   isValidNamespaceMethodsOrEvents: function() { return /* binding */ tn; },\n/* harmony export */   isValidNamespaces: function() { return /* binding */ So; },\n/* harmony export */   isValidNamespacesChainId: function() { return /* binding */ nh; },\n/* harmony export */   isValidNamespacesEvent: function() { return /* binding */ oh; },\n/* harmony export */   isValidNamespacesRequest: function() { return /* binding */ fh; },\n/* harmony export */   isValidNumber: function() { return /* binding */ Vr; },\n/* harmony export */   isValidObject: function() { return /* binding */ Yr; },\n/* harmony export */   isValidParams: function() { return /* binding */ $u; },\n/* harmony export */   isValidRecap: function() { return /* binding */ me; },\n/* harmony export */   isValidRelay: function() { return /* binding */ No; },\n/* harmony export */   isValidRelays: function() { return /* binding */ Xu; },\n/* harmony export */   isValidRequest: function() { return /* binding */ eh; },\n/* harmony export */   isValidRequestExpiry: function() { return /* binding */ uh; },\n/* harmony export */   isValidRequiredNamespaces: function() { return /* binding */ Wu; },\n/* harmony export */   isValidResponse: function() { return /* binding */ rh; },\n/* harmony export */   isValidString: function() { return /* binding */ Gt; },\n/* harmony export */   isValidUrl: function() { return /* binding */ Ju; },\n/* harmony export */   mapEntries: function() { return /* binding */ f0; },\n/* harmony export */   mapToObj: function() { return /* binding */ i0; },\n/* harmony export */   mergeArrays: function() { return /* binding */ ge; },\n/* harmony export */   mergeEncodedRecaps: function() { return /* binding */ lu; },\n/* harmony export */   mergeRecaps: function() { return /* binding */ Wf; },\n/* harmony export */   normalizeNamespaces: function() { return /* binding */ $i; },\n/* harmony export */   objToMap: function() { return /* binding */ n0; },\n/* harmony export */   parseAccountId: function() { return /* binding */ ci; },\n/* harmony export */   parseChainId: function() { return /* binding */ dn; },\n/* harmony export */   parseContextNames: function() { return /* binding */ Bn; },\n/* harmony export */   parseExpirerTarget: function() { return /* binding */ l0; },\n/* harmony export */   parseNamespaceKey: function() { return /* binding */ vo; },\n/* harmony export */   parseRelayParams: function() { return /* binding */ oo; },\n/* harmony export */   parseTopic: function() { return /* binding */ so; },\n/* harmony export */   parseUri: function() { return /* binding */ Pu; },\n/* harmony export */   populateAuthPayload: function() { return /* binding */ au; },\n/* harmony export */   recapHasResource: function() { return /* binding */ uu; },\n/* harmony export */   serialize: function() { return /* binding */ to; },\n/* harmony export */   subscribeToBrowserNetworkChange: function() { return /* binding */ Oo; },\n/* harmony export */   subscribeToNetworkChange: function() { return /* binding */ ch; },\n/* harmony export */   subscribeToReactNativeNetworkChange: function() { return /* binding */ Po; },\n/* harmony export */   validateDecoding: function() { return /* binding */ Mu; },\n/* harmony export */   validateEncoding: function() { return /* binding */ eo; },\n/* harmony export */   validateSignedCacao: function() { return /* binding */ ou; },\n/* harmony export */   verifySignature: function() { return /* binding */ Tf; }\n/* harmony export */ });\n/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! detect-browser */ \"./node_modules/detect-browser/es/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/time */ \"./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/window-getters */ \"./node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/window-metadata */ \"./node_modules/@walletconnect/window-metadata/dist/cjs/index.js\");\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! query-string */ \"./node_modules/query-string/index.js\");\n/* harmony import */ var _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stablelib/chacha20poly1305 */ \"./node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js\");\n/* harmony import */ var _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stablelib/hkdf */ \"./node_modules/@stablelib/hkdf/lib/hkdf.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stablelib/random */ \"./node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stablelib/sha256 */ \"./node_modules/@stablelib/sha256/lib/sha256.js\");\n/* harmony import */ var _stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @stablelib/x25519 */ \"./node_modules/@stablelib/x25519/lib/x25519.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uint8arrays */ \"./node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/relay-api */ \"./node_modules/@walletconnect/relay-api/dist/index.es.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\nconst Ir=\":\";function dn(e){const[t,r]=e.split(Ir);return{namespace:t,reference:r}}function pn(e){const{namespace:t,reference:r}=e;return[t,r].join(Ir)}function ci(e){const[t,r,i]=e.split(Ir);return{namespace:t,reference:r,address:i}}function vn(e){const{namespace:t,reference:r,address:i}=e;return[t,r,i].join(Ir)}function li(e,t){const r=[];return e.forEach(i=>{const n=t(i);r.includes(n)||r.push(n)}),r}function mn(e){const{address:t}=ci(e);return t}function gn(e){const{namespace:t,reference:r}=ci(e);return pn({namespace:t,reference:r})}function Ko(e,t){const{namespace:r,reference:i}=dn(t);return vn({namespace:r,reference:i,address:e})}function Ho(e){return li(e,mn)}function An(e){return li(e,gn)}function zo(e,t=[]){const r=[];return Object.keys(e).forEach(i=>{if(t.length&&!t.includes(i))return;const n=e[i];r.push(...n.accounts)}),r}function Lo(e,t=[]){const r=[];return Object.keys(e).forEach(i=>{if(t.length&&!t.includes(i))return;const n=e[i];r.push(...An(n.accounts))}),r}function jo(e,t=[]){const r=[];return Object.keys(e).forEach(i=>{if(t.length&&!t.includes(i))return;const n=e[i];r.push(..._r(i,n))}),r}function _r(e,t){return e.includes(\":\")?[e]:t.chains||[]}var Qo=Object.defineProperty,bn=Object.getOwnPropertySymbols,Jo=Object.prototype.hasOwnProperty,Go=Object.prototype.propertyIsEnumerable,yn=(e,t,r)=>t in e?Qo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,wn=(e,t)=>{for(var r in t||(t={}))Jo.call(t,r)&&yn(e,r,t[r]);if(bn)for(var r of bn(t))Go.call(t,r)&&yn(e,r,t[r]);return e};const xn=\"ReactNative\",qt={reactNative:\"react-native\",node:\"node\",browser:\"browser\",unknown:\"unknown\"},Br=\" \",Yo=\":\",Mn=\"/\",di=2,Vo=1e3,En=\"js\";function pi(){return typeof process<\"u\"&&typeof process.versions<\"u\"&&typeof process.versions.node<\"u\"}function er(){return!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)()&&navigator.product===xn}function pr(){return!pi()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)()}function We(){return er()?qt.reactNative:pi()?qt.node:pr()?qt.browser:qt.unknown}function Wo(){var e;try{return er()&&typeof __webpack_require__.g<\"u\"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Application)<\"u\"?(e=__webpack_require__.g.Application)==null?void 0:e.applicationId:void 0}catch{return}}function Sn(e,t){let r=query_string__WEBPACK_IMPORTED_MODULE_3__.parse(e);return r=wn(wn({},r),t),e=query_string__WEBPACK_IMPORTED_MODULE_3__.stringify(r),e}function Xo(){return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__.getWindowMetadata)()||{name:\"\",description:\"\",url:\"\",icons:[\"\"]}}function Zo(e,t){var r;const i=We(),n={protocol:e,version:t,env:i};return i===\"browser\"&&(n.host=((r=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)())==null?void 0:r.host)||\"unknown\"),n}function Nn(){if(We()===qt.reactNative&&typeof __webpack_require__.g<\"u\"&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Platform)<\"u\"){const{OS:r,Version:i}=__webpack_require__.g.Platform;return[r,i].join(\"-\")}const e=(0,detect_browser__WEBPACK_IMPORTED_MODULE_11__.detect)();if(e===null)return\"unknown\";const t=e.os?e.os.replace(\" \",\"\").toLowerCase():\"unknown\";return e.type===\"browser\"?[t,e.name,e.version].join(\"-\"):[t,e.version].join(\"-\")}function In(){var e;const t=We();return t===qt.browser?[t,((e=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)())==null?void 0:e.host)||\"unknown\"].join(\":\"):t}function _n(e,t,r){const i=Nn(),n=In();return[[e,t].join(\"-\"),[En,r].join(\"-\"),i,n].join(\"/\")}function $o({protocol:e,version:t,relayUrl:r,sdkVersion:i,auth:n,projectId:o,useOnCloseEvent:h,bundleId:p}){const b=r.split(\"?\"),m=_n(e,t,i),w={auth:n,ua:m,projectId:o,useOnCloseEvent:h||void 0,origin:p||void 0},y=Sn(b[1]||\"\",w);return b[0]+\"?\"+y}function t0(e){let t=(e.match(/^[^:]+(?=:\\/\\/)/gi)||[])[0];const r=typeof t<\"u\"?e.split(\"://\")[1]:e;return t=t===\"wss\"?\"https\":\"http\",[t,r].join(\"://\")}function e0(e,t,r){if(!e[t]||typeof e[t]!==r)throw new Error(`Missing or invalid \"${t}\" param`)}function Bn(e,t=di){return Cn(e.split(Mn),t)}function r0(e){return Bn(e).join(Br)}function _e(e,t){return e.filter(r=>t.includes(r)).length===e.length}function Cn(e,t=di){return e.slice(Math.max(e.length-t,0))}function i0(e){return Object.fromEntries(e.entries())}function n0(e){return new Map(Object.entries(e))}function f0(e,t){const r={};return Object.keys(e).forEach(i=>{r[i]=t(e[i])}),r}const o0=e=>e;function Rn(e){return e.trim().replace(/^\\w/,t=>t.toUpperCase())}function s0(e){return e.split(Br).map(t=>Rn(t)).join(Br)}function a0(e=_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES,t){const r=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e||_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES);let i,n,o;return{resolve:h=>{o&&i&&(clearTimeout(o),i(h))},reject:h=>{o&&n&&(clearTimeout(o),n(h))},done:()=>new Promise((h,p)=>{o=setTimeout(()=>{p(new Error(t))},r),i=h,n=p})}}function u0(e,t,r){return new Promise(async(i,n)=>{const o=setTimeout(()=>n(new Error(r)),t);try{const h=await e;i(h)}catch(h){n(h)}clearTimeout(o)})}function vi(e,t){if(typeof t==\"string\"&&t.startsWith(`${e}:`))return t;if(e.toLowerCase()===\"topic\"){if(typeof t!=\"string\")throw new Error('Value must be \"string\" for expirer target type: topic');return`topic:${t}`}else if(e.toLowerCase()===\"id\"){if(typeof t!=\"number\")throw new Error('Value must be \"number\" for expirer target type: id');return`id:${t}`}throw new Error(`Unknown expirer target type: ${e}`)}function h0(e){return vi(\"topic\",e)}function c0(e){return vi(\"id\",e)}function l0(e){const[t,r]=e.split(\":\"),i={id:void 0,topic:void 0};if(t===\"topic\"&&typeof r==\"string\")i.topic=r;else if(t===\"id\"&&Number.isInteger(Number(r)))i.id=Number(r);else throw new Error(`Invalid target, expected id:number or topic:string, got ${t}:${r}`);return i}function d0(e,t){return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.fromMiliseconds)((t||Date.now())+(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e))}function p0(e){return Date.now()>=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e)}function v0(e,t){return`${e}${t?`:${t}`:\"\"}`}function ge(e=[],t=[]){return[...new Set([...e,...t])]}async function m0({id:e,topic:t,wcDeepLink:r}){try{if(!r)return;const i=typeof r==\"string\"?JSON.parse(r):r;let n=i?.href;if(typeof n!=\"string\")return;n.endsWith(\"/\")&&(n=n.slice(0,-1));const o=`${n}/wc?requestId=${e}&sessionTopic=${t}`,h=We();h===qt.browser?o.startsWith(\"https://\")||o.startsWith(\"http://\")?window.open(o,\"_blank\",\"noreferrer noopener\"):window.open(o,\"_self\",\"noreferrer noopener\"):h===qt.reactNative&&typeof(__webpack_require__.g==null?void 0:__webpack_require__.g.Linking)<\"u\"&&await __webpack_require__.g.Linking.openURL(o)}catch(i){console.error(i)}}async function g0(e,t){try{return await e.getItem(t)||(pr()?localStorage.getItem(t):void 0)}catch(r){console.error(r)}}function mi(e,t){return e.filter(r=>t.includes(r))}var On=typeof globalThis<\"u\"?globalThis:typeof window<\"u\"?window:typeof __webpack_require__.g<\"u\"?__webpack_require__.g:typeof self<\"u\"?self:{};function A0(e){var t=e.default;if(typeof t==\"function\"){var r=function(){return t.apply(this,arguments)};r.prototype=t.prototype}else r={};return Object.defineProperty(r,\"__esModule\",{value:!0}),Object.keys(e).forEach(function(i){var n=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(r,i,n.get?n:{enumerable:!0,get:function(){return e[i]}})}),r}var Pn={exports:{}};/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */(function(e){(function(){var t=\"input is invalid type\",r=\"finalize already called\",i=typeof window==\"object\",n=i?window:{};n.JS_SHA3_NO_WINDOW&&(i=!1);var o=!i&&typeof self==\"object\",h=!n.JS_SHA3_NO_NODE_JS&&typeof process==\"object\"&&process.versions&&process.versions.node;h?n=On:o&&(n=self);var p=!n.JS_SHA3_NO_COMMON_JS&&!0&&e.exports,b=!n.JS_SHA3_NO_ARRAY_BUFFER&&typeof ArrayBuffer<\"u\",m=\"0123456789abcdef\".split(\"\"),w=[31,7936,2031616,520093696],y=[4,1024,262144,67108864],S=[1,256,65536,16777216],I=[6,1536,393216,100663296],N=[0,8,16,24],C=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],F=[224,256,384,512],U=[128,256],J=[\"hex\",\"buffer\",\"arrayBuffer\",\"array\",\"digest\"],Bt={128:168,256:136};(n.JS_SHA3_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(u){return Object.prototype.toString.call(u)===\"[object Array]\"}),b&&(n.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(u){return typeof u==\"object\"&&u.buffer&&u.buffer.constructor===ArrayBuffer});for(var G=function(u,E,_){return function(B){return new s(u,E,u).update(B)[_]()}},H=function(u,E,_){return function(B,R){return new s(u,E,R).update(B)[_]()}},z=function(u,E,_){return function(B,R,T,P){return f[\"cshake\"+u].update(B,R,T,P)[_]()}},Pt=function(u,E,_){return function(B,R,T,P){return f[\"kmac\"+u].update(B,R,T,P)[_]()}},W=function(u,E,_,B){for(var R=0;R<J.length;++R){var T=J[R];u[T]=E(_,B,T)}return u},Rt=function(u,E){var _=G(u,E,\"hex\");return _.create=function(){return new s(u,E,u)},_.update=function(B){return _.create().update(B)},W(_,G,u,E)},Yt=function(u,E){var _=H(u,E,\"hex\");return _.create=function(B){return new s(u,E,B)},_.update=function(B,R){return _.create(R).update(B)},W(_,H,u,E)},Y=function(u,E){var _=Bt[u],B=z(u,E,\"hex\");return B.create=function(R,T,P){return!T&&!P?f[\"shake\"+u].create(R):new s(u,E,R).bytepad([T,P],_)},B.update=function(R,T,P,O){return B.create(T,P,O).update(R)},W(B,z,u,E)},Vt=function(u,E){var _=Bt[u],B=Pt(u,E,\"hex\");return B.create=function(R,T,P){return new v(u,E,T).bytepad([\"KMAC\",P],_).bytepad([R],_)},B.update=function(R,T,P,O){return B.create(R,P,O).update(T)},W(B,Pt,u,E)},A=[{name:\"keccak\",padding:S,bits:F,createMethod:Rt},{name:\"sha3\",padding:I,bits:F,createMethod:Rt},{name:\"shake\",padding:w,bits:U,createMethod:Yt},{name:\"cshake\",padding:y,bits:U,createMethod:Y},{name:\"kmac\",padding:y,bits:U,createMethod:Vt}],f={},a=[],c=0;c<A.length;++c)for(var d=A[c],g=d.bits,x=0;x<g.length;++x){var M=d.name+\"_\"+g[x];if(a.push(M),f[M]=d.createMethod(g[x],d.padding),d.name!==\"sha3\"){var l=d.name+g[x];a.push(l),f[l]=f[M]}}function s(u,E,_){this.blocks=[],this.s=[],this.padding=E,this.outputBits=_,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(u<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=_>>5,this.extraBytes=(_&31)>>3;for(var B=0;B<50;++B)this.s[B]=0}s.prototype.update=function(u){if(this.finalized)throw new Error(r);var E,_=typeof u;if(_!==\"string\"){if(_===\"object\"){if(u===null)throw new Error(t);if(b&&u.constructor===ArrayBuffer)u=new Uint8Array(u);else if(!Array.isArray(u)&&(!b||!ArrayBuffer.isView(u)))throw new Error(t)}else throw new Error(t);E=!0}for(var B=this.blocks,R=this.byteCount,T=u.length,P=this.blockCount,O=0,Ct=this.s,D,q;O<T;){if(this.reset)for(this.reset=!1,B[0]=this.block,D=1;D<P+1;++D)B[D]=0;if(E)for(D=this.start;O<T&&D<R;++O)B[D>>2]|=u[O]<<N[D++&3];else for(D=this.start;O<T&&D<R;++O)q=u.charCodeAt(O),q<128?B[D>>2]|=q<<N[D++&3]:q<2048?(B[D>>2]|=(192|q>>6)<<N[D++&3],B[D>>2]|=(128|q&63)<<N[D++&3]):q<55296||q>=57344?(B[D>>2]|=(224|q>>12)<<N[D++&3],B[D>>2]|=(128|q>>6&63)<<N[D++&3],B[D>>2]|=(128|q&63)<<N[D++&3]):(q=65536+((q&1023)<<10|u.charCodeAt(++O)&1023),B[D>>2]|=(240|q>>18)<<N[D++&3],B[D>>2]|=(128|q>>12&63)<<N[D++&3],B[D>>2]|=(128|q>>6&63)<<N[D++&3],B[D>>2]|=(128|q&63)<<N[D++&3]);if(this.lastByteIndex=D,D>=R){for(this.start=D-R,this.block=B[P],D=0;D<P;++D)Ct[D]^=B[D];k(Ct),this.reset=!0}else this.start=D}return this},s.prototype.encode=function(u,E){var _=u&255,B=1,R=[_];for(u=u>>8,_=u&255;_>0;)R.unshift(_),u=u>>8,_=u&255,++B;return E?R.push(B):R.unshift(B),this.update(R),R.length},s.prototype.encodeString=function(u){var E,_=typeof u;if(_!==\"string\"){if(_===\"object\"){if(u===null)throw new Error(t);if(b&&u.constructor===ArrayBuffer)u=new Uint8Array(u);else if(!Array.isArray(u)&&(!b||!ArrayBuffer.isView(u)))throw new Error(t)}else throw new Error(t);E=!0}var B=0,R=u.length;if(E)B=R;else for(var T=0;T<u.length;++T){var P=u.charCodeAt(T);P<128?B+=1:P<2048?B+=2:P<55296||P>=57344?B+=3:(P=65536+((P&1023)<<10|u.charCodeAt(++T)&1023),B+=4)}return B+=this.encode(B*8),this.update(u),B},s.prototype.bytepad=function(u,E){for(var _=this.encode(E),B=0;B<u.length;++B)_+=this.encodeString(u[B]);var R=E-_%E,T=[];return T.length=R,this.update(T),this},s.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var u=this.blocks,E=this.lastByteIndex,_=this.blockCount,B=this.s;if(u[E>>2]|=this.padding[E&3],this.lastByteIndex===this.byteCount)for(u[0]=u[_],E=1;E<_+1;++E)u[E]=0;for(u[_-1]|=2147483648,E=0;E<_;++E)B[E]^=u[E];k(B)}},s.prototype.toString=s.prototype.hex=function(){this.finalize();for(var u=this.blockCount,E=this.s,_=this.outputBlocks,B=this.extraBytes,R=0,T=0,P=\"\",O;T<_;){for(R=0;R<u&&T<_;++R,++T)O=E[R],P+=m[O>>4&15]+m[O&15]+m[O>>12&15]+m[O>>8&15]+m[O>>20&15]+m[O>>16&15]+m[O>>28&15]+m[O>>24&15];T%u===0&&(k(E),R=0)}return B&&(O=E[R],P+=m[O>>4&15]+m[O&15],B>1&&(P+=m[O>>12&15]+m[O>>8&15]),B>2&&(P+=m[O>>20&15]+m[O>>16&15])),P},s.prototype.arrayBuffer=function(){this.finalize();var u=this.blockCount,E=this.s,_=this.outputBlocks,B=this.extraBytes,R=0,T=0,P=this.outputBits>>3,O;B?O=new ArrayBuffer(_+1<<2):O=new ArrayBuffer(P);for(var Ct=new Uint32Array(O);T<_;){for(R=0;R<u&&T<_;++R,++T)Ct[T]=E[R];T%u===0&&k(E)}return B&&(Ct[R]=E[R],O=O.slice(0,P)),O},s.prototype.buffer=s.prototype.arrayBuffer,s.prototype.digest=s.prototype.array=function(){this.finalize();for(var u=this.blockCount,E=this.s,_=this.outputBlocks,B=this.extraBytes,R=0,T=0,P=[],O,Ct;T<_;){for(R=0;R<u&&T<_;++R,++T)O=T<<2,Ct=E[R],P[O]=Ct&255,P[O+1]=Ct>>8&255,P[O+2]=Ct>>16&255,P[O+3]=Ct>>24&255;T%u===0&&k(E)}return B&&(O=T<<2,Ct=E[R],P[O]=Ct&255,B>1&&(P[O+1]=Ct>>8&255),B>2&&(P[O+2]=Ct>>16&255)),P};function v(u,E,_){s.call(this,u,E,_)}v.prototype=new s,v.prototype.finalize=function(){return this.encode(this.outputBits,!0),s.prototype.finalize.call(this)};var k=function(u){var E,_,B,R,T,P,O,Ct,D,q,De,X,Z,Fe,$,tt,Te,et,rt,Ue,it,nt,ke,ft,ot,qe,st,at,Ke,ut,ht,He,ct,lt,ze,dt,pt,Le,vt,mt,je,gt,At,Qe,bt,yt,Je,wt,xt,Ge,Mt,Et,Ye,St,Nt,Ve,It,_t,Me,Ee,Se,Ne,Ie;for(B=0;B<48;B+=2)R=u[0]^u[10]^u[20]^u[30]^u[40],T=u[1]^u[11]^u[21]^u[31]^u[41],P=u[2]^u[12]^u[22]^u[32]^u[42],O=u[3]^u[13]^u[23]^u[33]^u[43],Ct=u[4]^u[14]^u[24]^u[34]^u[44],D=u[5]^u[15]^u[25]^u[35]^u[45],q=u[6]^u[16]^u[26]^u[36]^u[46],De=u[7]^u[17]^u[27]^u[37]^u[47],X=u[8]^u[18]^u[28]^u[38]^u[48],Z=u[9]^u[19]^u[29]^u[39]^u[49],E=X^(P<<1|O>>>31),_=Z^(O<<1|P>>>31),u[0]^=E,u[1]^=_,u[10]^=E,u[11]^=_,u[20]^=E,u[21]^=_,u[30]^=E,u[31]^=_,u[40]^=E,u[41]^=_,E=R^(Ct<<1|D>>>31),_=T^(D<<1|Ct>>>31),u[2]^=E,u[3]^=_,u[12]^=E,u[13]^=_,u[22]^=E,u[23]^=_,u[32]^=E,u[33]^=_,u[42]^=E,u[43]^=_,E=P^(q<<1|De>>>31),_=O^(De<<1|q>>>31),u[4]^=E,u[5]^=_,u[14]^=E,u[15]^=_,u[24]^=E,u[25]^=_,u[34]^=E,u[35]^=_,u[44]^=E,u[45]^=_,E=Ct^(X<<1|Z>>>31),_=D^(Z<<1|X>>>31),u[6]^=E,u[7]^=_,u[16]^=E,u[17]^=_,u[26]^=E,u[27]^=_,u[36]^=E,u[37]^=_,u[46]^=E,u[47]^=_,E=q^(R<<1|T>>>31),_=De^(T<<1|R>>>31),u[8]^=E,u[9]^=_,u[18]^=E,u[19]^=_,u[28]^=E,u[29]^=_,u[38]^=E,u[39]^=_,u[48]^=E,u[49]^=_,Fe=u[0],$=u[1],yt=u[11]<<4|u[10]>>>28,Je=u[10]<<4|u[11]>>>28,at=u[20]<<3|u[21]>>>29,Ke=u[21]<<3|u[20]>>>29,Ee=u[31]<<9|u[30]>>>23,Se=u[30]<<9|u[31]>>>23,gt=u[40]<<18|u[41]>>>14,At=u[41]<<18|u[40]>>>14,lt=u[2]<<1|u[3]>>>31,ze=u[3]<<1|u[2]>>>31,tt=u[13]<<12|u[12]>>>20,Te=u[12]<<12|u[13]>>>20,wt=u[22]<<10|u[23]>>>22,xt=u[23]<<10|u[22]>>>22,ut=u[33]<<13|u[32]>>>19,ht=u[32]<<13|u[33]>>>19,Ne=u[42]<<2|u[43]>>>30,Ie=u[43]<<2|u[42]>>>30,St=u[5]<<30|u[4]>>>2,Nt=u[4]<<30|u[5]>>>2,dt=u[14]<<6|u[15]>>>26,pt=u[15]<<6|u[14]>>>26,et=u[25]<<11|u[24]>>>21,rt=u[24]<<11|u[25]>>>21,Ge=u[34]<<15|u[35]>>>17,Mt=u[35]<<15|u[34]>>>17,He=u[45]<<29|u[44]>>>3,ct=u[44]<<29|u[45]>>>3,ft=u[6]<<28|u[7]>>>4,ot=u[7]<<28|u[6]>>>4,Ve=u[17]<<23|u[16]>>>9,It=u[16]<<23|u[17]>>>9,Le=u[26]<<25|u[27]>>>7,vt=u[27]<<25|u[26]>>>7,Ue=u[36]<<21|u[37]>>>11,it=u[37]<<21|u[36]>>>11,Et=u[47]<<24|u[46]>>>8,Ye=u[46]<<24|u[47]>>>8,Qe=u[8]<<27|u[9]>>>5,bt=u[9]<<27|u[8]>>>5,qe=u[18]<<20|u[19]>>>12,st=u[19]<<20|u[18]>>>12,_t=u[29]<<7|u[28]>>>25,Me=u[28]<<7|u[29]>>>25,mt=u[38]<<8|u[39]>>>24,je=u[39]<<8|u[38]>>>24,nt=u[48]<<14|u[49]>>>18,ke=u[49]<<14|u[48]>>>18,u[0]=Fe^~tt&et,u[1]=$^~Te&rt,u[10]=ft^~qe&at,u[11]=ot^~st&Ke,u[20]=lt^~dt&Le,u[21]=ze^~pt&vt,u[30]=Qe^~yt&wt,u[31]=bt^~Je&xt,u[40]=St^~Ve&_t,u[41]=Nt^~It&Me,u[2]=tt^~et&Ue,u[3]=Te^~rt&it,u[12]=qe^~at&ut,u[13]=st^~Ke&ht,u[22]=dt^~Le&mt,u[23]=pt^~vt&je,u[32]=yt^~wt&Ge,u[33]=Je^~xt&Mt,u[42]=Ve^~_t&Ee,u[43]=It^~Me&Se,u[4]=et^~Ue&nt,u[5]=rt^~it&ke,u[14]=at^~ut&He,u[15]=Ke^~ht&ct,u[24]=Le^~mt&gt,u[25]=vt^~je&At,u[34]=wt^~Ge&Et,u[35]=xt^~Mt&Ye,u[44]=_t^~Ee&Ne,u[45]=Me^~Se&Ie,u[6]=Ue^~nt&Fe,u[7]=it^~ke&$,u[16]=ut^~He&ft,u[17]=ht^~ct&ot,u[26]=mt^~gt&lt,u[27]=je^~At&ze,u[36]=Ge^~Et&Qe,u[37]=Mt^~Ye&bt,u[46]=Ee^~Ne&St,u[47]=Se^~Ie&Nt,u[8]=nt^~Fe&tt,u[9]=ke^~$&Te,u[18]=He^~ft&qe,u[19]=ct^~ot&st,u[28]=gt^~lt&dt,u[29]=At^~ze&pt,u[38]=Et^~Qe&yt,u[39]=Ye^~bt&Je,u[48]=Ne^~St&Ve,u[49]=Ie^~Nt&It,u[0]^=C[B],u[1]^=C[B+1]};if(p)e.exports=f;else for(c=0;c<a.length;++c)n[a[c]]=f[a[c]]})()})(Pn);var b0=Pn.exports;const y0=\"logger/5.7.0\";let Dn=!1,Fn=!1;const Cr={debug:1,default:2,info:2,warning:3,error:4,off:5};let Tn=Cr.default,gi=null;function w0(){try{const e=[];if([\"NFD\",\"NFC\",\"NFKD\",\"NFKC\"].forEach(t=>{try{if(\"test\".normalize(t)!==\"test\")throw new Error(\"bad normalize\")}catch{e.push(t)}}),e.length)throw new Error(\"missing \"+e.join(\", \"));if(String.fromCharCode(233).normalize(\"NFD\")!==String.fromCharCode(101,769))throw new Error(\"broken implementation\")}catch(e){return e.message}return null}const Un=w0();var Ai;(function(e){e.DEBUG=\"DEBUG\",e.INFO=\"INFO\",e.WARNING=\"WARNING\",e.ERROR=\"ERROR\",e.OFF=\"OFF\"})(Ai||(Ai={}));var re;(function(e){e.UNKNOWN_ERROR=\"UNKNOWN_ERROR\",e.NOT_IMPLEMENTED=\"NOT_IMPLEMENTED\",e.UNSUPPORTED_OPERATION=\"UNSUPPORTED_OPERATION\",e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.TIMEOUT=\"TIMEOUT\",e.BUFFER_OVERRUN=\"BUFFER_OVERRUN\",e.NUMERIC_FAULT=\"NUMERIC_FAULT\",e.MISSING_NEW=\"MISSING_NEW\",e.INVALID_ARGUMENT=\"INVALID_ARGUMENT\",e.MISSING_ARGUMENT=\"MISSING_ARGUMENT\",e.UNEXPECTED_ARGUMENT=\"UNEXPECTED_ARGUMENT\",e.CALL_EXCEPTION=\"CALL_EXCEPTION\",e.INSUFFICIENT_FUNDS=\"INSUFFICIENT_FUNDS\",e.NONCE_EXPIRED=\"NONCE_EXPIRED\",e.REPLACEMENT_UNDERPRICED=\"REPLACEMENT_UNDERPRICED\",e.UNPREDICTABLE_GAS_LIMIT=\"UNPREDICTABLE_GAS_LIMIT\",e.TRANSACTION_REPLACED=\"TRANSACTION_REPLACED\",e.ACTION_REJECTED=\"ACTION_REJECTED\"})(re||(re={}));const kn=\"0123456789abcdef\";class L{constructor(t){Object.defineProperty(this,\"version\",{enumerable:!0,value:t,writable:!1})}_log(t,r){const i=t.toLowerCase();Cr[i]==null&&this.throwArgumentError(\"invalid log level name\",\"logLevel\",t),!(Tn>Cr[i])&&console.log.apply(console,r)}debug(...t){this._log(L.levels.DEBUG,t)}info(...t){this._log(L.levels.INFO,t)}warn(...t){this._log(L.levels.WARNING,t)}makeError(t,r,i){if(Fn)return this.makeError(\"censored error\",r,{});r||(r=L.errors.UNKNOWN_ERROR),i||(i={});const n=[];Object.keys(i).forEach(b=>{const m=i[b];try{if(m instanceof Uint8Array){let w=\"\";for(let y=0;y<m.length;y++)w+=kn[m[y]>>4],w+=kn[m[y]&15];n.push(b+\"=Uint8Array(0x\"+w+\")\")}else n.push(b+\"=\"+JSON.stringify(m))}catch{n.push(b+\"=\"+JSON.stringify(i[b].toString()))}}),n.push(`code=${r}`),n.push(`version=${this.version}`);const o=t;let h=\"\";switch(r){case re.NUMERIC_FAULT:{h=\"NUMERIC_FAULT\";const b=t;switch(b){case\"overflow\":case\"underflow\":case\"division-by-zero\":h+=\"-\"+b;break;case\"negative-power\":case\"negative-width\":h+=\"-unsupported\";break;case\"unbound-bitwise-result\":h+=\"-unbound-result\";break}break}case re.CALL_EXCEPTION:case re.INSUFFICIENT_FUNDS:case re.MISSING_NEW:case re.NONCE_EXPIRED:case re.REPLACEMENT_UNDERPRICED:case re.TRANSACTION_REPLACED:case re.UNPREDICTABLE_GAS_LIMIT:h=r;break}h&&(t+=\" [ See: https://links.ethers.org/v5-errors-\"+h+\" ]\"),n.length&&(t+=\" (\"+n.join(\", \")+\")\");const p=new Error(t);return p.reason=o,p.code=r,Object.keys(i).forEach(function(b){p[b]=i[b]}),p}throwError(t,r,i){throw this.makeError(t,r,i)}throwArgumentError(t,r,i){return this.throwError(t,L.errors.INVALID_ARGUMENT,{argument:r,value:i})}assert(t,r,i,n){t||this.throwError(r,i,n)}assertArgument(t,r,i,n){t||this.throwArgumentError(r,i,n)}checkNormalize(t){Un&&this.throwError(\"platform missing String.prototype.normalize\",L.errors.UNSUPPORTED_OPERATION,{operation:\"String.prototype.normalize\",form:Un})}checkSafeUint53(t,r){typeof t==\"number\"&&(r==null&&(r=\"value not safe\"),(t<0||t>=9007199254740991)&&this.throwError(r,L.errors.NUMERIC_FAULT,{operation:\"checkSafeInteger\",fault:\"out-of-safe-range\",value:t}),t%1&&this.throwError(r,L.errors.NUMERIC_FAULT,{operation:\"checkSafeInteger\",fault:\"non-integer\",value:t}))}checkArgumentCount(t,r,i){i?i=\": \"+i:i=\"\",t<r&&this.throwError(\"missing argument\"+i,L.errors.MISSING_ARGUMENT,{count:t,expectedCount:r}),t>r&&this.throwError(\"too many arguments\"+i,L.errors.UNEXPECTED_ARGUMENT,{count:t,expectedCount:r})}checkNew(t,r){(t===Object||t==null)&&this.throwError(\"missing new\",L.errors.MISSING_NEW,{name:r.name})}checkAbstract(t,r){t===r?this.throwError(\"cannot instantiate abstract class \"+JSON.stringify(r.name)+\" directly; use a sub-class\",L.errors.UNSUPPORTED_OPERATION,{name:t.name,operation:\"new\"}):(t===Object||t==null)&&this.throwError(\"missing new\",L.errors.MISSING_NEW,{name:r.name})}static globalLogger(){return gi||(gi=new L(y0)),gi}static setCensorship(t,r){if(!t&&r&&this.globalLogger().throwError(\"cannot permanently disable censorship\",L.errors.UNSUPPORTED_OPERATION,{operation:\"setCensorship\"}),Dn){if(!t)return;this.globalLogger().throwError(\"error censorship permanent\",L.errors.UNSUPPORTED_OPERATION,{operation:\"setCensorship\"})}Fn=!!t,Dn=!!r}static setLogLevel(t){const r=Cr[t.toLowerCase()];if(r==null){L.globalLogger().warn(\"invalid log level - \"+t);return}Tn=r}static from(t){return new L(t)}}L.errors=re,L.levels=Ai;const x0=\"bytes/5.7.0\",Dt=new L(x0);function qn(e){return!!e.toHexString}function rr(e){return e.slice||(e.slice=function(){const t=Array.prototype.slice.call(arguments);return rr(new Uint8Array(Array.prototype.slice.apply(e,t)))}),e}function M0(e){return Qt(e)&&!(e.length%2)||ir(e)}function Kn(e){return typeof e==\"number\"&&e==e&&e%1===0}function ir(e){if(e==null)return!1;if(e.constructor===Uint8Array)return!0;if(typeof e==\"string\"||!Kn(e.length)||e.length<0)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(!Kn(r)||r<0||r>=256)return!1}return!0}function Ot(e,t){if(t||(t={}),typeof e==\"number\"){Dt.checkSafeUint53(e,\"invalid arrayify value\");const r=[];for(;e;)r.unshift(e&255),e=parseInt(String(e/256));return r.length===0&&r.push(0),rr(new Uint8Array(r))}if(t.allowMissingPrefix&&typeof e==\"string\"&&e.substring(0,2)!==\"0x\"&&(e=\"0x\"+e),qn(e)&&(e=e.toHexString()),Qt(e)){let r=e.substring(2);r.length%2&&(t.hexPad===\"left\"?r=\"0\"+r:t.hexPad===\"right\"?r+=\"0\":Dt.throwArgumentError(\"hex data is odd-length\",\"value\",e));const i=[];for(let n=0;n<r.length;n+=2)i.push(parseInt(r.substring(n,n+2),16));return rr(new Uint8Array(i))}return ir(e)?rr(new Uint8Array(e)):Dt.throwArgumentError(\"invalid arrayify value\",\"value\",e)}function E0(e){const t=e.map(n=>Ot(n)),r=t.reduce((n,o)=>n+o.length,0),i=new Uint8Array(r);return t.reduce((n,o)=>(i.set(o,n),n+o.length),0),rr(i)}function S0(e,t){e=Ot(e),e.length>t&&Dt.throwArgumentError(\"value out of range\",\"value\",arguments[0]);const r=new Uint8Array(t);return r.set(e,t-e.length),rr(r)}function Qt(e,t){return!(typeof e!=\"string\"||!e.match(/^0x[0-9A-Fa-f]*$/)||t&&e.length!==2+2*t)}const bi=\"0123456789abcdef\";function Kt(e,t){if(t||(t={}),typeof e==\"number\"){Dt.checkSafeUint53(e,\"invalid hexlify value\");let r=\"\";for(;e;)r=bi[e&15]+r,e=Math.floor(e/16);return r.length?(r.length%2&&(r=\"0\"+r),\"0x\"+r):\"0x00\"}if(typeof e==\"bigint\")return e=e.toString(16),e.length%2?\"0x0\"+e:\"0x\"+e;if(t.allowMissingPrefix&&typeof e==\"string\"&&e.substring(0,2)!==\"0x\"&&(e=\"0x\"+e),qn(e))return e.toHexString();if(Qt(e))return e.length%2&&(t.hexPad===\"left\"?e=\"0x0\"+e.substring(2):t.hexPad===\"right\"?e+=\"0\":Dt.throwArgumentError(\"hex data is odd-length\",\"value\",e)),e.toLowerCase();if(ir(e)){let r=\"0x\";for(let i=0;i<e.length;i++){let n=e[i];r+=bi[(n&240)>>4]+bi[n&15]}return r}return Dt.throwArgumentError(\"invalid hexlify value\",\"value\",e)}function N0(e){if(typeof e!=\"string\")e=Kt(e);else if(!Qt(e)||e.length%2)return null;return(e.length-2)/2}function Hn(e,t,r){return typeof e!=\"string\"?e=Kt(e):(!Qt(e)||e.length%2)&&Dt.throwArgumentError(\"invalid hexData\",\"value\",e),t=2+2*t,r!=null?\"0x\"+e.substring(t,2+2*r):\"0x\"+e.substring(t)}function oe(e,t){for(typeof e!=\"string\"?e=Kt(e):Qt(e)||Dt.throwArgumentError(\"invalid hex string\",\"value\",e),e.length>2*t+2&&Dt.throwArgumentError(\"value out of range\",\"value\",arguments[1]);e.length<2*t+2;)e=\"0x0\"+e.substring(2);return e}function zn(e){const t={r:\"0x\",s:\"0x\",_vs:\"0x\",recoveryParam:0,v:0,yParityAndS:\"0x\",compact:\"0x\"};if(M0(e)){let r=Ot(e);r.length===64?(t.v=27+(r[32]>>7),r[32]&=127,t.r=Kt(r.slice(0,32)),t.s=Kt(r.slice(32,64))):r.length===65?(t.r=Kt(r.slice(0,32)),t.s=Kt(r.slice(32,64)),t.v=r[64]):Dt.throwArgumentError(\"invalid signature string\",\"signature\",e),t.v<27&&(t.v===0||t.v===1?t.v+=27:Dt.throwArgumentError(\"signature invalid v byte\",\"signature\",e)),t.recoveryParam=1-t.v%2,t.recoveryParam&&(r[32]|=128),t._vs=Kt(r.slice(32,64))}else{if(t.r=e.r,t.s=e.s,t.v=e.v,t.recoveryParam=e.recoveryParam,t._vs=e._vs,t._vs!=null){const n=S0(Ot(t._vs),32);t._vs=Kt(n);const o=n[0]>=128?1:0;t.recoveryParam==null?t.recoveryParam=o:t.recoveryParam!==o&&Dt.throwArgumentError(\"signature recoveryParam mismatch _vs\",\"signature\",e),n[0]&=127;const h=Kt(n);t.s==null?t.s=h:t.s!==h&&Dt.throwArgumentError(\"signature v mismatch _vs\",\"signature\",e)}if(t.recoveryParam==null)t.v==null?Dt.throwArgumentError(\"signature missing v and recoveryParam\",\"signature\",e):t.v===0||t.v===1?t.recoveryParam=t.v:t.recoveryParam=1-t.v%2;else if(t.v==null)t.v=27+t.recoveryParam;else{const n=t.v===0||t.v===1?t.v:1-t.v%2;t.recoveryParam!==n&&Dt.throwArgumentError(\"signature recoveryParam mismatch v\",\"signature\",e)}t.r==null||!Qt(t.r)?Dt.throwArgumentError(\"signature missing or invalid r\",\"signature\",e):t.r=oe(t.r,32),t.s==null||!Qt(t.s)?Dt.throwArgumentError(\"signature missing or invalid s\",\"signature\",e):t.s=oe(t.s,32);const r=Ot(t.s);r[0]>=128&&Dt.throwArgumentError(\"signature s out of range\",\"signature\",e),t.recoveryParam&&(r[0]|=128);const i=Kt(r);t._vs&&(Qt(t._vs)||Dt.throwArgumentError(\"signature invalid _vs\",\"signature\",e),t._vs=oe(t._vs,32)),t._vs==null?t._vs=i:t._vs!==i&&Dt.throwArgumentError(\"signature _vs mismatch v and s\",\"signature\",e)}return t.yParityAndS=t._vs,t.compact=t.r+t.yParityAndS.substring(2),t}function yi(e){return\"0x\"+b0.keccak_256(Ot(e))}var Ln={exports:{}},I0={},_0=Object.freeze({__proto__:null,default:I0}),B0=A0(_0);(function(e){(function(t,r){function i(A,f){if(!A)throw new Error(f||\"Assertion failed\")}function n(A,f){A.super_=f;var a=function(){};a.prototype=f.prototype,A.prototype=new a,A.prototype.constructor=A}function o(A,f,a){if(o.isBN(A))return A;this.negative=0,this.words=null,this.length=0,this.red=null,A!==null&&((f===\"le\"||f===\"be\")&&(a=f,f=10),this._init(A||0,f||10,a||\"be\"))}typeof t==\"object\"?t.exports=o:r.BN=o,o.BN=o,o.wordSize=26;var h;try{typeof window<\"u\"&&typeof window.Buffer<\"u\"?h=window.Buffer:h=B0.Buffer}catch{}o.isBN=function(f){return f instanceof o?!0:f!==null&&typeof f==\"object\"&&f.constructor.wordSize===o.wordSize&&Array.isArray(f.words)},o.max=function(f,a){return f.cmp(a)>0?f:a},o.min=function(f,a){return f.cmp(a)<0?f:a},o.prototype._init=function(f,a,c){if(typeof f==\"number\")return this._initNumber(f,a,c);if(typeof f==\"object\")return this._initArray(f,a,c);a===\"hex\"&&(a=16),i(a===(a|0)&&a>=2&&a<=36),f=f.toString().replace(/\\s+/g,\"\");var d=0;f[0]===\"-\"&&(d++,this.negative=1),d<f.length&&(a===16?this._parseHex(f,d,c):(this._parseBase(f,a,d),c===\"le\"&&this._initArray(this.toArray(),a,c)))},o.prototype._initNumber=function(f,a,c){f<0&&(this.negative=1,f=-f),f<67108864?(this.words=[f&67108863],this.length=1):f<4503599627370496?(this.words=[f&67108863,f/67108864&67108863],this.length=2):(i(f<9007199254740992),this.words=[f&67108863,f/67108864&67108863,1],this.length=3),c===\"le\"&&this._initArray(this.toArray(),a,c)},o.prototype._initArray=function(f,a,c){if(i(typeof f.length==\"number\"),f.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(f.length/3),this.words=new Array(this.length);for(var d=0;d<this.length;d++)this.words[d]=0;var g,x,M=0;if(c===\"be\")for(d=f.length-1,g=0;d>=0;d-=3)x=f[d]|f[d-1]<<8|f[d-2]<<16,this.words[g]|=x<<M&67108863,this.words[g+1]=x>>>26-M&67108863,M+=24,M>=26&&(M-=26,g++);else if(c===\"le\")for(d=0,g=0;d<f.length;d+=3)x=f[d]|f[d+1]<<8|f[d+2]<<16,this.words[g]|=x<<M&67108863,this.words[g+1]=x>>>26-M&67108863,M+=24,M>=26&&(M-=26,g++);return this._strip()};function p(A,f){var a=A.charCodeAt(f);if(a>=48&&a<=57)return a-48;if(a>=65&&a<=70)return a-55;if(a>=97&&a<=102)return a-87;i(!1,\"Invalid character in \"+A)}function b(A,f,a){var c=p(A,a);return a-1>=f&&(c|=p(A,a-1)<<4),c}o.prototype._parseHex=function(f,a,c){this.length=Math.ceil((f.length-a)/6),this.words=new Array(this.length);for(var d=0;d<this.length;d++)this.words[d]=0;var g=0,x=0,M;if(c===\"be\")for(d=f.length-1;d>=a;d-=2)M=b(f,a,d)<<g,this.words[x]|=M&67108863,g>=18?(g-=18,x+=1,this.words[x]|=M>>>26):g+=8;else{var l=f.length-a;for(d=l%2===0?a+1:a;d<f.length;d+=2)M=b(f,a,d)<<g,this.words[x]|=M&67108863,g>=18?(g-=18,x+=1,this.words[x]|=M>>>26):g+=8}this._strip()};function m(A,f,a,c){for(var d=0,g=0,x=Math.min(A.length,a),M=f;M<x;M++){var l=A.charCodeAt(M)-48;d*=c,l>=49?g=l-49+10:l>=17?g=l-17+10:g=l,i(l>=0&&g<c,\"Invalid character\"),d+=g}return d}o.prototype._parseBase=function(f,a,c){this.words=[0],this.length=1;for(var d=0,g=1;g<=67108863;g*=a)d++;d--,g=g/a|0;for(var x=f.length-c,M=x%d,l=Math.min(x,x-M)+c,s=0,v=c;v<l;v+=d)s=m(f,v,v+d,a),this.imuln(g),this.words[0]+s<67108864?this.words[0]+=s:this._iaddn(s);if(M!==0){var k=1;for(s=m(f,v,f.length,a),v=0;v<M;v++)k*=a;this.imuln(k),this.words[0]+s<67108864?this.words[0]+=s:this._iaddn(s)}this._strip()},o.prototype.copy=function(f){f.words=new Array(this.length);for(var a=0;a<this.length;a++)f.words[a]=this.words[a];f.length=this.length,f.negative=this.negative,f.red=this.red};function w(A,f){A.words=f.words,A.length=f.length,A.negative=f.negative,A.red=f.red}if(o.prototype._move=function(f){w(f,this)},o.prototype.clone=function(){var f=new o(null);return this.copy(f),f},o.prototype._expand=function(f){for(;this.length<f;)this.words[this.length++]=0;return this},o.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},o.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol<\"u\"&&typeof Symbol.for==\"function\")try{o.prototype[Symbol.for(\"nodejs.util.inspect.custom\")]=y}catch{o.prototype.inspect=y}else o.prototype.inspect=y;function y(){return(this.red?\"<BN-R: \":\"<BN: \")+this.toString(16)+\">\"}var S=[\"\",\"0\",\"00\",\"000\",\"0000\",\"00000\",\"000000\",\"0000000\",\"00000000\",\"000000000\",\"0000000000\",\"00000000000\",\"000000000000\",\"0000000000000\",\"00000000000000\",\"000000000000000\",\"0000000000000000\",\"00000000000000000\",\"000000000000000000\",\"0000000000000000000\",\"00000000000000000000\",\"000000000000000000000\",\"0000000000000000000000\",\"00000000000000000000000\",\"000000000000000000000000\",\"0000000000000000000000000\"],I=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],N=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];o.prototype.toString=function(f,a){f=f||10,a=a|0||1;var c;if(f===16||f===\"hex\"){c=\"\";for(var d=0,g=0,x=0;x<this.length;x++){var M=this.words[x],l=((M<<d|g)&16777215).toString(16);g=M>>>24-d&16777215,d+=2,d>=26&&(d-=26,x--),g!==0||x!==this.length-1?c=S[6-l.length]+l+c:c=l+c}for(g!==0&&(c=g.toString(16)+c);c.length%a!==0;)c=\"0\"+c;return this.negative!==0&&(c=\"-\"+c),c}if(f===(f|0)&&f>=2&&f<=36){var s=I[f],v=N[f];c=\"\";var k=this.clone();for(k.negative=0;!k.isZero();){var u=k.modrn(v).toString(f);k=k.idivn(v),k.isZero()?c=u+c:c=S[s-u.length]+u+c}for(this.isZero()&&(c=\"0\"+c);c.length%a!==0;)c=\"0\"+c;return this.negative!==0&&(c=\"-\"+c),c}i(!1,\"Base should be between 2 and 36\")},o.prototype.toNumber=function(){var f=this.words[0];return this.length===2?f+=this.words[1]*67108864:this.length===3&&this.words[2]===1?f+=4503599627370496+this.words[1]*67108864:this.length>2&&i(!1,\"Number can only safely store up to 53 bits\"),this.negative!==0?-f:f},o.prototype.toJSON=function(){return this.toString(16,2)},h&&(o.prototype.toBuffer=function(f,a){return this.toArrayLike(h,f,a)}),o.prototype.toArray=function(f,a){return this.toArrayLike(Array,f,a)};var C=function(f,a){return f.allocUnsafe?f.allocUnsafe(a):new f(a)};o.prototype.toArrayLike=function(f,a,c){this._strip();var d=this.byteLength(),g=c||Math.max(1,d);i(d<=g,\"byte array longer than desired length\"),i(g>0,\"Requested array length <= 0\");var x=C(f,g),M=a===\"le\"?\"LE\":\"BE\";return this[\"_toArrayLike\"+M](x,d),x},o.prototype._toArrayLikeLE=function(f,a){for(var c=0,d=0,g=0,x=0;g<this.length;g++){var M=this.words[g]<<x|d;f[c++]=M&255,c<f.length&&(f[c++]=M>>8&255),c<f.length&&(f[c++]=M>>16&255),x===6?(c<f.length&&(f[c++]=M>>24&255),d=0,x=0):(d=M>>>24,x+=2)}if(c<f.length)for(f[c++]=d;c<f.length;)f[c++]=0},o.prototype._toArrayLikeBE=function(f,a){for(var c=f.length-1,d=0,g=0,x=0;g<this.length;g++){var M=this.words[g]<<x|d;f[c--]=M&255,c>=0&&(f[c--]=M>>8&255),c>=0&&(f[c--]=M>>16&255),x===6?(c>=0&&(f[c--]=M>>24&255),d=0,x=0):(d=M>>>24,x+=2)}if(c>=0)for(f[c--]=d;c>=0;)f[c--]=0},Math.clz32?o.prototype._countBits=function(f){return 32-Math.clz32(f)}:o.prototype._countBits=function(f){var a=f,c=0;return a>=4096&&(c+=13,a>>>=13),a>=64&&(c+=7,a>>>=7),a>=8&&(c+=4,a>>>=4),a>=2&&(c+=2,a>>>=2),c+a},o.prototype._zeroBits=function(f){if(f===0)return 26;var a=f,c=0;return a&8191||(c+=13,a>>>=13),a&127||(c+=7,a>>>=7),a&15||(c+=4,a>>>=4),a&3||(c+=2,a>>>=2),a&1||c++,c},o.prototype.bitLength=function(){var f=this.words[this.length-1],a=this._countBits(f);return(this.length-1)*26+a};function F(A){for(var f=new Array(A.bitLength()),a=0;a<f.length;a++){var c=a/26|0,d=a%26;f[a]=A.words[c]>>>d&1}return f}o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var f=0,a=0;a<this.length;a++){var c=this._zeroBits(this.words[a]);if(f+=c,c!==26)break}return f},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(f){return this.negative!==0?this.abs().inotn(f).iaddn(1):this.clone()},o.prototype.fromTwos=function(f){return this.testn(f-1)?this.notn(f).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return this.negative!==0},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(f){for(;this.length<f.length;)this.words[this.length++]=0;for(var a=0;a<f.length;a++)this.words[a]=this.words[a]|f.words[a];return this._strip()},o.prototype.ior=function(f){return i((this.negative|f.negative)===0),this.iuor(f)},o.prototype.or=function(f){return this.length>f.length?this.clone().ior(f):f.clone().ior(this)},o.prototype.uor=function(f){return this.length>f.length?this.clone().iuor(f):f.clone().iuor(this)},o.prototype.iuand=function(f){var a;this.length>f.length?a=f:a=this;for(var c=0;c<a.length;c++)this.words[c]=this.words[c]&f.words[c];return this.length=a.length,this._strip()},o.prototype.iand=function(f){return i((this.negative|f.negative)===0),this.iuand(f)},o.prototype.and=function(f){return this.length>f.length?this.clone().iand(f):f.clone().iand(this)},o.prototype.uand=function(f){return this.length>f.length?this.clone().iuand(f):f.clone().iuand(this)},o.prototype.iuxor=function(f){var a,c;this.length>f.length?(a=this,c=f):(a=f,c=this);for(var d=0;d<c.length;d++)this.words[d]=a.words[d]^c.words[d];if(this!==a)for(;d<a.length;d++)this.words[d]=a.words[d];return this.length=a.length,this._strip()},o.prototype.ixor=function(f){return i((this.negative|f.negative)===0),this.iuxor(f)},o.prototype.xor=function(f){return this.length>f.length?this.clone().ixor(f):f.clone().ixor(this)},o.prototype.uxor=function(f){return this.length>f.length?this.clone().iuxor(f):f.clone().iuxor(this)},o.prototype.inotn=function(f){i(typeof f==\"number\"&&f>=0);var a=Math.ceil(f/26)|0,c=f%26;this._expand(a),c>0&&a--;for(var d=0;d<a;d++)this.words[d]=~this.words[d]&67108863;return c>0&&(this.words[d]=~this.words[d]&67108863>>26-c),this._strip()},o.prototype.notn=function(f){return this.clone().inotn(f)},o.prototype.setn=function(f,a){i(typeof f==\"number\"&&f>=0);var c=f/26|0,d=f%26;return this._expand(c+1),a?this.words[c]=this.words[c]|1<<d:this.words[c]=this.words[c]&~(1<<d),this._strip()},o.prototype.iadd=function(f){var a;if(this.negative!==0&&f.negative===0)return this.negative=0,a=this.isub(f),this.negative^=1,this._normSign();if(this.negative===0&&f.negative!==0)return f.negative=0,a=this.isub(f),f.negative=1,a._normSign();var c,d;this.length>f.length?(c=this,d=f):(c=f,d=this);for(var g=0,x=0;x<d.length;x++)a=(c.words[x]|0)+(d.words[x]|0)+g,this.words[x]=a&67108863,g=a>>>26;for(;g!==0&&x<c.length;x++)a=(c.words[x]|0)+g,this.words[x]=a&67108863,g=a>>>26;if(this.length=c.length,g!==0)this.words[this.length]=g,this.length++;else if(c!==this)for(;x<c.length;x++)this.words[x]=c.words[x];return this},o.prototype.add=function(f){var a;return f.negative!==0&&this.negative===0?(f.negative=0,a=this.sub(f),f.negative^=1,a):f.negative===0&&this.negative!==0?(this.negative=0,a=f.sub(this),this.negative=1,a):this.length>f.length?this.clone().iadd(f):f.clone().iadd(this)},o.prototype.isub=function(f){if(f.negative!==0){f.negative=0;var a=this.iadd(f);return f.negative=1,a._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(f),this.negative=1,this._normSign();var c=this.cmp(f);if(c===0)return this.negative=0,this.length=1,this.words[0]=0,this;var d,g;c>0?(d=this,g=f):(d=f,g=this);for(var x=0,M=0;M<g.length;M++)a=(d.words[M]|0)-(g.words[M]|0)+x,x=a>>26,this.words[M]=a&67108863;for(;x!==0&&M<d.length;M++)a=(d.words[M]|0)+x,x=a>>26,this.words[M]=a&67108863;if(x===0&&M<d.length&&d!==this)for(;M<d.length;M++)this.words[M]=d.words[M];return this.length=Math.max(this.length,M),d!==this&&(this.negative=1),this._strip()},o.prototype.sub=function(f){return this.clone().isub(f)};function U(A,f,a){a.negative=f.negative^A.negative;var c=A.length+f.length|0;a.length=c,c=c-1|0;var d=A.words[0]|0,g=f.words[0]|0,x=d*g,M=x&67108863,l=x/67108864|0;a.words[0]=M;for(var s=1;s<c;s++){for(var v=l>>>26,k=l&67108863,u=Math.min(s,f.length-1),E=Math.max(0,s-A.length+1);E<=u;E++){var _=s-E|0;d=A.words[_]|0,g=f.words[E]|0,x=d*g+k,v+=x/67108864|0,k=x&67108863}a.words[s]=k|0,l=v|0}return l!==0?a.words[s]=l|0:a.length--,a._strip()}var J=function(f,a,c){var d=f.words,g=a.words,x=c.words,M=0,l,s,v,k=d[0]|0,u=k&8191,E=k>>>13,_=d[1]|0,B=_&8191,R=_>>>13,T=d[2]|0,P=T&8191,O=T>>>13,Ct=d[3]|0,D=Ct&8191,q=Ct>>>13,De=d[4]|0,X=De&8191,Z=De>>>13,Fe=d[5]|0,$=Fe&8191,tt=Fe>>>13,Te=d[6]|0,et=Te&8191,rt=Te>>>13,Ue=d[7]|0,it=Ue&8191,nt=Ue>>>13,ke=d[8]|0,ft=ke&8191,ot=ke>>>13,qe=d[9]|0,st=qe&8191,at=qe>>>13,Ke=g[0]|0,ut=Ke&8191,ht=Ke>>>13,He=g[1]|0,ct=He&8191,lt=He>>>13,ze=g[2]|0,dt=ze&8191,pt=ze>>>13,Le=g[3]|0,vt=Le&8191,mt=Le>>>13,je=g[4]|0,gt=je&8191,At=je>>>13,Qe=g[5]|0,bt=Qe&8191,yt=Qe>>>13,Je=g[6]|0,wt=Je&8191,xt=Je>>>13,Ge=g[7]|0,Mt=Ge&8191,Et=Ge>>>13,Ye=g[8]|0,St=Ye&8191,Nt=Ye>>>13,Ve=g[9]|0,It=Ve&8191,_t=Ve>>>13;c.negative=f.negative^a.negative,c.length=19,l=Math.imul(u,ut),s=Math.imul(u,ht),s=s+Math.imul(E,ut)|0,v=Math.imul(E,ht);var Me=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(Me>>>26)|0,Me&=67108863,l=Math.imul(B,ut),s=Math.imul(B,ht),s=s+Math.imul(R,ut)|0,v=Math.imul(R,ht),l=l+Math.imul(u,ct)|0,s=s+Math.imul(u,lt)|0,s=s+Math.imul(E,ct)|0,v=v+Math.imul(E,lt)|0;var Ee=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,l=Math.imul(P,ut),s=Math.imul(P,ht),s=s+Math.imul(O,ut)|0,v=Math.imul(O,ht),l=l+Math.imul(B,ct)|0,s=s+Math.imul(B,lt)|0,s=s+Math.imul(R,ct)|0,v=v+Math.imul(R,lt)|0,l=l+Math.imul(u,dt)|0,s=s+Math.imul(u,pt)|0,s=s+Math.imul(E,dt)|0,v=v+Math.imul(E,pt)|0;var Se=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(Se>>>26)|0,Se&=67108863,l=Math.imul(D,ut),s=Math.imul(D,ht),s=s+Math.imul(q,ut)|0,v=Math.imul(q,ht),l=l+Math.imul(P,ct)|0,s=s+Math.imul(P,lt)|0,s=s+Math.imul(O,ct)|0,v=v+Math.imul(O,lt)|0,l=l+Math.imul(B,dt)|0,s=s+Math.imul(B,pt)|0,s=s+Math.imul(R,dt)|0,v=v+Math.imul(R,pt)|0,l=l+Math.imul(u,vt)|0,s=s+Math.imul(u,mt)|0,s=s+Math.imul(E,vt)|0,v=v+Math.imul(E,mt)|0;var Ne=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,l=Math.imul(X,ut),s=Math.imul(X,ht),s=s+Math.imul(Z,ut)|0,v=Math.imul(Z,ht),l=l+Math.imul(D,ct)|0,s=s+Math.imul(D,lt)|0,s=s+Math.imul(q,ct)|0,v=v+Math.imul(q,lt)|0,l=l+Math.imul(P,dt)|0,s=s+Math.imul(P,pt)|0,s=s+Math.imul(O,dt)|0,v=v+Math.imul(O,pt)|0,l=l+Math.imul(B,vt)|0,s=s+Math.imul(B,mt)|0,s=s+Math.imul(R,vt)|0,v=v+Math.imul(R,mt)|0,l=l+Math.imul(u,gt)|0,s=s+Math.imul(u,At)|0,s=s+Math.imul(E,gt)|0,v=v+Math.imul(E,At)|0;var Ie=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(Ie>>>26)|0,Ie&=67108863,l=Math.imul($,ut),s=Math.imul($,ht),s=s+Math.imul(tt,ut)|0,v=Math.imul(tt,ht),l=l+Math.imul(X,ct)|0,s=s+Math.imul(X,lt)|0,s=s+Math.imul(Z,ct)|0,v=v+Math.imul(Z,lt)|0,l=l+Math.imul(D,dt)|0,s=s+Math.imul(D,pt)|0,s=s+Math.imul(q,dt)|0,v=v+Math.imul(q,pt)|0,l=l+Math.imul(P,vt)|0,s=s+Math.imul(P,mt)|0,s=s+Math.imul(O,vt)|0,v=v+Math.imul(O,mt)|0,l=l+Math.imul(B,gt)|0,s=s+Math.imul(B,At)|0,s=s+Math.imul(R,gt)|0,v=v+Math.imul(R,At)|0,l=l+Math.imul(u,bt)|0,s=s+Math.imul(u,yt)|0,s=s+Math.imul(E,bt)|0,v=v+Math.imul(E,yt)|0;var Wr=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(Wr>>>26)|0,Wr&=67108863,l=Math.imul(et,ut),s=Math.imul(et,ht),s=s+Math.imul(rt,ut)|0,v=Math.imul(rt,ht),l=l+Math.imul($,ct)|0,s=s+Math.imul($,lt)|0,s=s+Math.imul(tt,ct)|0,v=v+Math.imul(tt,lt)|0,l=l+Math.imul(X,dt)|0,s=s+Math.imul(X,pt)|0,s=s+Math.imul(Z,dt)|0,v=v+Math.imul(Z,pt)|0,l=l+Math.imul(D,vt)|0,s=s+Math.imul(D,mt)|0,s=s+Math.imul(q,vt)|0,v=v+Math.imul(q,mt)|0,l=l+Math.imul(P,gt)|0,s=s+Math.imul(P,At)|0,s=s+Math.imul(O,gt)|0,v=v+Math.imul(O,At)|0,l=l+Math.imul(B,bt)|0,s=s+Math.imul(B,yt)|0,s=s+Math.imul(R,bt)|0,v=v+Math.imul(R,yt)|0,l=l+Math.imul(u,wt)|0,s=s+Math.imul(u,xt)|0,s=s+Math.imul(E,wt)|0,v=v+Math.imul(E,xt)|0;var Xr=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(Xr>>>26)|0,Xr&=67108863,l=Math.imul(it,ut),s=Math.imul(it,ht),s=s+Math.imul(nt,ut)|0,v=Math.imul(nt,ht),l=l+Math.imul(et,ct)|0,s=s+Math.imul(et,lt)|0,s=s+Math.imul(rt,ct)|0,v=v+Math.imul(rt,lt)|0,l=l+Math.imul($,dt)|0,s=s+Math.imul($,pt)|0,s=s+Math.imul(tt,dt)|0,v=v+Math.imul(tt,pt)|0,l=l+Math.imul(X,vt)|0,s=s+Math.imul(X,mt)|0,s=s+Math.imul(Z,vt)|0,v=v+Math.imul(Z,mt)|0,l=l+Math.imul(D,gt)|0,s=s+Math.imul(D,At)|0,s=s+Math.imul(q,gt)|0,v=v+Math.imul(q,At)|0,l=l+Math.imul(P,bt)|0,s=s+Math.imul(P,yt)|0,s=s+Math.imul(O,bt)|0,v=v+Math.imul(O,yt)|0,l=l+Math.imul(B,wt)|0,s=s+Math.imul(B,xt)|0,s=s+Math.imul(R,wt)|0,v=v+Math.imul(R,xt)|0,l=l+Math.imul(u,Mt)|0,s=s+Math.imul(u,Et)|0,s=s+Math.imul(E,Mt)|0,v=v+Math.imul(E,Et)|0;var Zr=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(Zr>>>26)|0,Zr&=67108863,l=Math.imul(ft,ut),s=Math.imul(ft,ht),s=s+Math.imul(ot,ut)|0,v=Math.imul(ot,ht),l=l+Math.imul(it,ct)|0,s=s+Math.imul(it,lt)|0,s=s+Math.imul(nt,ct)|0,v=v+Math.imul(nt,lt)|0,l=l+Math.imul(et,dt)|0,s=s+Math.imul(et,pt)|0,s=s+Math.imul(rt,dt)|0,v=v+Math.imul(rt,pt)|0,l=l+Math.imul($,vt)|0,s=s+Math.imul($,mt)|0,s=s+Math.imul(tt,vt)|0,v=v+Math.imul(tt,mt)|0,l=l+Math.imul(X,gt)|0,s=s+Math.imul(X,At)|0,s=s+Math.imul(Z,gt)|0,v=v+Math.imul(Z,At)|0,l=l+Math.imul(D,bt)|0,s=s+Math.imul(D,yt)|0,s=s+Math.imul(q,bt)|0,v=v+Math.imul(q,yt)|0,l=l+Math.imul(P,wt)|0,s=s+Math.imul(P,xt)|0,s=s+Math.imul(O,wt)|0,v=v+Math.imul(O,xt)|0,l=l+Math.imul(B,Mt)|0,s=s+Math.imul(B,Et)|0,s=s+Math.imul(R,Mt)|0,v=v+Math.imul(R,Et)|0,l=l+Math.imul(u,St)|0,s=s+Math.imul(u,Nt)|0,s=s+Math.imul(E,St)|0,v=v+Math.imul(E,Nt)|0;var $r=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+($r>>>26)|0,$r&=67108863,l=Math.imul(st,ut),s=Math.imul(st,ht),s=s+Math.imul(at,ut)|0,v=Math.imul(at,ht),l=l+Math.imul(ft,ct)|0,s=s+Math.imul(ft,lt)|0,s=s+Math.imul(ot,ct)|0,v=v+Math.imul(ot,lt)|0,l=l+Math.imul(it,dt)|0,s=s+Math.imul(it,pt)|0,s=s+Math.imul(nt,dt)|0,v=v+Math.imul(nt,pt)|0,l=l+Math.imul(et,vt)|0,s=s+Math.imul(et,mt)|0,s=s+Math.imul(rt,vt)|0,v=v+Math.imul(rt,mt)|0,l=l+Math.imul($,gt)|0,s=s+Math.imul($,At)|0,s=s+Math.imul(tt,gt)|0,v=v+Math.imul(tt,At)|0,l=l+Math.imul(X,bt)|0,s=s+Math.imul(X,yt)|0,s=s+Math.imul(Z,bt)|0,v=v+Math.imul(Z,yt)|0,l=l+Math.imul(D,wt)|0,s=s+Math.imul(D,xt)|0,s=s+Math.imul(q,wt)|0,v=v+Math.imul(q,xt)|0,l=l+Math.imul(P,Mt)|0,s=s+Math.imul(P,Et)|0,s=s+Math.imul(O,Mt)|0,v=v+Math.imul(O,Et)|0,l=l+Math.imul(B,St)|0,s=s+Math.imul(B,Nt)|0,s=s+Math.imul(R,St)|0,v=v+Math.imul(R,Nt)|0,l=l+Math.imul(u,It)|0,s=s+Math.imul(u,_t)|0,s=s+Math.imul(E,It)|0,v=v+Math.imul(E,_t)|0;var ti=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(ti>>>26)|0,ti&=67108863,l=Math.imul(st,ct),s=Math.imul(st,lt),s=s+Math.imul(at,ct)|0,v=Math.imul(at,lt),l=l+Math.imul(ft,dt)|0,s=s+Math.imul(ft,pt)|0,s=s+Math.imul(ot,dt)|0,v=v+Math.imul(ot,pt)|0,l=l+Math.imul(it,vt)|0,s=s+Math.imul(it,mt)|0,s=s+Math.imul(nt,vt)|0,v=v+Math.imul(nt,mt)|0,l=l+Math.imul(et,gt)|0,s=s+Math.imul(et,At)|0,s=s+Math.imul(rt,gt)|0,v=v+Math.imul(rt,At)|0,l=l+Math.imul($,bt)|0,s=s+Math.imul($,yt)|0,s=s+Math.imul(tt,bt)|0,v=v+Math.imul(tt,yt)|0,l=l+Math.imul(X,wt)|0,s=s+Math.imul(X,xt)|0,s=s+Math.imul(Z,wt)|0,v=v+Math.imul(Z,xt)|0,l=l+Math.imul(D,Mt)|0,s=s+Math.imul(D,Et)|0,s=s+Math.imul(q,Mt)|0,v=v+Math.imul(q,Et)|0,l=l+Math.imul(P,St)|0,s=s+Math.imul(P,Nt)|0,s=s+Math.imul(O,St)|0,v=v+Math.imul(O,Nt)|0,l=l+Math.imul(B,It)|0,s=s+Math.imul(B,_t)|0,s=s+Math.imul(R,It)|0,v=v+Math.imul(R,_t)|0;var ei=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(ei>>>26)|0,ei&=67108863,l=Math.imul(st,dt),s=Math.imul(st,pt),s=s+Math.imul(at,dt)|0,v=Math.imul(at,pt),l=l+Math.imul(ft,vt)|0,s=s+Math.imul(ft,mt)|0,s=s+Math.imul(ot,vt)|0,v=v+Math.imul(ot,mt)|0,l=l+Math.imul(it,gt)|0,s=s+Math.imul(it,At)|0,s=s+Math.imul(nt,gt)|0,v=v+Math.imul(nt,At)|0,l=l+Math.imul(et,bt)|0,s=s+Math.imul(et,yt)|0,s=s+Math.imul(rt,bt)|0,v=v+Math.imul(rt,yt)|0,l=l+Math.imul($,wt)|0,s=s+Math.imul($,xt)|0,s=s+Math.imul(tt,wt)|0,v=v+Math.imul(tt,xt)|0,l=l+Math.imul(X,Mt)|0,s=s+Math.imul(X,Et)|0,s=s+Math.imul(Z,Mt)|0,v=v+Math.imul(Z,Et)|0,l=l+Math.imul(D,St)|0,s=s+Math.imul(D,Nt)|0,s=s+Math.imul(q,St)|0,v=v+Math.imul(q,Nt)|0,l=l+Math.imul(P,It)|0,s=s+Math.imul(P,_t)|0,s=s+Math.imul(O,It)|0,v=v+Math.imul(O,_t)|0;var ri=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(ri>>>26)|0,ri&=67108863,l=Math.imul(st,vt),s=Math.imul(st,mt),s=s+Math.imul(at,vt)|0,v=Math.imul(at,mt),l=l+Math.imul(ft,gt)|0,s=s+Math.imul(ft,At)|0,s=s+Math.imul(ot,gt)|0,v=v+Math.imul(ot,At)|0,l=l+Math.imul(it,bt)|0,s=s+Math.imul(it,yt)|0,s=s+Math.imul(nt,bt)|0,v=v+Math.imul(nt,yt)|0,l=l+Math.imul(et,wt)|0,s=s+Math.imul(et,xt)|0,s=s+Math.imul(rt,wt)|0,v=v+Math.imul(rt,xt)|0,l=l+Math.imul($,Mt)|0,s=s+Math.imul($,Et)|0,s=s+Math.imul(tt,Mt)|0,v=v+Math.imul(tt,Et)|0,l=l+Math.imul(X,St)|0,s=s+Math.imul(X,Nt)|0,s=s+Math.imul(Z,St)|0,v=v+Math.imul(Z,Nt)|0,l=l+Math.imul(D,It)|0,s=s+Math.imul(D,_t)|0,s=s+Math.imul(q,It)|0,v=v+Math.imul(q,_t)|0;var ii=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(ii>>>26)|0,ii&=67108863,l=Math.imul(st,gt),s=Math.imul(st,At),s=s+Math.imul(at,gt)|0,v=Math.imul(at,At),l=l+Math.imul(ft,bt)|0,s=s+Math.imul(ft,yt)|0,s=s+Math.imul(ot,bt)|0,v=v+Math.imul(ot,yt)|0,l=l+Math.imul(it,wt)|0,s=s+Math.imul(it,xt)|0,s=s+Math.imul(nt,wt)|0,v=v+Math.imul(nt,xt)|0,l=l+Math.imul(et,Mt)|0,s=s+Math.imul(et,Et)|0,s=s+Math.imul(rt,Mt)|0,v=v+Math.imul(rt,Et)|0,l=l+Math.imul($,St)|0,s=s+Math.imul($,Nt)|0,s=s+Math.imul(tt,St)|0,v=v+Math.imul(tt,Nt)|0,l=l+Math.imul(X,It)|0,s=s+Math.imul(X,_t)|0,s=s+Math.imul(Z,It)|0,v=v+Math.imul(Z,_t)|0;var ni=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(ni>>>26)|0,ni&=67108863,l=Math.imul(st,bt),s=Math.imul(st,yt),s=s+Math.imul(at,bt)|0,v=Math.imul(at,yt),l=l+Math.imul(ft,wt)|0,s=s+Math.imul(ft,xt)|0,s=s+Math.imul(ot,wt)|0,v=v+Math.imul(ot,xt)|0,l=l+Math.imul(it,Mt)|0,s=s+Math.imul(it,Et)|0,s=s+Math.imul(nt,Mt)|0,v=v+Math.imul(nt,Et)|0,l=l+Math.imul(et,St)|0,s=s+Math.imul(et,Nt)|0,s=s+Math.imul(rt,St)|0,v=v+Math.imul(rt,Nt)|0,l=l+Math.imul($,It)|0,s=s+Math.imul($,_t)|0,s=s+Math.imul(tt,It)|0,v=v+Math.imul(tt,_t)|0;var fi=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(fi>>>26)|0,fi&=67108863,l=Math.imul(st,wt),s=Math.imul(st,xt),s=s+Math.imul(at,wt)|0,v=Math.imul(at,xt),l=l+Math.imul(ft,Mt)|0,s=s+Math.imul(ft,Et)|0,s=s+Math.imul(ot,Mt)|0,v=v+Math.imul(ot,Et)|0,l=l+Math.imul(it,St)|0,s=s+Math.imul(it,Nt)|0,s=s+Math.imul(nt,St)|0,v=v+Math.imul(nt,Nt)|0,l=l+Math.imul(et,It)|0,s=s+Math.imul(et,_t)|0,s=s+Math.imul(rt,It)|0,v=v+Math.imul(rt,_t)|0;var oi=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(oi>>>26)|0,oi&=67108863,l=Math.imul(st,Mt),s=Math.imul(st,Et),s=s+Math.imul(at,Mt)|0,v=Math.imul(at,Et),l=l+Math.imul(ft,St)|0,s=s+Math.imul(ft,Nt)|0,s=s+Math.imul(ot,St)|0,v=v+Math.imul(ot,Nt)|0,l=l+Math.imul(it,It)|0,s=s+Math.imul(it,_t)|0,s=s+Math.imul(nt,It)|0,v=v+Math.imul(nt,_t)|0;var si=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(si>>>26)|0,si&=67108863,l=Math.imul(st,St),s=Math.imul(st,Nt),s=s+Math.imul(at,St)|0,v=Math.imul(at,Nt),l=l+Math.imul(ft,It)|0,s=s+Math.imul(ft,_t)|0,s=s+Math.imul(ot,It)|0,v=v+Math.imul(ot,_t)|0;var ai=(M+l|0)+((s&8191)<<13)|0;M=(v+(s>>>13)|0)+(ai>>>26)|0,ai&=67108863,l=Math.imul(st,It),s=Math.imul(st,_t),s=s+Math.imul(at,It)|0,v=Math.imul(at,_t);var ui=(M+l|0)+((s&8191)<<13)|0;return M=(v+(s>>>13)|0)+(ui>>>26)|0,ui&=67108863,x[0]=Me,x[1]=Ee,x[2]=Se,x[3]=Ne,x[4]=Ie,x[5]=Wr,x[6]=Xr,x[7]=Zr,x[8]=$r,x[9]=ti,x[10]=ei,x[11]=ri,x[12]=ii,x[13]=ni,x[14]=fi,x[15]=oi,x[16]=si,x[17]=ai,x[18]=ui,M!==0&&(x[19]=M,c.length++),c};Math.imul||(J=U);function Bt(A,f,a){a.negative=f.negative^A.negative,a.length=A.length+f.length;for(var c=0,d=0,g=0;g<a.length-1;g++){var x=d;d=0;for(var M=c&67108863,l=Math.min(g,f.length-1),s=Math.max(0,g-A.length+1);s<=l;s++){var v=g-s,k=A.words[v]|0,u=f.words[s]|0,E=k*u,_=E&67108863;x=x+(E/67108864|0)|0,_=_+M|0,M=_&67108863,x=x+(_>>>26)|0,d+=x>>>26,x&=67108863}a.words[g]=M,c=x,x=d}return c!==0?a.words[g]=c:a.length--,a._strip()}function G(A,f,a){return Bt(A,f,a)}o.prototype.mulTo=function(f,a){var c,d=this.length+f.length;return this.length===10&&f.length===10?c=J(this,f,a):d<63?c=U(this,f,a):d<1024?c=Bt(this,f,a):c=G(this,f,a),c},o.prototype.mul=function(f){var a=new o(null);return a.words=new Array(this.length+f.length),this.mulTo(f,a)},o.prototype.mulf=function(f){var a=new o(null);return a.words=new Array(this.length+f.length),G(this,f,a)},o.prototype.imul=function(f){return this.clone().mulTo(f,this)},o.prototype.imuln=function(f){var a=f<0;a&&(f=-f),i(typeof f==\"number\"),i(f<67108864);for(var c=0,d=0;d<this.length;d++){var g=(this.words[d]|0)*f,x=(g&67108863)+(c&67108863);c>>=26,c+=g/67108864|0,c+=x>>>26,this.words[d]=x&67108863}return c!==0&&(this.words[d]=c,this.length++),a?this.ineg():this},o.prototype.muln=function(f){return this.clone().imuln(f)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(f){var a=F(f);if(a.length===0)return new o(1);for(var c=this,d=0;d<a.length&&a[d]===0;d++,c=c.sqr());if(++d<a.length)for(var g=c.sqr();d<a.length;d++,g=g.sqr())a[d]!==0&&(c=c.mul(g));return c},o.prototype.iushln=function(f){i(typeof f==\"number\"&&f>=0);var a=f%26,c=(f-a)/26,d=67108863>>>26-a<<26-a,g;if(a!==0){var x=0;for(g=0;g<this.length;g++){var M=this.words[g]&d,l=(this.words[g]|0)-M<<a;this.words[g]=l|x,x=M>>>26-a}x&&(this.words[g]=x,this.length++)}if(c!==0){for(g=this.length-1;g>=0;g--)this.words[g+c]=this.words[g];for(g=0;g<c;g++)this.words[g]=0;this.length+=c}return this._strip()},o.prototype.ishln=function(f){return i(this.negative===0),this.iushln(f)},o.prototype.iushrn=function(f,a,c){i(typeof f==\"number\"&&f>=0);var d;a?d=(a-a%26)/26:d=0;var g=f%26,x=Math.min((f-g)/26,this.length),M=67108863^67108863>>>g<<g,l=c;if(d-=x,d=Math.max(0,d),l){for(var s=0;s<x;s++)l.words[s]=this.words[s];l.length=x}if(x!==0)if(this.length>x)for(this.length-=x,s=0;s<this.length;s++)this.words[s]=this.words[s+x];else this.words[0]=0,this.length=1;var v=0;for(s=this.length-1;s>=0&&(v!==0||s>=d);s--){var k=this.words[s]|0;this.words[s]=v<<26-g|k>>>g,v=k&M}return l&&v!==0&&(l.words[l.length++]=v),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},o.prototype.ishrn=function(f,a,c){return i(this.negative===0),this.iushrn(f,a,c)},o.prototype.shln=function(f){return this.clone().ishln(f)},o.prototype.ushln=function(f){return this.clone().iushln(f)},o.prototype.shrn=function(f){return this.clone().ishrn(f)},o.prototype.ushrn=function(f){return this.clone().iushrn(f)},o.prototype.testn=function(f){i(typeof f==\"number\"&&f>=0);var a=f%26,c=(f-a)/26,d=1<<a;if(this.length<=c)return!1;var g=this.words[c];return!!(g&d)},o.prototype.imaskn=function(f){i(typeof f==\"number\"&&f>=0);var a=f%26,c=(f-a)/26;if(i(this.negative===0,\"imaskn works only with positive numbers\"),this.length<=c)return this;if(a!==0&&c++,this.length=Math.min(c,this.length),a!==0){var d=67108863^67108863>>>a<<a;this.words[this.length-1]&=d}return this._strip()},o.prototype.maskn=function(f){return this.clone().imaskn(f)},o.prototype.iaddn=function(f){return i(typeof f==\"number\"),i(f<67108864),f<0?this.isubn(-f):this.negative!==0?this.length===1&&(this.words[0]|0)<=f?(this.words[0]=f-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(f),this.negative=1,this):this._iaddn(f)},o.prototype._iaddn=function(f){this.words[0]+=f;for(var a=0;a<this.length&&this.words[a]>=67108864;a++)this.words[a]-=67108864,a===this.length-1?this.words[a+1]=1:this.words[a+1]++;return this.length=Math.max(this.length,a+1),this},o.prototype.isubn=function(f){if(i(typeof f==\"number\"),i(f<67108864),f<0)return this.iaddn(-f);if(this.negative!==0)return this.negative=0,this.iaddn(f),this.negative=1,this;if(this.words[0]-=f,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var a=0;a<this.length&&this.words[a]<0;a++)this.words[a]+=67108864,this.words[a+1]-=1;return this._strip()},o.prototype.addn=function(f){return this.clone().iaddn(f)},o.prototype.subn=function(f){return this.clone().isubn(f)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(f,a,c){var d=f.length+c,g;this._expand(d);var x,M=0;for(g=0;g<f.length;g++){x=(this.words[g+c]|0)+M;var l=(f.words[g]|0)*a;x-=l&67108863,M=(x>>26)-(l/67108864|0),this.words[g+c]=x&67108863}for(;g<this.length-c;g++)x=(this.words[g+c]|0)+M,M=x>>26,this.words[g+c]=x&67108863;if(M===0)return this._strip();for(i(M===-1),M=0,g=0;g<this.length;g++)x=-(this.words[g]|0)+M,M=x>>26,this.words[g]=x&67108863;return this.negative=1,this._strip()},o.prototype._wordDiv=function(f,a){var c=this.length-f.length,d=this.clone(),g=f,x=g.words[g.length-1]|0,M=this._countBits(x);c=26-M,c!==0&&(g=g.ushln(c),d.iushln(c),x=g.words[g.length-1]|0);var l=d.length-g.length,s;if(a!==\"mod\"){s=new o(null),s.length=l+1,s.words=new Array(s.length);for(var v=0;v<s.length;v++)s.words[v]=0}var k=d.clone()._ishlnsubmul(g,1,l);k.negative===0&&(d=k,s&&(s.words[l]=1));for(var u=l-1;u>=0;u--){var E=(d.words[g.length+u]|0)*67108864+(d.words[g.length+u-1]|0);for(E=Math.min(E/x|0,67108863),d._ishlnsubmul(g,E,u);d.negative!==0;)E--,d.negative=0,d._ishlnsubmul(g,1,u),d.isZero()||(d.negative^=1);s&&(s.words[u]=E)}return s&&s._strip(),d._strip(),a!==\"div\"&&c!==0&&d.iushrn(c),{div:s||null,mod:d}},o.prototype.divmod=function(f,a,c){if(i(!f.isZero()),this.isZero())return{div:new o(0),mod:new o(0)};var d,g,x;return this.negative!==0&&f.negative===0?(x=this.neg().divmod(f,a),a!==\"mod\"&&(d=x.div.neg()),a!==\"div\"&&(g=x.mod.neg(),c&&g.negative!==0&&g.iadd(f)),{div:d,mod:g}):this.negative===0&&f.negative!==0?(x=this.divmod(f.neg(),a),a!==\"mod\"&&(d=x.div.neg()),{div:d,mod:x.mod}):this.negative&f.negative?(x=this.neg().divmod(f.neg(),a),a!==\"div\"&&(g=x.mod.neg(),c&&g.negative!==0&&g.isub(f)),{div:x.div,mod:g}):f.length>this.length||this.cmp(f)<0?{div:new o(0),mod:this}:f.length===1?a===\"div\"?{div:this.divn(f.words[0]),mod:null}:a===\"mod\"?{div:null,mod:new o(this.modrn(f.words[0]))}:{div:this.divn(f.words[0]),mod:new o(this.modrn(f.words[0]))}:this._wordDiv(f,a)},o.prototype.div=function(f){return this.divmod(f,\"div\",!1).div},o.prototype.mod=function(f){return this.divmod(f,\"mod\",!1).mod},o.prototype.umod=function(f){return this.divmod(f,\"mod\",!0).mod},o.prototype.divRound=function(f){var a=this.divmod(f);if(a.mod.isZero())return a.div;var c=a.div.negative!==0?a.mod.isub(f):a.mod,d=f.ushrn(1),g=f.andln(1),x=c.cmp(d);return x<0||g===1&&x===0?a.div:a.div.negative!==0?a.div.isubn(1):a.div.iaddn(1)},o.prototype.modrn=function(f){var a=f<0;a&&(f=-f),i(f<=67108863);for(var c=(1<<26)%f,d=0,g=this.length-1;g>=0;g--)d=(c*d+(this.words[g]|0))%f;return a?-d:d},o.prototype.modn=function(f){return this.modrn(f)},o.prototype.idivn=function(f){var a=f<0;a&&(f=-f),i(f<=67108863);for(var c=0,d=this.length-1;d>=0;d--){var g=(this.words[d]|0)+c*67108864;this.words[d]=g/f|0,c=g%f}return this._strip(),a?this.ineg():this},o.prototype.divn=function(f){return this.clone().idivn(f)},o.prototype.egcd=function(f){i(f.negative===0),i(!f.isZero());var a=this,c=f.clone();a.negative!==0?a=a.umod(f):a=a.clone();for(var d=new o(1),g=new o(0),x=new o(0),M=new o(1),l=0;a.isEven()&&c.isEven();)a.iushrn(1),c.iushrn(1),++l;for(var s=c.clone(),v=a.clone();!a.isZero();){for(var k=0,u=1;!(a.words[0]&u)&&k<26;++k,u<<=1);if(k>0)for(a.iushrn(k);k-- >0;)(d.isOdd()||g.isOdd())&&(d.iadd(s),g.isub(v)),d.iushrn(1),g.iushrn(1);for(var E=0,_=1;!(c.words[0]&_)&&E<26;++E,_<<=1);if(E>0)for(c.iushrn(E);E-- >0;)(x.isOdd()||M.isOdd())&&(x.iadd(s),M.isub(v)),x.iushrn(1),M.iushrn(1);a.cmp(c)>=0?(a.isub(c),d.isub(x),g.isub(M)):(c.isub(a),x.isub(d),M.isub(g))}return{a:x,b:M,gcd:c.iushln(l)}},o.prototype._invmp=function(f){i(f.negative===0),i(!f.isZero());var a=this,c=f.clone();a.negative!==0?a=a.umod(f):a=a.clone();for(var d=new o(1),g=new o(0),x=c.clone();a.cmpn(1)>0&&c.cmpn(1)>0;){for(var M=0,l=1;!(a.words[0]&l)&&M<26;++M,l<<=1);if(M>0)for(a.iushrn(M);M-- >0;)d.isOdd()&&d.iadd(x),d.iushrn(1);for(var s=0,v=1;!(c.words[0]&v)&&s<26;++s,v<<=1);if(s>0)for(c.iushrn(s);s-- >0;)g.isOdd()&&g.iadd(x),g.iushrn(1);a.cmp(c)>=0?(a.isub(c),d.isub(g)):(c.isub(a),g.isub(d))}var k;return a.cmpn(1)===0?k=d:k=g,k.cmpn(0)<0&&k.iadd(f),k},o.prototype.gcd=function(f){if(this.isZero())return f.abs();if(f.isZero())return this.abs();var a=this.clone(),c=f.clone();a.negative=0,c.negative=0;for(var d=0;a.isEven()&&c.isEven();d++)a.iushrn(1),c.iushrn(1);do{for(;a.isEven();)a.iushrn(1);for(;c.isEven();)c.iushrn(1);var g=a.cmp(c);if(g<0){var x=a;a=c,c=x}else if(g===0||c.cmpn(1)===0)break;a.isub(c)}while(!0);return c.iushln(d)},o.prototype.invm=function(f){return this.egcd(f).a.umod(f)},o.prototype.isEven=function(){return(this.words[0]&1)===0},o.prototype.isOdd=function(){return(this.words[0]&1)===1},o.prototype.andln=function(f){return this.words[0]&f},o.prototype.bincn=function(f){i(typeof f==\"number\");var a=f%26,c=(f-a)/26,d=1<<a;if(this.length<=c)return this._expand(c+1),this.words[c]|=d,this;for(var g=d,x=c;g!==0&&x<this.length;x++){var M=this.words[x]|0;M+=g,g=M>>>26,M&=67108863,this.words[x]=M}return g!==0&&(this.words[x]=g,this.length++),this},o.prototype.isZero=function(){return this.length===1&&this.words[0]===0},o.prototype.cmpn=function(f){var a=f<0;if(this.negative!==0&&!a)return-1;if(this.negative===0&&a)return 1;this._strip();var c;if(this.length>1)c=1;else{a&&(f=-f),i(f<=67108863,\"Number is too big\");var d=this.words[0]|0;c=d===f?0:d<f?-1:1}return this.negative!==0?-c|0:c},o.prototype.cmp=function(f){if(this.negative!==0&&f.negative===0)return-1;if(this.negative===0&&f.negative!==0)return 1;var a=this.ucmp(f);return this.negative!==0?-a|0:a},o.prototype.ucmp=function(f){if(this.length>f.length)return 1;if(this.length<f.length)return-1;for(var a=0,c=this.length-1;c>=0;c--){var d=this.words[c]|0,g=f.words[c]|0;if(d!==g){d<g?a=-1:d>g&&(a=1);break}}return a},o.prototype.gtn=function(f){return this.cmpn(f)===1},o.prototype.gt=function(f){return this.cmp(f)===1},o.prototype.gten=function(f){return this.cmpn(f)>=0},o.prototype.gte=function(f){return this.cmp(f)>=0},o.prototype.ltn=function(f){return this.cmpn(f)===-1},o.prototype.lt=function(f){return this.cmp(f)===-1},o.prototype.lten=function(f){return this.cmpn(f)<=0},o.prototype.lte=function(f){return this.cmp(f)<=0},o.prototype.eqn=function(f){return this.cmpn(f)===0},o.prototype.eq=function(f){return this.cmp(f)===0},o.red=function(f){return new Y(f)},o.prototype.toRed=function(f){return i(!this.red,\"Already a number in reduction context\"),i(this.negative===0,\"red works only with positives\"),f.convertTo(this)._forceRed(f)},o.prototype.fromRed=function(){return i(this.red,\"fromRed works only with numbers in reduction context\"),this.red.convertFrom(this)},o.prototype._forceRed=function(f){return this.red=f,this},o.prototype.forceRed=function(f){return i(!this.red,\"Already a number in reduction context\"),this._forceRed(f)},o.prototype.redAdd=function(f){return i(this.red,\"redAdd works only with red numbers\"),this.red.add(this,f)},o.prototype.redIAdd=function(f){return i(this.red,\"redIAdd works only with red numbers\"),this.red.iadd(this,f)},o.prototype.redSub=function(f){return i(this.red,\"redSub works only with red numbers\"),this.red.sub(this,f)},o.prototype.redISub=function(f){return i(this.red,\"redISub works only with red numbers\"),this.red.isub(this,f)},o.prototype.redShl=function(f){return i(this.red,\"redShl works only with red numbers\"),this.red.shl(this,f)},o.prototype.redMul=function(f){return i(this.red,\"redMul works only with red numbers\"),this.red._verify2(this,f),this.red.mul(this,f)},o.prototype.redIMul=function(f){return i(this.red,\"redMul works only with red numbers\"),this.red._verify2(this,f),this.red.imul(this,f)},o.prototype.redSqr=function(){return i(this.red,\"redSqr works only with red numbers\"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return i(this.red,\"redISqr works only with red numbers\"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return i(this.red,\"redSqrt works only with red numbers\"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return i(this.red,\"redInvm works only with red numbers\"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return i(this.red,\"redNeg works only with red numbers\"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(f){return i(this.red&&!f.red,\"redPow(normalNum)\"),this.red._verify1(this),this.red.pow(this,f)};var H={k256:null,p224:null,p192:null,p25519:null};function z(A,f){this.name=A,this.p=new o(f,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}z.prototype._tmp=function(){var f=new o(null);return f.words=new Array(Math.ceil(this.n/13)),f},z.prototype.ireduce=function(f){var a=f,c;do this.split(a,this.tmp),a=this.imulK(a),a=a.iadd(this.tmp),c=a.bitLength();while(c>this.n);var d=c<this.n?-1:a.ucmp(this.p);return d===0?(a.words[0]=0,a.length=1):d>0?a.isub(this.p):a.strip!==void 0?a.strip():a._strip(),a},z.prototype.split=function(f,a){f.iushrn(this.n,0,a)},z.prototype.imulK=function(f){return f.imul(this.k)};function Pt(){z.call(this,\"k256\",\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\")}n(Pt,z),Pt.prototype.split=function(f,a){for(var c=4194303,d=Math.min(f.length,9),g=0;g<d;g++)a.words[g]=f.words[g];if(a.length=d,f.length<=9){f.words[0]=0,f.length=1;return}var x=f.words[9];for(a.words[a.length++]=x&c,g=10;g<f.length;g++){var M=f.words[g]|0;f.words[g-10]=(M&c)<<4|x>>>22,x=M}x>>>=22,f.words[g-10]=x,x===0&&f.length>10?f.length-=10:f.length-=9},Pt.prototype.imulK=function(f){f.words[f.length]=0,f.words[f.length+1]=0,f.length+=2;for(var a=0,c=0;c<f.length;c++){var d=f.words[c]|0;a+=d*977,f.words[c]=a&67108863,a=d*64+(a/67108864|0)}return f.words[f.length-1]===0&&(f.length--,f.words[f.length-1]===0&&f.length--),f};function W(){z.call(this,\"p224\",\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\")}n(W,z);function Rt(){z.call(this,\"p192\",\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\")}n(Rt,z);function Yt(){z.call(this,\"25519\",\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\")}n(Yt,z),Yt.prototype.imulK=function(f){for(var a=0,c=0;c<f.length;c++){var d=(f.words[c]|0)*19+a,g=d&67108863;d>>>=26,f.words[c]=g,a=d}return a!==0&&(f.words[f.length++]=a),f},o._prime=function(f){if(H[f])return H[f];var a;if(f===\"k256\")a=new Pt;else if(f===\"p224\")a=new W;else if(f===\"p192\")a=new Rt;else if(f===\"p25519\")a=new Yt;else throw new Error(\"Unknown prime \"+f);return H[f]=a,a};function Y(A){if(typeof A==\"string\"){var f=o._prime(A);this.m=f.p,this.prime=f}else i(A.gtn(1),\"modulus must be greater than 1\"),this.m=A,this.prime=null}Y.prototype._verify1=function(f){i(f.negative===0,\"red works only with positives\"),i(f.red,\"red works only with red numbers\")},Y.prototype._verify2=function(f,a){i((f.negative|a.negative)===0,\"red works only with positives\"),i(f.red&&f.red===a.red,\"red works only with red numbers\")},Y.prototype.imod=function(f){return this.prime?this.prime.ireduce(f)._forceRed(this):(w(f,f.umod(this.m)._forceRed(this)),f)},Y.prototype.neg=function(f){return f.isZero()?f.clone():this.m.sub(f)._forceRed(this)},Y.prototype.add=function(f,a){this._verify2(f,a);var c=f.add(a);return c.cmp(this.m)>=0&&c.isub(this.m),c._forceRed(this)},Y.prototype.iadd=function(f,a){this._verify2(f,a);var c=f.iadd(a);return c.cmp(this.m)>=0&&c.isub(this.m),c},Y.prototype.sub=function(f,a){this._verify2(f,a);var c=f.sub(a);return c.cmpn(0)<0&&c.iadd(this.m),c._forceRed(this)},Y.prototype.isub=function(f,a){this._verify2(f,a);var c=f.isub(a);return c.cmpn(0)<0&&c.iadd(this.m),c},Y.prototype.shl=function(f,a){return this._verify1(f),this.imod(f.ushln(a))},Y.prototype.imul=function(f,a){return this._verify2(f,a),this.imod(f.imul(a))},Y.prototype.mul=function(f,a){return this._verify2(f,a),this.imod(f.mul(a))},Y.prototype.isqr=function(f){return this.imul(f,f.clone())},Y.prototype.sqr=function(f){return this.mul(f,f)},Y.prototype.sqrt=function(f){if(f.isZero())return f.clone();var a=this.m.andln(3);if(i(a%2===1),a===3){var c=this.m.add(new o(1)).iushrn(2);return this.pow(f,c)}for(var d=this.m.subn(1),g=0;!d.isZero()&&d.andln(1)===0;)g++,d.iushrn(1);i(!d.isZero());var x=new o(1).toRed(this),M=x.redNeg(),l=this.m.subn(1).iushrn(1),s=this.m.bitLength();for(s=new o(2*s*s).toRed(this);this.pow(s,l).cmp(M)!==0;)s.redIAdd(M);for(var v=this.pow(s,d),k=this.pow(f,d.addn(1).iushrn(1)),u=this.pow(f,d),E=g;u.cmp(x)!==0;){for(var _=u,B=0;_.cmp(x)!==0;B++)_=_.redSqr();i(B<E);var R=this.pow(v,new o(1).iushln(E-B-1));k=k.redMul(R),v=R.redSqr(),u=u.redMul(v),E=B}return k},Y.prototype.invm=function(f){var a=f._invmp(this.m);return a.negative!==0?(a.negative=0,this.imod(a).redNeg()):this.imod(a)},Y.prototype.pow=function(f,a){if(a.isZero())return new o(1).toRed(this);if(a.cmpn(1)===0)return f.clone();var c=4,d=new Array(1<<c);d[0]=new o(1).toRed(this),d[1]=f;for(var g=2;g<d.length;g++)d[g]=this.mul(d[g-1],f);var x=d[0],M=0,l=0,s=a.bitLength()%26;for(s===0&&(s=26),g=a.length-1;g>=0;g--){for(var v=a.words[g],k=s-1;k>=0;k--){var u=v>>k&1;if(x!==d[0]&&(x=this.sqr(x)),u===0&&M===0){l=0;continue}M<<=1,M|=u,l++,!(l!==c&&(g!==0||k!==0))&&(x=this.mul(x,d[M]),l=0,M=0)}s=26}return x},Y.prototype.convertTo=function(f){var a=f.umod(this.m);return a===f?a.clone():a},Y.prototype.convertFrom=function(f){var a=f.clone();return a.red=null,a},o.mont=function(f){return new Vt(f)};function Vt(A){Y.call(this,A),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}n(Vt,Y),Vt.prototype.convertTo=function(f){return this.imod(f.ushln(this.shift))},Vt.prototype.convertFrom=function(f){var a=this.imod(f.mul(this.rinv));return a.red=null,a},Vt.prototype.imul=function(f,a){if(f.isZero()||a.isZero())return f.words[0]=0,f.length=1,f;var c=f.imul(a),d=c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),g=c.isub(d).iushrn(this.shift),x=g;return g.cmp(this.m)>=0?x=g.isub(this.m):g.cmpn(0)<0&&(x=g.iadd(this.m)),x._forceRed(this)},Vt.prototype.mul=function(f,a){if(f.isZero()||a.isZero())return new o(0)._forceRed(this);var c=f.mul(a),d=c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),g=c.isub(d).iushrn(this.shift),x=g;return g.cmp(this.m)>=0?x=g.isub(this.m):g.cmpn(0)<0&&(x=g.iadd(this.m)),x._forceRed(this)},Vt.prototype.invm=function(f){var a=this.imod(f._invmp(this.m).mul(this.r2));return a._forceRed(this)}})(e,On)})(Ln);var K=Ln.exports;const jn=\"bignumber/5.7.0\";var Rr=K.BN;const Ae=new L(jn),wi={},Qn=9007199254740991;function C0(e){return e!=null&&(V.isBigNumber(e)||typeof e==\"number\"&&e%1===0||typeof e==\"string\"&&!!e.match(/^-?[0-9]+$/)||Qt(e)||typeof e==\"bigint\"||ir(e))}let Jn=!1;class V{constructor(t,r){t!==wi&&Ae.throwError(\"cannot call constructor directly; use BigNumber.from\",L.errors.UNSUPPORTED_OPERATION,{operation:\"new (BigNumber)\"}),this._hex=r,this._isBigNumber=!0,Object.freeze(this)}fromTwos(t){return Lt(j(this).fromTwos(t))}toTwos(t){return Lt(j(this).toTwos(t))}abs(){return this._hex[0]===\"-\"?V.from(this._hex.substring(1)):this}add(t){return Lt(j(this).add(j(t)))}sub(t){return Lt(j(this).sub(j(t)))}div(t){return V.from(t).isZero()&&Wt(\"division-by-zero\",\"div\"),Lt(j(this).div(j(t)))}mul(t){return Lt(j(this).mul(j(t)))}mod(t){const r=j(t);return r.isNeg()&&Wt(\"division-by-zero\",\"mod\"),Lt(j(this).umod(r))}pow(t){const r=j(t);return r.isNeg()&&Wt(\"negative-power\",\"pow\"),Lt(j(this).pow(r))}and(t){const r=j(t);return(this.isNegative()||r.isNeg())&&Wt(\"unbound-bitwise-result\",\"and\"),Lt(j(this).and(r))}or(t){const r=j(t);return(this.isNegative()||r.isNeg())&&Wt(\"unbound-bitwise-result\",\"or\"),Lt(j(this).or(r))}xor(t){const r=j(t);return(this.isNegative()||r.isNeg())&&Wt(\"unbound-bitwise-result\",\"xor\"),Lt(j(this).xor(r))}mask(t){return(this.isNegative()||t<0)&&Wt(\"negative-width\",\"mask\"),Lt(j(this).maskn(t))}shl(t){return(this.isNegative()||t<0)&&Wt(\"negative-width\",\"shl\"),Lt(j(this).shln(t))}shr(t){return(this.isNegative()||t<0)&&Wt(\"negative-width\",\"shr\"),Lt(j(this).shrn(t))}eq(t){return j(this).eq(j(t))}lt(t){return j(this).lt(j(t))}lte(t){return j(this).lte(j(t))}gt(t){return j(this).gt(j(t))}gte(t){return j(this).gte(j(t))}isNegative(){return this._hex[0]===\"-\"}isZero(){return j(this).isZero()}toNumber(){try{return j(this).toNumber()}catch{Wt(\"overflow\",\"toNumber\",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch{}return Ae.throwError(\"this platform does not support BigInt\",L.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){return arguments.length>0&&(arguments[0]===10?Jn||(Jn=!0,Ae.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\")):arguments[0]===16?Ae.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\",L.errors.UNEXPECTED_ARGUMENT,{}):Ae.throwError(\"BigNumber.toString does not accept parameters\",L.errors.UNEXPECTED_ARGUMENT,{})),j(this).toString(10)}toHexString(){return this._hex}toJSON(t){return{type:\"BigNumber\",hex:this.toHexString()}}static from(t){if(t instanceof V)return t;if(typeof t==\"string\")return t.match(/^-?0x[0-9a-f]+$/i)?new V(wi,vr(t)):t.match(/^-?[0-9]+$/)?new V(wi,vr(new Rr(t))):Ae.throwArgumentError(\"invalid BigNumber string\",\"value\",t);if(typeof t==\"number\")return t%1&&Wt(\"underflow\",\"BigNumber.from\",t),(t>=Qn||t<=-Qn)&&Wt(\"overflow\",\"BigNumber.from\",t),V.from(String(t));const r=t;if(typeof r==\"bigint\")return V.from(r.toString());if(ir(r))return V.from(Kt(r));if(r)if(r.toHexString){const i=r.toHexString();if(typeof i==\"string\")return V.from(i)}else{let i=r._hex;if(i==null&&r.type===\"BigNumber\"&&(i=r.hex),typeof i==\"string\"&&(Qt(i)||i[0]===\"-\"&&Qt(i.substring(1))))return V.from(i)}return Ae.throwArgumentError(\"invalid BigNumber value\",\"value\",t)}static isBigNumber(t){return!!(t&&t._isBigNumber)}}function vr(e){if(typeof e!=\"string\")return vr(e.toString(16));if(e[0]===\"-\")return e=e.substring(1),e[0]===\"-\"&&Ae.throwArgumentError(\"invalid hex\",\"value\",e),e=vr(e),e===\"0x00\"?e:\"-\"+e;if(e.substring(0,2)!==\"0x\"&&(e=\"0x\"+e),e===\"0x\")return\"0x00\";for(e.length%2&&(e=\"0x0\"+e.substring(2));e.length>4&&e.substring(0,4)===\"0x00\";)e=\"0x\"+e.substring(4);return e}function Lt(e){return V.from(vr(e))}function j(e){const t=V.from(e).toHexString();return t[0]===\"-\"?new Rr(\"-\"+t.substring(3),16):new Rr(t.substring(2),16)}function Wt(e,t,r){const i={fault:e,operation:t};return r!=null&&(i.value=r),Ae.throwError(e,L.errors.NUMERIC_FAULT,i)}function R0(e){return new Rr(e,36).toString(16)}const Ht=new L(jn),mr={},Gn=V.from(0),Yn=V.from(-1);function Vn(e,t,r,i){const n={fault:t,operation:r};return i!==void 0&&(n.value=i),Ht.throwError(e,L.errors.NUMERIC_FAULT,n)}let gr=\"0\";for(;gr.length<256;)gr+=gr;function xi(e){if(typeof e!=\"number\")try{e=V.from(e).toNumber()}catch{}return typeof e==\"number\"&&e>=0&&e<=256&&!(e%1)?\"1\"+gr.substring(0,e):Ht.throwArgumentError(\"invalid decimal size\",\"decimals\",e)}function Mi(e,t){t==null&&(t=0);const r=xi(t);e=V.from(e);const i=e.lt(Gn);i&&(e=e.mul(Yn));let n=e.mod(r).toString();for(;n.length<r.length-1;)n=\"0\"+n;n=n.match(/^([0-9]*[1-9]|0)(0*)/)[1];const o=e.div(r).toString();return r.length===1?e=o:e=o+\".\"+n,i&&(e=\"-\"+e),e}function be(e,t){t==null&&(t=0);const r=xi(t);(typeof e!=\"string\"||!e.match(/^-?[0-9.]+$/))&&Ht.throwArgumentError(\"invalid decimal value\",\"value\",e);const i=e.substring(0,1)===\"-\";i&&(e=e.substring(1)),e===\".\"&&Ht.throwArgumentError(\"missing value\",\"value\",e);const n=e.split(\".\");n.length>2&&Ht.throwArgumentError(\"too many decimal points\",\"value\",e);let o=n[0],h=n[1];for(o||(o=\"0\"),h||(h=\"0\");h[h.length-1]===\"0\";)h=h.substring(0,h.length-1);for(h.length>r.length-1&&Vn(\"fractional component exceeds decimals\",\"underflow\",\"parseFixed\"),h===\"\"&&(h=\"0\");h.length<r.length-1;)h+=\"0\";const p=V.from(o),b=V.from(h);let m=p.mul(r).add(b);return i&&(m=m.mul(Yn)),m}class dr{constructor(t,r,i,n){t!==mr&&Ht.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\",L.errors.UNSUPPORTED_OPERATION,{operation:\"new FixedFormat\"}),this.signed=r,this.width=i,this.decimals=n,this.name=(r?\"\":\"u\")+\"fixed\"+String(i)+\"x\"+String(n),this._multiplier=xi(n),Object.freeze(this)}static from(t){if(t instanceof dr)return t;typeof t==\"number\"&&(t=`fixed128x${t}`);let r=!0,i=128,n=18;if(typeof t==\"string\"){if(t!==\"fixed\")if(t===\"ufixed\")r=!1;else{const o=t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);o||Ht.throwArgumentError(\"invalid fixed format\",\"format\",t),r=o[1]!==\"u\",i=parseInt(o[2]),n=parseInt(o[3])}}else if(t){const o=(h,p,b)=>t[h]==null?b:(typeof t[h]!==p&&Ht.throwArgumentError(\"invalid fixed format (\"+h+\" not \"+p+\")\",\"format.\"+h,t[h]),t[h]);r=o(\"signed\",\"boolean\",r),i=o(\"width\",\"number\",i),n=o(\"decimals\",\"number\",n)}return i%8&&Ht.throwArgumentError(\"invalid fixed format width (not byte aligned)\",\"format.width\",i),n>80&&Ht.throwArgumentError(\"invalid fixed format (decimals too large)\",\"format.decimals\",n),new dr(mr,r,i,n)}}class Ut{constructor(t,r,i,n){t!==mr&&Ht.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\",L.errors.UNSUPPORTED_OPERATION,{operation:\"new FixedFormat\"}),this.format=n,this._hex=r,this._value=i,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(t){this.format.name!==t.format.name&&Ht.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\",\"other\",t)}addUnsafe(t){this._checkFormat(t);const r=be(this._value,this.format.decimals),i=be(t._value,t.format.decimals);return Ut.fromValue(r.add(i),this.format.decimals,this.format)}subUnsafe(t){this._checkFormat(t);const r=be(this._value,this.format.decimals),i=be(t._value,t.format.decimals);return Ut.fromValue(r.sub(i),this.format.decimals,this.format)}mulUnsafe(t){this._checkFormat(t);const r=be(this._value,this.format.decimals),i=be(t._value,t.format.decimals);return Ut.fromValue(r.mul(i).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(t){this._checkFormat(t);const r=be(this._value,this.format.decimals),i=be(t._value,t.format.decimals);return Ut.fromValue(r.mul(this.format._multiplier).div(i),this.format.decimals,this.format)}floor(){const t=this.toString().split(\".\");t.length===1&&t.push(\"0\");let r=Ut.from(t[0],this.format);const i=!t[1].match(/^(0*)$/);return this.isNegative()&&i&&(r=r.subUnsafe(Wn.toFormat(r.format))),r}ceiling(){const t=this.toString().split(\".\");t.length===1&&t.push(\"0\");let r=Ut.from(t[0],this.format);const i=!t[1].match(/^(0*)$/);return!this.isNegative()&&i&&(r=r.addUnsafe(Wn.toFormat(r.format))),r}round(t){t==null&&(t=0);const r=this.toString().split(\".\");if(r.length===1&&r.push(\"0\"),(t<0||t>80||t%1)&&Ht.throwArgumentError(\"invalid decimal count\",\"decimals\",t),r[1].length<=t)return this;const i=Ut.from(\"1\"+gr.substring(0,t),this.format),n=O0.toFormat(this.format);return this.mulUnsafe(i).addUnsafe(n).floor().divUnsafe(i)}isZero(){return this._value===\"0.0\"||this._value===\"0\"}isNegative(){return this._value[0]===\"-\"}toString(){return this._value}toHexString(t){if(t==null)return this._hex;t%8&&Ht.throwArgumentError(\"invalid byte width\",\"width\",t);const r=V.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();return oe(r,t/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(t){return Ut.fromString(this._value,t)}static fromValue(t,r,i){return i==null&&r!=null&&!C0(r)&&(i=r,r=null),r==null&&(r=0),i==null&&(i=\"fixed\"),Ut.fromString(Mi(t,r),dr.from(i))}static fromString(t,r){r==null&&(r=\"fixed\");const i=dr.from(r),n=be(t,i.decimals);!i.signed&&n.lt(Gn)&&Vn(\"unsigned value cannot be negative\",\"overflow\",\"value\",t);let o=null;i.signed?o=n.toTwos(i.width).toHexString():(o=n.toHexString(),o=oe(o,i.width/8));const h=Mi(n,i.decimals);return new Ut(mr,o,h,i)}static fromBytes(t,r){r==null&&(r=\"fixed\");const i=dr.from(r);if(Ot(t).length>i.width/8)throw new Error(\"overflow\");let n=V.from(t);i.signed&&(n=n.fromTwos(i.width));const o=n.toTwos((i.signed?0:1)+i.width).toHexString(),h=Mi(n,i.decimals);return new Ut(mr,o,h,i)}static from(t,r){if(typeof t==\"string\")return Ut.fromString(t,r);if(ir(t))return Ut.fromBytes(t,r);try{return Ut.fromValue(t,0,r)}catch(i){if(i.code!==L.errors.INVALID_ARGUMENT)throw i}return Ht.throwArgumentError(\"invalid FixedNumber value\",\"value\",t)}static isFixedNumber(t){return!!(t&&t._isFixedNumber)}}const Wn=Ut.from(1),O0=Ut.from(\"0.5\"),P0=\"strings/5.7.0\",Xn=new L(P0);var Or;(function(e){e.current=\"\",e.NFC=\"NFC\",e.NFD=\"NFD\",e.NFKC=\"NFKC\",e.NFKD=\"NFKD\"})(Or||(Or={}));var nr;(function(e){e.UNEXPECTED_CONTINUE=\"unexpected continuation byte\",e.BAD_PREFIX=\"bad codepoint prefix\",e.OVERRUN=\"string overrun\",e.MISSING_CONTINUE=\"missing continuation byte\",e.OUT_OF_RANGE=\"out of UTF-8 range\",e.UTF16_SURROGATE=\"UTF-16 surrogate\",e.OVERLONG=\"overlong representation\"})(nr||(nr={}));function D0(e,t,r,i,n){return Xn.throwArgumentError(`invalid codepoint at offset ${t}; ${e}`,\"bytes\",r)}function Zn(e,t,r,i,n){if(e===nr.BAD_PREFIX||e===nr.UNEXPECTED_CONTINUE){let o=0;for(let h=t+1;h<r.length&&r[h]>>6===2;h++)o++;return o}return e===nr.OVERRUN?r.length-t-1:0}function F0(e,t,r,i,n){return e===nr.OVERLONG?(i.push(n),0):(i.push(65533),Zn(e,t,r))}Object.freeze({error:D0,ignore:Zn,replace:F0});function Ei(e,t=Or.current){t!=Or.current&&(Xn.checkNormalize(),e=e.normalize(t));let r=[];for(let i=0;i<e.length;i++){const n=e.charCodeAt(i);if(n<128)r.push(n);else if(n<2048)r.push(n>>6|192),r.push(n&63|128);else if((n&64512)==55296){i++;const o=e.charCodeAt(i);if(i>=e.length||(o&64512)!==56320)throw new Error(\"invalid utf-8 string\");const h=65536+((n&1023)<<10)+(o&1023);r.push(h>>18|240),r.push(h>>12&63|128),r.push(h>>6&63|128),r.push(h&63|128)}else r.push(n>>12|224),r.push(n>>6&63|128),r.push(n&63|128)}return Ot(r)}function T0(e){if(e.length%4!==0)throw new Error(\"bad data\");let t=[];for(let r=0;r<e.length;r+=4)t.push(parseInt(e.substring(r,r+4),16));return t}function Si(e,t){t||(t=function(n){return[parseInt(n,16)]});let r=0,i={};return e.split(\",\").forEach(n=>{let o=n.split(\":\");r+=parseInt(o[0],16),i[r]=t(o[1])}),i}function $n(e){let t=0;return e.split(\",\").map(r=>{let i=r.split(\"-\");i.length===1?i[1]=\"0\":i[1]===\"\"&&(i[1]=\"1\");let n=t+parseInt(i[0],16);return t=parseInt(i[1],16),{l:n,h:t}})}$n(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\"),\"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map(e=>parseInt(e,16)),Si(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\"),Si(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\"),Si(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\",T0),$n(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");const tf=\"hash/5.7.0\";function U0(e){e=atob(e);const t=[];for(let r=0;r<e.length;r++)t.push(e.charCodeAt(r));return Ot(t)}function ef(e,t){t==null&&(t=1);const r=[],i=r.forEach,n=function(o,h){i.call(o,function(p){h>0&&Array.isArray(p)?n(p,h-1):r.push(p)})};return n(e,t),r}function k0(e){const t={};for(let r=0;r<e.length;r++){const i=e[r];t[i[0]]=i[1]}return t}function q0(e){let t=0;function r(){return e[t++]<<8|e[t++]}let i=r(),n=1,o=[0,1];for(let H=1;H<i;H++)o.push(n+=r());let h=r(),p=t;t+=h;let b=0,m=0;function w(){return b==0&&(m=m<<8|e[t++],b=8),m>>--b&1}const y=31,S=Math.pow(2,y),I=S>>>1,N=I>>1,C=S-1;let F=0;for(let H=0;H<y;H++)F=F<<1|w();let U=[],J=0,Bt=S;for(;;){let H=Math.floor(((F-J+1)*n-1)/Bt),z=0,Pt=i;for(;Pt-z>1;){let Yt=z+Pt>>>1;H<o[Yt]?Pt=Yt:z=Yt}if(z==0)break;U.push(z);let W=J+Math.floor(Bt*o[z]/n),Rt=J+Math.floor(Bt*o[z+1]/n)-1;for(;!((W^Rt)&I);)F=F<<1&C|w(),W=W<<1&C,Rt=Rt<<1&C|1;for(;W&~Rt&N;)F=F&I|F<<1&C>>>1|w(),W=W<<1^I,Rt=(Rt^I)<<1|I|1;J=W,Bt=1+Rt-W}let G=i-4;return U.map(H=>{switch(H-G){case 3:return G+65792+(e[p++]<<16|e[p++]<<8|e[p++]);case 2:return G+256+(e[p++]<<8|e[p++]);case 1:return G+e[p++];default:return H-1}})}function K0(e){let t=0;return()=>e[t++]}function H0(e){return K0(q0(e))}function z0(e){return e&1?~e>>1:e>>1}function L0(e,t){let r=Array(e);for(let i=0;i<e;i++)r[i]=1+t();return r}function rf(e,t){let r=Array(e);for(let i=0,n=-1;i<e;i++)r[i]=n+=1+t();return r}function j0(e,t){let r=Array(e);for(let i=0,n=0;i<e;i++)r[i]=n+=z0(t());return r}function Pr(e,t){let r=rf(e(),e),i=e(),n=rf(i,e),o=L0(i,e);for(let h=0;h<i;h++)for(let p=0;p<o[h];p++)r.push(n[h]+p);return t?r.map(h=>t[h]):r}function Q0(e){let t=[];for(;;){let r=e();if(r==0)break;t.push(G0(r,e))}for(;;){let r=e()-1;if(r<0)break;t.push(Y0(r,e))}return k0(ef(t))}function J0(e){let t=[];for(;;){let r=e();if(r==0)break;t.push(r)}return t}function nf(e,t,r){let i=Array(e).fill(void 0).map(()=>[]);for(let n=0;n<t;n++)j0(e,r).forEach((o,h)=>i[h].push(o));return i}function G0(e,t){let r=1+t(),i=t(),n=J0(t),o=nf(n.length,1+e,t);return ef(o.map((h,p)=>{const b=h[0],m=h.slice(1);return Array(n[p]).fill(void 0).map((w,y)=>{let S=y*i;return[b+y*r,m.map(I=>I+S)]})}))}function Y0(e,t){let r=1+t();return nf(r,1+e,t).map(n=>[n[0],n.slice(1)])}function V0(e){let t=Pr(e).sort((i,n)=>i-n);return r();function r(){let i=[];for(;;){let m=Pr(e,t);if(m.length==0)break;i.push({set:new Set(m),node:r()})}i.sort((m,w)=>w.set.size-m.set.size);let n=e(),o=n%3;n=n/3|0;let h=!!(n&1);n>>=1;let p=n==1,b=n==2;return{branches:i,valid:o,fe0f:h,save:p,check:b}}}function W0(){return H0(U0(\"\"))}const Dr=W0();new Set(Pr(Dr)),new Set(Pr(Dr)),Q0(Dr),V0(Dr),new L(tf);const X0=new Uint8Array(32);X0.fill(0);const Z0=`\u0019Ethereum Signed Message:\n`;function ff(e){return typeof e==\"string\"&&(e=Ei(e)),yi(E0([Ei(Z0),Ei(String(e.length)),e]))}const $0=\"rlp/5.7.0\";new L($0);const ts=\"address/5.7.0\",Ar=new L(ts);function of(e){Qt(e,20)||Ar.throwArgumentError(\"invalid address\",\"address\",e),e=e.toLowerCase();const t=e.substring(2).split(\"\"),r=new Uint8Array(40);for(let n=0;n<40;n++)r[n]=t[n].charCodeAt(0);const i=Ot(yi(r));for(let n=0;n<40;n+=2)i[n>>1]>>4>=8&&(t[n]=t[n].toUpperCase()),(i[n>>1]&15)>=8&&(t[n+1]=t[n+1].toUpperCase());return\"0x\"+t.join(\"\")}const es=9007199254740991;function rs(e){return Math.log10?Math.log10(e):Math.log(e)/Math.LN10}const Ni={};for(let e=0;e<10;e++)Ni[String(e)]=String(e);for(let e=0;e<26;e++)Ni[String.fromCharCode(65+e)]=String(10+e);const sf=Math.floor(rs(es));function is(e){e=e.toUpperCase(),e=e.substring(4)+e.substring(0,2)+\"00\";let t=e.split(\"\").map(i=>Ni[i]).join(\"\");for(;t.length>=sf;){let i=t.substring(0,sf);t=parseInt(i,10)%97+t.substring(i.length)}let r=String(98-parseInt(t,10)%97);for(;r.length<2;)r=\"0\"+r;return r}function ns(e){let t=null;if(typeof e!=\"string\"&&Ar.throwArgumentError(\"invalid address\",\"address\",e),e.match(/^(0x)?[0-9a-fA-F]{40}$/))e.substring(0,2)!==\"0x\"&&(e=\"0x\"+e),t=of(e),e.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&t!==e&&Ar.throwArgumentError(\"bad address checksum\",\"address\",e);else if(e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){for(e.substring(2,4)!==is(e)&&Ar.throwArgumentError(\"bad icap checksum\",\"address\",e),t=R0(e.substring(4));t.length<40;)t=\"0\"+t;t=of(\"0x\"+t)}else Ar.throwArgumentError(\"invalid address\",\"address\",e);return t}const fs=\"properties/5.7.0\";new L(fs);function br(e,t,r){Object.defineProperty(e,t,{enumerable:!0,value:r,writable:!1})}new L(tf);const os=new Uint8Array(32);os.fill(0),V.from(-1);const ss=V.from(0),as=V.from(1);V.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"),oe(as.toHexString(),32),oe(ss.toHexString(),32);var se={},Q={},yr=af;function af(e,t){if(!e)throw new Error(t||\"Assertion failed\")}af.equal=function(t,r,i){if(t!=r)throw new Error(i||\"Assertion failed: \"+t+\" != \"+r)};var Ii={exports:{}};typeof Object.create==\"function\"?Ii.exports=function(t,r){r&&(t.super_=r,t.prototype=Object.create(r.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:Ii.exports=function(t,r){if(r){t.super_=r;var i=function(){};i.prototype=r.prototype,t.prototype=new i,t.prototype.constructor=t}};var us=yr,hs=Ii.exports;Q.inherits=hs;function cs(e,t){return(e.charCodeAt(t)&64512)!==55296||t<0||t+1>=e.length?!1:(e.charCodeAt(t+1)&64512)===56320}function ls(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if(typeof e==\"string\")if(t){if(t===\"hex\")for(e=e.replace(/[^a-z0-9]+/ig,\"\"),e.length%2!==0&&(e=\"0\"+e),n=0;n<e.length;n+=2)r.push(parseInt(e[n]+e[n+1],16))}else for(var i=0,n=0;n<e.length;n++){var o=e.charCodeAt(n);o<128?r[i++]=o:o<2048?(r[i++]=o>>6|192,r[i++]=o&63|128):cs(e,n)?(o=65536+((o&1023)<<10)+(e.charCodeAt(++n)&1023),r[i++]=o>>18|240,r[i++]=o>>12&63|128,r[i++]=o>>6&63|128,r[i++]=o&63|128):(r[i++]=o>>12|224,r[i++]=o>>6&63|128,r[i++]=o&63|128)}else for(n=0;n<e.length;n++)r[n]=e[n]|0;return r}Q.toArray=ls;function ds(e){for(var t=\"\",r=0;r<e.length;r++)t+=hf(e[r].toString(16));return t}Q.toHex=ds;function uf(e){var t=e>>>24|e>>>8&65280|e<<8&16711680|(e&255)<<24;return t>>>0}Q.htonl=uf;function ps(e,t){for(var r=\"\",i=0;i<e.length;i++){var n=e[i];t===\"little\"&&(n=uf(n)),r+=cf(n.toString(16))}return r}Q.toHex32=ps;function hf(e){return e.length===1?\"0\"+e:e}Q.zero2=hf;function cf(e){return e.length===7?\"0\"+e:e.length===6?\"00\"+e:e.length===5?\"000\"+e:e.length===4?\"0000\"+e:e.length===3?\"00000\"+e:e.length===2?\"000000\"+e:e.length===1?\"0000000\"+e:e}Q.zero8=cf;function vs(e,t,r,i){var n=r-t;us(n%4===0);for(var o=new Array(n/4),h=0,p=t;h<o.length;h++,p+=4){var b;i===\"big\"?b=e[p]<<24|e[p+1]<<16|e[p+2]<<8|e[p+3]:b=e[p+3]<<24|e[p+2]<<16|e[p+1]<<8|e[p],o[h]=b>>>0}return o}Q.join32=vs;function ms(e,t){for(var r=new Array(e.length*4),i=0,n=0;i<e.length;i++,n+=4){var o=e[i];t===\"big\"?(r[n]=o>>>24,r[n+1]=o>>>16&255,r[n+2]=o>>>8&255,r[n+3]=o&255):(r[n+3]=o>>>24,r[n+2]=o>>>16&255,r[n+1]=o>>>8&255,r[n]=o&255)}return r}Q.split32=ms;function gs(e,t){return e>>>t|e<<32-t}Q.rotr32=gs;function As(e,t){return e<<t|e>>>32-t}Q.rotl32=As;function bs(e,t){return e+t>>>0}Q.sum32=bs;function ys(e,t,r){return e+t+r>>>0}Q.sum32_3=ys;function ws(e,t,r,i){return e+t+r+i>>>0}Q.sum32_4=ws;function xs(e,t,r,i,n){return e+t+r+i+n>>>0}Q.sum32_5=xs;function Ms(e,t,r,i){var n=e[t],o=e[t+1],h=i+o>>>0,p=(h<i?1:0)+r+n;e[t]=p>>>0,e[t+1]=h}Q.sum64=Ms;function Es(e,t,r,i){var n=t+i>>>0,o=(n<t?1:0)+e+r;return o>>>0}Q.sum64_hi=Es;function Ss(e,t,r,i){var n=t+i;return n>>>0}Q.sum64_lo=Ss;function Ns(e,t,r,i,n,o,h,p){var b=0,m=t;m=m+i>>>0,b+=m<t?1:0,m=m+o>>>0,b+=m<o?1:0,m=m+p>>>0,b+=m<p?1:0;var w=e+r+n+h+b;return w>>>0}Q.sum64_4_hi=Ns;function Is(e,t,r,i,n,o,h,p){var b=t+i+o+p;return b>>>0}Q.sum64_4_lo=Is;function _s(e,t,r,i,n,o,h,p,b,m){var w=0,y=t;y=y+i>>>0,w+=y<t?1:0,y=y+o>>>0,w+=y<o?1:0,y=y+p>>>0,w+=y<p?1:0,y=y+m>>>0,w+=y<m?1:0;var S=e+r+n+h+b+w;return S>>>0}Q.sum64_5_hi=_s;function Bs(e,t,r,i,n,o,h,p,b,m){var w=t+i+o+p+m;return w>>>0}Q.sum64_5_lo=Bs;function Cs(e,t,r){var i=t<<32-r|e>>>r;return i>>>0}Q.rotr64_hi=Cs;function Rs(e,t,r){var i=e<<32-r|t>>>r;return i>>>0}Q.rotr64_lo=Rs;function Os(e,t,r){return e>>>r}Q.shr64_hi=Os;function Ps(e,t,r){var i=e<<32-r|t>>>r;return i>>>0}Q.shr64_lo=Ps;var fr={},lf=Q,Ds=yr;function Fr(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian=\"big\",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}fr.BlockHash=Fr,Fr.prototype.update=function(t,r){if(t=lf.toArray(t,r),this.pending?this.pending=this.pending.concat(t):this.pending=t,this.pendingTotal+=t.length,this.pending.length>=this._delta8){t=this.pending;var i=t.length%this._delta8;this.pending=t.slice(t.length-i,t.length),this.pending.length===0&&(this.pending=null),t=lf.join32(t,0,t.length-i,this.endian);for(var n=0;n<t.length;n+=this._delta32)this._update(t,n,n+this._delta32)}return this},Fr.prototype.digest=function(t){return this.update(this._pad()),Ds(this.pending===null),this._digest(t)},Fr.prototype._pad=function(){var t=this.pendingTotal,r=this._delta8,i=r-(t+this.padLength)%r,n=new Array(i+this.padLength);n[0]=128;for(var o=1;o<i;o++)n[o]=0;if(t<<=3,this.endian===\"big\"){for(var h=8;h<this.padLength;h++)n[o++]=0;n[o++]=0,n[o++]=0,n[o++]=0,n[o++]=0,n[o++]=t>>>24&255,n[o++]=t>>>16&255,n[o++]=t>>>8&255,n[o++]=t&255}else for(n[o++]=t&255,n[o++]=t>>>8&255,n[o++]=t>>>16&255,n[o++]=t>>>24&255,n[o++]=0,n[o++]=0,n[o++]=0,n[o++]=0,h=8;h<this.padLength;h++)n[o++]=0;return n};var or={},ae={},Fs=Q,ue=Fs.rotr32;function Ts(e,t,r,i){if(e===0)return df(t,r,i);if(e===1||e===3)return vf(t,r,i);if(e===2)return pf(t,r,i)}ae.ft_1=Ts;function df(e,t,r){return e&t^~e&r}ae.ch32=df;function pf(e,t,r){return e&t^e&r^t&r}ae.maj32=pf;function vf(e,t,r){return e^t^r}ae.p32=vf;function Us(e){return ue(e,2)^ue(e,13)^ue(e,22)}ae.s0_256=Us;function ks(e){return ue(e,6)^ue(e,11)^ue(e,25)}ae.s1_256=ks;function qs(e){return ue(e,7)^ue(e,18)^e>>>3}ae.g0_256=qs;function Ks(e){return ue(e,17)^ue(e,19)^e>>>10}ae.g1_256=Ks;var sr=Q,Hs=fr,zs=ae,_i=sr.rotl32,wr=sr.sum32,Ls=sr.sum32_5,js=zs.ft_1,mf=Hs.BlockHash,Qs=[1518500249,1859775393,2400959708,3395469782];function he(){if(!(this instanceof he))return new he;mf.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}sr.inherits(he,mf);var Js=he;he.blockSize=512,he.outSize=160,he.hmacStrength=80,he.padLength=64,he.prototype._update=function(t,r){for(var i=this.W,n=0;n<16;n++)i[n]=t[r+n];for(;n<i.length;n++)i[n]=_i(i[n-3]^i[n-8]^i[n-14]^i[n-16],1);var o=this.h[0],h=this.h[1],p=this.h[2],b=this.h[3],m=this.h[4];for(n=0;n<i.length;n++){var w=~~(n/20),y=Ls(_i(o,5),js(w,h,p,b),m,i[n],Qs[w]);m=b,b=p,p=_i(h,30),h=o,o=y}this.h[0]=wr(this.h[0],o),this.h[1]=wr(this.h[1],h),this.h[2]=wr(this.h[2],p),this.h[3]=wr(this.h[3],b),this.h[4]=wr(this.h[4],m)},he.prototype._digest=function(t){return t===\"hex\"?sr.toHex32(this.h,\"big\"):sr.split32(this.h,\"big\")};var ar=Q,Gs=fr,ur=ae,Ys=yr,ie=ar.sum32,Vs=ar.sum32_4,Ws=ar.sum32_5,Xs=ur.ch32,Zs=ur.maj32,$s=ur.s0_256,ta=ur.s1_256,ea=ur.g0_256,ra=ur.g1_256,gf=Gs.BlockHash,ia=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function ce(){if(!(this instanceof ce))return new ce;gf.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=ia,this.W=new Array(64)}ar.inherits(ce,gf);var Af=ce;ce.blockSize=512,ce.outSize=256,ce.hmacStrength=192,ce.padLength=64,ce.prototype._update=function(t,r){for(var i=this.W,n=0;n<16;n++)i[n]=t[r+n];for(;n<i.length;n++)i[n]=Vs(ra(i[n-2]),i[n-7],ea(i[n-15]),i[n-16]);var o=this.h[0],h=this.h[1],p=this.h[2],b=this.h[3],m=this.h[4],w=this.h[5],y=this.h[6],S=this.h[7];for(Ys(this.k.length===i.length),n=0;n<i.length;n++){var I=Ws(S,ta(m),Xs(m,w,y),this.k[n],i[n]),N=ie($s(o),Zs(o,h,p));S=y,y=w,w=m,m=ie(b,I),b=p,p=h,h=o,o=ie(I,N)}this.h[0]=ie(this.h[0],o),this.h[1]=ie(this.h[1],h),this.h[2]=ie(this.h[2],p),this.h[3]=ie(this.h[3],b),this.h[4]=ie(this.h[4],m),this.h[5]=ie(this.h[5],w),this.h[6]=ie(this.h[6],y),this.h[7]=ie(this.h[7],S)},ce.prototype._digest=function(t){return t===\"hex\"?ar.toHex32(this.h,\"big\"):ar.split32(this.h,\"big\")};var Bi=Q,bf=Af;function ye(){if(!(this instanceof ye))return new ye;bf.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}Bi.inherits(ye,bf);var na=ye;ye.blockSize=512,ye.outSize=224,ye.hmacStrength=192,ye.padLength=64,ye.prototype._digest=function(t){return t===\"hex\"?Bi.toHex32(this.h.slice(0,7),\"big\"):Bi.split32(this.h.slice(0,7),\"big\")};var jt=Q,fa=fr,oa=yr,le=jt.rotr64_hi,de=jt.rotr64_lo,yf=jt.shr64_hi,wf=jt.shr64_lo,Be=jt.sum64,Ci=jt.sum64_hi,Ri=jt.sum64_lo,sa=jt.sum64_4_hi,aa=jt.sum64_4_lo,ua=jt.sum64_5_hi,ha=jt.sum64_5_lo,xf=fa.BlockHash,ca=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function ne(){if(!(this instanceof ne))return new ne;xf.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=ca,this.W=new Array(160)}jt.inherits(ne,xf);var Mf=ne;ne.blockSize=1024,ne.outSize=512,ne.hmacStrength=192,ne.padLength=128,ne.prototype._prepareBlock=function(t,r){for(var i=this.W,n=0;n<32;n++)i[n]=t[r+n];for(;n<i.length;n+=2){var o=xa(i[n-4],i[n-3]),h=Ma(i[n-4],i[n-3]),p=i[n-14],b=i[n-13],m=ya(i[n-30],i[n-29]),w=wa(i[n-30],i[n-29]),y=i[n-32],S=i[n-31];i[n]=sa(o,h,p,b,m,w,y,S),i[n+1]=aa(o,h,p,b,m,w,y,S)}},ne.prototype._update=function(t,r){this._prepareBlock(t,r);var i=this.W,n=this.h[0],o=this.h[1],h=this.h[2],p=this.h[3],b=this.h[4],m=this.h[5],w=this.h[6],y=this.h[7],S=this.h[8],I=this.h[9],N=this.h[10],C=this.h[11],F=this.h[12],U=this.h[13],J=this.h[14],Bt=this.h[15];oa(this.k.length===i.length);for(var G=0;G<i.length;G+=2){var H=J,z=Bt,Pt=Aa(S,I),W=ba(S,I),Rt=la(S,I,N,C,F),Yt=da(S,I,N,C,F,U),Y=this.k[G],Vt=this.k[G+1],A=i[G],f=i[G+1],a=ua(H,z,Pt,W,Rt,Yt,Y,Vt,A,f),c=ha(H,z,Pt,W,Rt,Yt,Y,Vt,A,f);H=ma(n,o),z=ga(n,o),Pt=pa(n,o,h,p,b),W=va(n,o,h,p,b,m);var d=Ci(H,z,Pt,W),g=Ri(H,z,Pt,W);J=F,Bt=U,F=N,U=C,N=S,C=I,S=Ci(w,y,a,c),I=Ri(y,y,a,c),w=b,y=m,b=h,m=p,h=n,p=o,n=Ci(a,c,d,g),o=Ri(a,c,d,g)}Be(this.h,0,n,o),Be(this.h,2,h,p),Be(this.h,4,b,m),Be(this.h,6,w,y),Be(this.h,8,S,I),Be(this.h,10,N,C),Be(this.h,12,F,U),Be(this.h,14,J,Bt)},ne.prototype._digest=function(t){return t===\"hex\"?jt.toHex32(this.h,\"big\"):jt.split32(this.h,\"big\")};function la(e,t,r,i,n){var o=e&r^~e&n;return o<0&&(o+=4294967296),o}function da(e,t,r,i,n,o){var h=t&i^~t&o;return h<0&&(h+=4294967296),h}function pa(e,t,r,i,n){var o=e&r^e&n^r&n;return o<0&&(o+=4294967296),o}function va(e,t,r,i,n,o){var h=t&i^t&o^i&o;return h<0&&(h+=4294967296),h}function ma(e,t){var r=le(e,t,28),i=le(t,e,2),n=le(t,e,7),o=r^i^n;return o<0&&(o+=4294967296),o}function ga(e,t){var r=de(e,t,28),i=de(t,e,2),n=de(t,e,7),o=r^i^n;return o<0&&(o+=4294967296),o}function Aa(e,t){var r=le(e,t,14),i=le(e,t,18),n=le(t,e,9),o=r^i^n;return o<0&&(o+=4294967296),o}function ba(e,t){var r=de(e,t,14),i=de(e,t,18),n=de(t,e,9),o=r^i^n;return o<0&&(o+=4294967296),o}function ya(e,t){var r=le(e,t,1),i=le(e,t,8),n=yf(e,t,7),o=r^i^n;return o<0&&(o+=4294967296),o}function wa(e,t){var r=de(e,t,1),i=de(e,t,8),n=wf(e,t,7),o=r^i^n;return o<0&&(o+=4294967296),o}function xa(e,t){var r=le(e,t,19),i=le(t,e,29),n=yf(e,t,6),o=r^i^n;return o<0&&(o+=4294967296),o}function Ma(e,t){var r=de(e,t,19),i=de(t,e,29),n=wf(e,t,6),o=r^i^n;return o<0&&(o+=4294967296),o}var Oi=Q,Ef=Mf;function we(){if(!(this instanceof we))return new we;Ef.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}Oi.inherits(we,Ef);var Ea=we;we.blockSize=1024,we.outSize=384,we.hmacStrength=192,we.padLength=128,we.prototype._digest=function(t){return t===\"hex\"?Oi.toHex32(this.h.slice(0,12),\"big\"):Oi.split32(this.h.slice(0,12),\"big\")},or.sha1=Js,or.sha224=na,or.sha256=Af,or.sha384=Ea,or.sha512=Mf;var Sf={},Xe=Q,Sa=fr,Tr=Xe.rotl32,Nf=Xe.sum32,xr=Xe.sum32_3,If=Xe.sum32_4,_f=Sa.BlockHash;function pe(){if(!(this instanceof pe))return new pe;_f.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian=\"little\"}Xe.inherits(pe,_f),Sf.ripemd160=pe,pe.blockSize=512,pe.outSize=160,pe.hmacStrength=192,pe.padLength=64,pe.prototype._update=function(t,r){for(var i=this.h[0],n=this.h[1],o=this.h[2],h=this.h[3],p=this.h[4],b=i,m=n,w=o,y=h,S=p,I=0;I<80;I++){var N=Nf(Tr(If(i,Bf(I,n,o,h),t[_a[I]+r],Na(I)),Ca[I]),p);i=p,p=h,h=Tr(o,10),o=n,n=N,N=Nf(Tr(If(b,Bf(79-I,m,w,y),t[Ba[I]+r],Ia(I)),Ra[I]),S),b=S,S=y,y=Tr(w,10),w=m,m=N}N=xr(this.h[1],o,y),this.h[1]=xr(this.h[2],h,S),this.h[2]=xr(this.h[3],p,b),this.h[3]=xr(this.h[4],i,m),this.h[4]=xr(this.h[0],n,w),this.h[0]=N},pe.prototype._digest=function(t){return t===\"hex\"?Xe.toHex32(this.h,\"little\"):Xe.split32(this.h,\"little\")};function Bf(e,t,r,i){return e<=15?t^r^i:e<=31?t&r|~t&i:e<=47?(t|~r)^i:e<=63?t&i|r&~i:t^(r|~i)}function Na(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function Ia(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}var _a=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],Ba=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],Ca=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],Ra=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],Oa=Q,Pa=yr;function hr(e,t,r){if(!(this instanceof hr))return new hr(e,t,r);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(Oa.toArray(t,r))}var Da=hr;hr.prototype._init=function(t){t.length>this.blockSize&&(t=new this.Hash().update(t).digest()),Pa(t.length<=this.blockSize);for(var r=t.length;r<this.blockSize;r++)t.push(0);for(r=0;r<t.length;r++)t[r]^=54;for(this.inner=new this.Hash().update(t),r=0;r<t.length;r++)t[r]^=106;this.outer=new this.Hash().update(t)},hr.prototype.update=function(t,r){return this.inner.update(t,r),this},hr.prototype.digest=function(t){return this.outer.update(this.inner.digest()),this.outer.digest(t)},function(e){var t=e;t.utils=Q,t.common=fr,t.sha=or,t.ripemd=Sf,t.hmac=Da,t.sha1=t.sha.sha1,t.sha256=t.sha.sha256,t.sha224=t.sha.sha224,t.sha384=t.sha.sha384,t.sha512=t.sha.sha512,t.ripemd160=t.ripemd.ripemd160}(se);function cr(e,t,r){return r={path:t,exports:{},require:function(i,n){return Fa(i,n??r.path)}},e(r,r.exports),r.exports}function Fa(){throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\")}var Pi=Cf;function Cf(e,t){if(!e)throw new Error(t||\"Assertion failed\")}Cf.equal=function(t,r,i){if(t!=r)throw new Error(i||\"Assertion failed: \"+t+\" != \"+r)};var fe=cr(function(e,t){var r=t;function i(h,p){if(Array.isArray(h))return h.slice();if(!h)return[];var b=[];if(typeof h!=\"string\"){for(var m=0;m<h.length;m++)b[m]=h[m]|0;return b}if(p===\"hex\"){h=h.replace(/[^a-z0-9]+/ig,\"\"),h.length%2!==0&&(h=\"0\"+h);for(var m=0;m<h.length;m+=2)b.push(parseInt(h[m]+h[m+1],16))}else for(var m=0;m<h.length;m++){var w=h.charCodeAt(m),y=w>>8,S=w&255;y?b.push(y,S):b.push(S)}return b}r.toArray=i;function n(h){return h.length===1?\"0\"+h:h}r.zero2=n;function o(h){for(var p=\"\",b=0;b<h.length;b++)p+=n(h[b].toString(16));return p}r.toHex=o,r.encode=function(p,b){return b===\"hex\"?o(p):p}}),Jt=cr(function(e,t){var r=t;r.assert=Pi,r.toArray=fe.toArray,r.zero2=fe.zero2,r.toHex=fe.toHex,r.encode=fe.encode;function i(b,m,w){var y=new Array(Math.max(b.bitLength(),w)+1);y.fill(0);for(var S=1<<m+1,I=b.clone(),N=0;N<y.length;N++){var C,F=I.andln(S-1);I.isOdd()?(F>(S>>1)-1?C=(S>>1)-F:C=F,I.isubn(C)):C=0,y[N]=C,I.iushrn(1)}return y}r.getNAF=i;function n(b,m){var w=[[],[]];b=b.clone(),m=m.clone();for(var y=0,S=0,I;b.cmpn(-y)>0||m.cmpn(-S)>0;){var N=b.andln(3)+y&3,C=m.andln(3)+S&3;N===3&&(N=-1),C===3&&(C=-1);var F;N&1?(I=b.andln(7)+y&7,(I===3||I===5)&&C===2?F=-N:F=N):F=0,w[0].push(F);var U;C&1?(I=m.andln(7)+S&7,(I===3||I===5)&&N===2?U=-C:U=C):U=0,w[1].push(U),2*y===F+1&&(y=1-y),2*S===U+1&&(S=1-S),b.iushrn(1),m.iushrn(1)}return w}r.getJSF=n;function o(b,m,w){var y=\"_\"+m;b.prototype[m]=function(){return this[y]!==void 0?this[y]:this[y]=w.call(this)}}r.cachedProperty=o;function h(b){return typeof b==\"string\"?r.toArray(b,\"hex\"):b}r.parseBytes=h;function p(b){return new K(b,\"hex\",\"le\")}r.intFromLE=p}),Ur=Jt.getNAF,Ta=Jt.getJSF,kr=Jt.assert;function Ce(e,t){this.type=e,this.p=new K(t.p,16),this.red=t.prime?K.red(t.prime):K.mont(this.p),this.zero=new K(0).toRed(this.red),this.one=new K(1).toRed(this.red),this.two=new K(2).toRed(this.red),this.n=t.n&&new K(t.n,16),this.g=t.g&&this.pointFromJSON(t.g,t.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var r=this.n&&this.p.div(this.n);!r||r.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}var Ze=Ce;Ce.prototype.point=function(){throw new Error(\"Not implemented\")},Ce.prototype.validate=function(){throw new Error(\"Not implemented\")},Ce.prototype._fixedNafMul=function(t,r){kr(t.precomputed);var i=t._getDoubles(),n=Ur(r,1,this._bitLength),o=(1<<i.step+1)-(i.step%2===0?2:1);o/=3;var h=[],p,b;for(p=0;p<n.length;p+=i.step){b=0;for(var m=p+i.step-1;m>=p;m--)b=(b<<1)+n[m];h.push(b)}for(var w=this.jpoint(null,null,null),y=this.jpoint(null,null,null),S=o;S>0;S--){for(p=0;p<h.length;p++)b=h[p],b===S?y=y.mixedAdd(i.points[p]):b===-S&&(y=y.mixedAdd(i.points[p].neg()));w=w.add(y)}return w.toP()},Ce.prototype._wnafMul=function(t,r){var i=4,n=t._getNAFPoints(i);i=n.wnd;for(var o=n.points,h=Ur(r,i,this._bitLength),p=this.jpoint(null,null,null),b=h.length-1;b>=0;b--){for(var m=0;b>=0&&h[b]===0;b--)m++;if(b>=0&&m++,p=p.dblp(m),b<0)break;var w=h[b];kr(w!==0),t.type===\"affine\"?w>0?p=p.mixedAdd(o[w-1>>1]):p=p.mixedAdd(o[-w-1>>1].neg()):w>0?p=p.add(o[w-1>>1]):p=p.add(o[-w-1>>1].neg())}return t.type===\"affine\"?p.toP():p},Ce.prototype._wnafMulAdd=function(t,r,i,n,o){var h=this._wnafT1,p=this._wnafT2,b=this._wnafT3,m=0,w,y,S;for(w=0;w<n;w++){S=r[w];var I=S._getNAFPoints(t);h[w]=I.wnd,p[w]=I.points}for(w=n-1;w>=1;w-=2){var N=w-1,C=w;if(h[N]!==1||h[C]!==1){b[N]=Ur(i[N],h[N],this._bitLength),b[C]=Ur(i[C],h[C],this._bitLength),m=Math.max(b[N].length,m),m=Math.max(b[C].length,m);continue}var F=[r[N],null,null,r[C]];r[N].y.cmp(r[C].y)===0?(F[1]=r[N].add(r[C]),F[2]=r[N].toJ().mixedAdd(r[C].neg())):r[N].y.cmp(r[C].y.redNeg())===0?(F[1]=r[N].toJ().mixedAdd(r[C]),F[2]=r[N].add(r[C].neg())):(F[1]=r[N].toJ().mixedAdd(r[C]),F[2]=r[N].toJ().mixedAdd(r[C].neg()));var U=[-3,-1,-5,-7,0,7,5,1,3],J=Ta(i[N],i[C]);for(m=Math.max(J[0].length,m),b[N]=new Array(m),b[C]=new Array(m),y=0;y<m;y++){var Bt=J[0][y]|0,G=J[1][y]|0;b[N][y]=U[(Bt+1)*3+(G+1)],b[C][y]=0,p[N]=F}}var H=this.jpoint(null,null,null),z=this._wnafT4;for(w=m;w>=0;w--){for(var Pt=0;w>=0;){var W=!0;for(y=0;y<n;y++)z[y]=b[y][w]|0,z[y]!==0&&(W=!1);if(!W)break;Pt++,w--}if(w>=0&&Pt++,H=H.dblp(Pt),w<0)break;for(y=0;y<n;y++){var Rt=z[y];Rt!==0&&(Rt>0?S=p[y][Rt-1>>1]:Rt<0&&(S=p[y][-Rt-1>>1].neg()),S.type===\"affine\"?H=H.mixedAdd(S):H=H.add(S))}}for(w=0;w<n;w++)p[w]=null;return o?H:H.toP()};function Xt(e,t){this.curve=e,this.type=t,this.precomputed=null}Ce.BasePoint=Xt,Xt.prototype.eq=function(){throw new Error(\"Not implemented\")},Xt.prototype.validate=function(){return this.curve.validate(this)},Ce.prototype.decodePoint=function(t,r){t=Jt.toArray(t,r);var i=this.p.byteLength();if((t[0]===4||t[0]===6||t[0]===7)&&t.length-1===2*i){t[0]===6?kr(t[t.length-1]%2===0):t[0]===7&&kr(t[t.length-1]%2===1);var n=this.point(t.slice(1,1+i),t.slice(1+i,1+2*i));return n}else if((t[0]===2||t[0]===3)&&t.length-1===i)return this.pointFromX(t.slice(1,1+i),t[0]===3);throw new Error(\"Unknown point format\")},Xt.prototype.encodeCompressed=function(t){return this.encode(t,!0)},Xt.prototype._encode=function(t){var r=this.curve.p.byteLength(),i=this.getX().toArray(\"be\",r);return t?[this.getY().isEven()?2:3].concat(i):[4].concat(i,this.getY().toArray(\"be\",r))},Xt.prototype.encode=function(t,r){return Jt.encode(this._encode(r),t)},Xt.prototype.precompute=function(t){if(this.precomputed)return this;var r={doubles:null,naf:null,beta:null};return r.naf=this._getNAFPoints(8),r.doubles=this._getDoubles(4,t),r.beta=this._getBeta(),this.precomputed=r,this},Xt.prototype._hasDoubles=function(t){if(!this.precomputed)return!1;var r=this.precomputed.doubles;return r?r.points.length>=Math.ceil((t.bitLength()+1)/r.step):!1},Xt.prototype._getDoubles=function(t,r){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var i=[this],n=this,o=0;o<r;o+=t){for(var h=0;h<t;h++)n=n.dbl();i.push(n)}return{step:t,points:i}},Xt.prototype._getNAFPoints=function(t){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var r=[this],i=(1<<t)-1,n=i===1?null:this.dbl(),o=1;o<i;o++)r[o]=r[o-1].add(n);return{wnd:t,points:r}},Xt.prototype._getBeta=function(){return null},Xt.prototype.dblp=function(t){for(var r=this,i=0;i<t;i++)r=r.dbl();return r};var Di=cr(function(e){typeof Object.create==\"function\"?e.exports=function(r,i){i&&(r.super_=i,r.prototype=Object.create(i.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(r,i){if(i){r.super_=i;var n=function(){};n.prototype=i.prototype,r.prototype=new n,r.prototype.constructor=r}}}),Ua=Jt.assert;function Zt(e){Ze.call(this,\"short\",e),this.a=new K(e.a,16).toRed(this.red),this.b=new K(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=this.a.fromRed().cmpn(0)===0,this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0,this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}Di(Zt,Ze);var ka=Zt;Zt.prototype._getEndomorphism=function(t){if(!(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)){var r,i;if(t.beta)r=new K(t.beta,16).toRed(this.red);else{var n=this._getEndoRoots(this.p);r=n[0].cmp(n[1])<0?n[0]:n[1],r=r.toRed(this.red)}if(t.lambda)i=new K(t.lambda,16);else{var o=this._getEndoRoots(this.n);this.g.mul(o[0]).x.cmp(this.g.x.redMul(r))===0?i=o[0]:(i=o[1],Ua(this.g.mul(i).x.cmp(this.g.x.redMul(r))===0))}var h;return t.basis?h=t.basis.map(function(p){return{a:new K(p.a,16),b:new K(p.b,16)}}):h=this._getEndoBasis(i),{beta:r,lambda:i,basis:h}}},Zt.prototype._getEndoRoots=function(t){var r=t===this.p?this.red:K.mont(t),i=new K(2).toRed(r).redInvm(),n=i.redNeg(),o=new K(3).toRed(r).redNeg().redSqrt().redMul(i),h=n.redAdd(o).fromRed(),p=n.redSub(o).fromRed();return[h,p]},Zt.prototype._getEndoBasis=function(t){for(var r=this.n.ushrn(Math.floor(this.n.bitLength()/2)),i=t,n=this.n.clone(),o=new K(1),h=new K(0),p=new K(0),b=new K(1),m,w,y,S,I,N,C,F=0,U,J;i.cmpn(0)!==0;){var Bt=n.div(i);U=n.sub(Bt.mul(i)),J=p.sub(Bt.mul(o));var G=b.sub(Bt.mul(h));if(!y&&U.cmp(r)<0)m=C.neg(),w=o,y=U.neg(),S=J;else if(y&&++F===2)break;C=U,n=i,i=U,p=o,o=J,b=h,h=G}I=U.neg(),N=J;var H=y.sqr().add(S.sqr()),z=I.sqr().add(N.sqr());return z.cmp(H)>=0&&(I=m,N=w),y.negative&&(y=y.neg(),S=S.neg()),I.negative&&(I=I.neg(),N=N.neg()),[{a:y,b:S},{a:I,b:N}]},Zt.prototype._endoSplit=function(t){var r=this.endo.basis,i=r[0],n=r[1],o=n.b.mul(t).divRound(this.n),h=i.b.neg().mul(t).divRound(this.n),p=o.mul(i.a),b=h.mul(n.a),m=o.mul(i.b),w=h.mul(n.b),y=t.sub(p).sub(b),S=m.add(w).neg();return{k1:y,k2:S}},Zt.prototype.pointFromX=function(t,r){t=new K(t,16),t.red||(t=t.toRed(this.red));var i=t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),n=i.redSqrt();if(n.redSqr().redSub(i).cmp(this.zero)!==0)throw new Error(\"invalid point\");var o=n.fromRed().isOdd();return(r&&!o||!r&&o)&&(n=n.redNeg()),this.point(t,n)},Zt.prototype.validate=function(t){if(t.inf)return!0;var r=t.x,i=t.y,n=this.a.redMul(r),o=r.redSqr().redMul(r).redIAdd(n).redIAdd(this.b);return i.redSqr().redISub(o).cmpn(0)===0},Zt.prototype._endoWnafMulAdd=function(t,r,i){for(var n=this._endoWnafT1,o=this._endoWnafT2,h=0;h<t.length;h++){var p=this._endoSplit(r[h]),b=t[h],m=b._getBeta();p.k1.negative&&(p.k1.ineg(),b=b.neg(!0)),p.k2.negative&&(p.k2.ineg(),m=m.neg(!0)),n[h*2]=b,n[h*2+1]=m,o[h*2]=p.k1,o[h*2+1]=p.k2}for(var w=this._wnafMulAdd(1,n,o,h*2,i),y=0;y<h*2;y++)n[y]=null,o[y]=null;return w};function Ft(e,t,r,i){Ze.BasePoint.call(this,e,\"affine\"),t===null&&r===null?(this.x=null,this.y=null,this.inf=!0):(this.x=new K(t,16),this.y=new K(r,16),i&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}Di(Ft,Ze.BasePoint),Zt.prototype.point=function(t,r,i){return new Ft(this,t,r,i)},Zt.prototype.pointFromJSON=function(t,r){return Ft.fromJSON(this,t,r)},Ft.prototype._getBeta=function(){if(this.curve.endo){var t=this.precomputed;if(t&&t.beta)return t.beta;var r=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(t){var i=this.curve,n=function(o){return i.point(o.x.redMul(i.endo.beta),o.y)};t.beta=r,r.precomputed={beta:null,naf:t.naf&&{wnd:t.naf.wnd,points:t.naf.points.map(n)},doubles:t.doubles&&{step:t.doubles.step,points:t.doubles.points.map(n)}}}return r}},Ft.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},Ft.fromJSON=function(t,r,i){typeof r==\"string\"&&(r=JSON.parse(r));var n=t.point(r[0],r[1],i);if(!r[2])return n;function o(p){return t.point(p[0],p[1],i)}var h=r[2];return n.precomputed={beta:null,doubles:h.doubles&&{step:h.doubles.step,points:[n].concat(h.doubles.points.map(o))},naf:h.naf&&{wnd:h.naf.wnd,points:[n].concat(h.naf.points.map(o))}},n},Ft.prototype.inspect=function(){return this.isInfinity()?\"<EC Point Infinity>\":\"<EC Point x: \"+this.x.fromRed().toString(16,2)+\" y: \"+this.y.fromRed().toString(16,2)+\">\"},Ft.prototype.isInfinity=function(){return this.inf},Ft.prototype.add=function(t){if(this.inf)return t;if(t.inf)return this;if(this.eq(t))return this.dbl();if(this.neg().eq(t))return this.curve.point(null,null);if(this.x.cmp(t.x)===0)return this.curve.point(null,null);var r=this.y.redSub(t.y);r.cmpn(0)!==0&&(r=r.redMul(this.x.redSub(t.x).redInvm()));var i=r.redSqr().redISub(this.x).redISub(t.x),n=r.redMul(this.x.redSub(i)).redISub(this.y);return this.curve.point(i,n)},Ft.prototype.dbl=function(){if(this.inf)return this;var t=this.y.redAdd(this.y);if(t.cmpn(0)===0)return this.curve.point(null,null);var r=this.curve.a,i=this.x.redSqr(),n=t.redInvm(),o=i.redAdd(i).redIAdd(i).redIAdd(r).redMul(n),h=o.redSqr().redISub(this.x.redAdd(this.x)),p=o.redMul(this.x.redSub(h)).redISub(this.y);return this.curve.point(h,p)},Ft.prototype.getX=function(){return this.x.fromRed()},Ft.prototype.getY=function(){return this.y.fromRed()},Ft.prototype.mul=function(t){return t=new K(t,16),this.isInfinity()?this:this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve.endo?this.curve._endoWnafMulAdd([this],[t]):this.curve._wnafMul(this,t)},Ft.prototype.mulAdd=function(t,r,i){var n=[this,r],o=[t,i];return this.curve.endo?this.curve._endoWnafMulAdd(n,o):this.curve._wnafMulAdd(1,n,o,2)},Ft.prototype.jmulAdd=function(t,r,i){var n=[this,r],o=[t,i];return this.curve.endo?this.curve._endoWnafMulAdd(n,o,!0):this.curve._wnafMulAdd(1,n,o,2,!0)},Ft.prototype.eq=function(t){return this===t||this.inf===t.inf&&(this.inf||this.x.cmp(t.x)===0&&this.y.cmp(t.y)===0)},Ft.prototype.neg=function(t){if(this.inf)return this;var r=this.curve.point(this.x,this.y.redNeg());if(t&&this.precomputed){var i=this.precomputed,n=function(o){return o.neg()};r.precomputed={naf:i.naf&&{wnd:i.naf.wnd,points:i.naf.points.map(n)},doubles:i.doubles&&{step:i.doubles.step,points:i.doubles.points.map(n)}}}return r},Ft.prototype.toJ=function(){if(this.inf)return this.curve.jpoint(null,null,null);var t=this.curve.jpoint(this.x,this.y,this.curve.one);return t};function Tt(e,t,r,i){Ze.BasePoint.call(this,e,\"jacobian\"),t===null&&r===null&&i===null?(this.x=this.curve.one,this.y=this.curve.one,this.z=new K(0)):(this.x=new K(t,16),this.y=new K(r,16),this.z=new K(i,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}Di(Tt,Ze.BasePoint),Zt.prototype.jpoint=function(t,r,i){return new Tt(this,t,r,i)},Tt.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var t=this.z.redInvm(),r=t.redSqr(),i=this.x.redMul(r),n=this.y.redMul(r).redMul(t);return this.curve.point(i,n)},Tt.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},Tt.prototype.add=function(t){if(this.isInfinity())return t;if(t.isInfinity())return this;var r=t.z.redSqr(),i=this.z.redSqr(),n=this.x.redMul(r),o=t.x.redMul(i),h=this.y.redMul(r.redMul(t.z)),p=t.y.redMul(i.redMul(this.z)),b=n.redSub(o),m=h.redSub(p);if(b.cmpn(0)===0)return m.cmpn(0)!==0?this.curve.jpoint(null,null,null):this.dbl();var w=b.redSqr(),y=w.redMul(b),S=n.redMul(w),I=m.redSqr().redIAdd(y).redISub(S).redISub(S),N=m.redMul(S.redISub(I)).redISub(h.redMul(y)),C=this.z.redMul(t.z).redMul(b);return this.curve.jpoint(I,N,C)},Tt.prototype.mixedAdd=function(t){if(this.isInfinity())return t.toJ();if(t.isInfinity())return this;var r=this.z.redSqr(),i=this.x,n=t.x.redMul(r),o=this.y,h=t.y.redMul(r).redMul(this.z),p=i.redSub(n),b=o.redSub(h);if(p.cmpn(0)===0)return b.cmpn(0)!==0?this.curve.jpoint(null,null,null):this.dbl();var m=p.redSqr(),w=m.redMul(p),y=i.redMul(m),S=b.redSqr().redIAdd(w).redISub(y).redISub(y),I=b.redMul(y.redISub(S)).redISub(o.redMul(w)),N=this.z.redMul(p);return this.curve.jpoint(S,I,N)},Tt.prototype.dblp=function(t){if(t===0)return this;if(this.isInfinity())return this;if(!t)return this.dbl();var r;if(this.curve.zeroA||this.curve.threeA){var i=this;for(r=0;r<t;r++)i=i.dbl();return i}var n=this.curve.a,o=this.curve.tinv,h=this.x,p=this.y,b=this.z,m=b.redSqr().redSqr(),w=p.redAdd(p);for(r=0;r<t;r++){var y=h.redSqr(),S=w.redSqr(),I=S.redSqr(),N=y.redAdd(y).redIAdd(y).redIAdd(n.redMul(m)),C=h.redMul(S),F=N.redSqr().redISub(C.redAdd(C)),U=C.redISub(F),J=N.redMul(U);J=J.redIAdd(J).redISub(I);var Bt=w.redMul(b);r+1<t&&(m=m.redMul(I)),h=F,b=Bt,w=J}return this.curve.jpoint(h,w.redMul(o),b)},Tt.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},Tt.prototype._zeroDbl=function(){var t,r,i;if(this.zOne){var n=this.x.redSqr(),o=this.y.redSqr(),h=o.redSqr(),p=this.x.redAdd(o).redSqr().redISub(n).redISub(h);p=p.redIAdd(p);var b=n.redAdd(n).redIAdd(n),m=b.redSqr().redISub(p).redISub(p),w=h.redIAdd(h);w=w.redIAdd(w),w=w.redIAdd(w),t=m,r=b.redMul(p.redISub(m)).redISub(w),i=this.y.redAdd(this.y)}else{var y=this.x.redSqr(),S=this.y.redSqr(),I=S.redSqr(),N=this.x.redAdd(S).redSqr().redISub(y).redISub(I);N=N.redIAdd(N);var C=y.redAdd(y).redIAdd(y),F=C.redSqr(),U=I.redIAdd(I);U=U.redIAdd(U),U=U.redIAdd(U),t=F.redISub(N).redISub(N),r=C.redMul(N.redISub(t)).redISub(U),i=this.y.redMul(this.z),i=i.redIAdd(i)}return this.curve.jpoint(t,r,i)},Tt.prototype._threeDbl=function(){var t,r,i;if(this.zOne){var n=this.x.redSqr(),o=this.y.redSqr(),h=o.redSqr(),p=this.x.redAdd(o).redSqr().redISub(n).redISub(h);p=p.redIAdd(p);var b=n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),m=b.redSqr().redISub(p).redISub(p);t=m;var w=h.redIAdd(h);w=w.redIAdd(w),w=w.redIAdd(w),r=b.redMul(p.redISub(m)).redISub(w),i=this.y.redAdd(this.y)}else{var y=this.z.redSqr(),S=this.y.redSqr(),I=this.x.redMul(S),N=this.x.redSub(y).redMul(this.x.redAdd(y));N=N.redAdd(N).redIAdd(N);var C=I.redIAdd(I);C=C.redIAdd(C);var F=C.redAdd(C);t=N.redSqr().redISub(F),i=this.y.redAdd(this.z).redSqr().redISub(S).redISub(y);var U=S.redSqr();U=U.redIAdd(U),U=U.redIAdd(U),U=U.redIAdd(U),r=N.redMul(C.redISub(t)).redISub(U)}return this.curve.jpoint(t,r,i)},Tt.prototype._dbl=function(){var t=this.curve.a,r=this.x,i=this.y,n=this.z,o=n.redSqr().redSqr(),h=r.redSqr(),p=i.redSqr(),b=h.redAdd(h).redIAdd(h).redIAdd(t.redMul(o)),m=r.redAdd(r);m=m.redIAdd(m);var w=m.redMul(p),y=b.redSqr().redISub(w.redAdd(w)),S=w.redISub(y),I=p.redSqr();I=I.redIAdd(I),I=I.redIAdd(I),I=I.redIAdd(I);var N=b.redMul(S).redISub(I),C=i.redAdd(i).redMul(n);return this.curve.jpoint(y,N,C)},Tt.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var t=this.x.redSqr(),r=this.y.redSqr(),i=this.z.redSqr(),n=r.redSqr(),o=t.redAdd(t).redIAdd(t),h=o.redSqr(),p=this.x.redAdd(r).redSqr().redISub(t).redISub(n);p=p.redIAdd(p),p=p.redAdd(p).redIAdd(p),p=p.redISub(h);var b=p.redSqr(),m=n.redIAdd(n);m=m.redIAdd(m),m=m.redIAdd(m),m=m.redIAdd(m);var w=o.redIAdd(p).redSqr().redISub(h).redISub(b).redISub(m),y=r.redMul(w);y=y.redIAdd(y),y=y.redIAdd(y);var S=this.x.redMul(b).redISub(y);S=S.redIAdd(S),S=S.redIAdd(S);var I=this.y.redMul(w.redMul(m.redISub(w)).redISub(p.redMul(b)));I=I.redIAdd(I),I=I.redIAdd(I),I=I.redIAdd(I);var N=this.z.redAdd(p).redSqr().redISub(i).redISub(b);return this.curve.jpoint(S,I,N)},Tt.prototype.mul=function(t,r){return t=new K(t,r),this.curve._wnafMul(this,t)},Tt.prototype.eq=function(t){if(t.type===\"affine\")return this.eq(t.toJ());if(this===t)return!0;var r=this.z.redSqr(),i=t.z.redSqr();if(this.x.redMul(i).redISub(t.x.redMul(r)).cmpn(0)!==0)return!1;var n=r.redMul(this.z),o=i.redMul(t.z);return this.y.redMul(o).redISub(t.y.redMul(n)).cmpn(0)===0},Tt.prototype.eqXToP=function(t){var r=this.z.redSqr(),i=t.toRed(this.curve.red).redMul(r);if(this.x.cmp(i)===0)return!0;for(var n=t.clone(),o=this.curve.redN.redMul(r);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return!1;if(i.redIAdd(o),this.x.cmp(i)===0)return!0}},Tt.prototype.inspect=function(){return this.isInfinity()?\"<EC JPoint Infinity>\":\"<EC JPoint x: \"+this.x.toString(16,2)+\" y: \"+this.y.toString(16,2)+\" z: \"+this.z.toString(16,2)+\">\"},Tt.prototype.isInfinity=function(){return this.z.cmpn(0)===0};var qr=cr(function(e,t){var r=t;r.base=Ze,r.short=ka,r.mont=null,r.edwards=null}),Kr=cr(function(e,t){var r=t,i=Jt.assert;function n(p){p.type===\"short\"?this.curve=new qr.short(p):p.type===\"edwards\"?this.curve=new qr.edwards(p):this.curve=new qr.mont(p),this.g=this.curve.g,this.n=this.curve.n,this.hash=p.hash,i(this.g.validate(),\"Invalid curve\"),i(this.g.mul(this.n).isInfinity(),\"Invalid curve, G*N != O\")}r.PresetCurve=n;function o(p,b){Object.defineProperty(r,p,{configurable:!0,enumerable:!0,get:function(){var m=new n(b);return Object.defineProperty(r,p,{configurable:!0,enumerable:!0,value:m}),m}})}o(\"p192\",{type:\"short\",prime:\"p192\",p:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",b:\"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",n:\"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",hash:se.sha256,gRed:!1,g:[\"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"]}),o(\"p224\",{type:\"short\",prime:\"p224\",p:\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",b:\"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",n:\"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",hash:se.sha256,gRed:!1,g:[\"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"]}),o(\"p256\",{type:\"short\",prime:null,p:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",a:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",b:\"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",n:\"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",hash:se.sha256,gRed:!1,g:[\"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"]}),o(\"p384\",{type:\"short\",prime:null,p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff\",a:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc\",b:\"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",n:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",hash:se.sha384,gRed:!1,g:[\"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7\",\"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"]}),o(\"p521\",{type:\"short\",prime:null,p:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff\",a:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc\",b:\"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",n:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",hash:se.sha512,gRed:!1,g:[\"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650\"]}),o(\"curve25519\",{type:\"mont\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"76d06\",b:\"1\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:se.sha256,gRed:!1,g:[\"9\"]}),o(\"ed25519\",{type:\"edwards\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"-1\",c:\"1\",d:\"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:se.sha256,gRed:!1,g:[\"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\"6666666666666666666666666666666666666666666666666666666666666658\"]});var h;try{h=null.crash()}catch{h=void 0}o(\"secp256k1\",{type:\"short\",prime:\"k256\",p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",a:\"0\",b:\"7\",n:\"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",h:\"1\",hash:se.sha256,beta:\"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",lambda:\"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",basis:[{a:\"3086d221a7d46bcde86c90e49284eb15\",b:\"-e4437ed6010e88286f547fa90abfe4c3\"},{a:\"114ca50f7a8e2f3f657c1108d9d44cfd8\",b:\"3086d221a7d46bcde86c90e49284eb15\"}],gRed:!1,g:[\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",h]})});function Re(e){if(!(this instanceof Re))return new Re(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var t=fe.toArray(e.entropy,e.entropyEnc||\"hex\"),r=fe.toArray(e.nonce,e.nonceEnc||\"hex\"),i=fe.toArray(e.pers,e.persEnc||\"hex\");Pi(t.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\"),this._init(t,r,i)}var Rf=Re;Re.prototype._init=function(t,r,i){var n=t.concat(r).concat(i);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var o=0;o<this.V.length;o++)this.K[o]=0,this.V[o]=1;this._update(n),this._reseed=1,this.reseedInterval=281474976710656},Re.prototype._hmac=function(){return new se.hmac(this.hash,this.K)},Re.prototype._update=function(t){var r=this._hmac().update(this.V).update([0]);t&&(r=r.update(t)),this.K=r.digest(),this.V=this._hmac().update(this.V).digest(),t&&(this.K=this._hmac().update(this.V).update([1]).update(t).digest(),this.V=this._hmac().update(this.V).digest())},Re.prototype.reseed=function(t,r,i,n){typeof r!=\"string\"&&(n=i,i=r,r=null),t=fe.toArray(t,r),i=fe.toArray(i,n),Pi(t.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\"),this._update(t.concat(i||[])),this._reseed=1},Re.prototype.generate=function(t,r,i,n){if(this._reseed>this.reseedInterval)throw new Error(\"Reseed is required\");typeof r!=\"string\"&&(n=i,i=r,r=null),i&&(i=fe.toArray(i,n||\"hex\"),this._update(i));for(var o=[];o.length<t;)this.V=this._hmac().update(this.V).digest(),o=o.concat(this.V);var h=o.slice(0,t);return this._update(i),this._reseed++,fe.encode(h,r)};var Fi=Jt.assert;function kt(e,t){this.ec=e,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc)}var Ti=kt;kt.fromPublic=function(t,r,i){return r instanceof kt?r:new kt(t,{pub:r,pubEnc:i})},kt.fromPrivate=function(t,r,i){return r instanceof kt?r:new kt(t,{priv:r,privEnc:i})},kt.prototype.validate=function(){var t=this.getPublic();return t.isInfinity()?{result:!1,reason:\"Invalid public key\"}:t.validate()?t.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:\"Public key * N != O\"}:{result:!1,reason:\"Public key is not a point\"}},kt.prototype.getPublic=function(t,r){return typeof t==\"string\"&&(r=t,t=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),r?this.pub.encode(r,t):this.pub},kt.prototype.getPrivate=function(t){return t===\"hex\"?this.priv.toString(16,2):this.priv},kt.prototype._importPrivate=function(t,r){this.priv=new K(t,r||16),this.priv=this.priv.umod(this.ec.curve.n)},kt.prototype._importPublic=function(t,r){if(t.x||t.y){this.ec.curve.type===\"mont\"?Fi(t.x,\"Need x coordinate\"):(this.ec.curve.type===\"short\"||this.ec.curve.type===\"edwards\")&&Fi(t.x&&t.y,\"Need both x and y coordinate\"),this.pub=this.ec.curve.point(t.x,t.y);return}this.pub=this.ec.curve.decodePoint(t,r)},kt.prototype.derive=function(t){return t.validate()||Fi(t.validate(),\"public point not validated\"),t.mul(this.priv).getX()},kt.prototype.sign=function(t,r,i){return this.ec.sign(t,this,r,i)},kt.prototype.verify=function(t,r){return this.ec.verify(t,r,this)},kt.prototype.inspect=function(){return\"<Key priv: \"+(this.priv&&this.priv.toString(16,2))+\" pub: \"+(this.pub&&this.pub.inspect())+\" >\"};var qa=Jt.assert;function Hr(e,t){if(e instanceof Hr)return e;this._importDER(e,t)||(qa(e.r&&e.s,\"Signature without r or s\"),this.r=new K(e.r,16),this.s=new K(e.s,16),e.recoveryParam===void 0?this.recoveryParam=null:this.recoveryParam=e.recoveryParam)}var zr=Hr;function Ka(){this.place=0}function Ui(e,t){var r=e[t.place++];if(!(r&128))return r;var i=r&15;if(i===0||i>4)return!1;for(var n=0,o=0,h=t.place;o<i;o++,h++)n<<=8,n|=e[h],n>>>=0;return n<=127?!1:(t.place=h,n)}function Of(e){for(var t=0,r=e.length-1;!e[t]&&!(e[t+1]&128)&&t<r;)t++;return t===0?e:e.slice(t)}Hr.prototype._importDER=function(t,r){t=Jt.toArray(t,r);var i=new Ka;if(t[i.place++]!==48)return!1;var n=Ui(t,i);if(n===!1||n+i.place!==t.length||t[i.place++]!==2)return!1;var o=Ui(t,i);if(o===!1)return!1;var h=t.slice(i.place,o+i.place);if(i.place+=o,t[i.place++]!==2)return!1;var p=Ui(t,i);if(p===!1||t.length!==p+i.place)return!1;var b=t.slice(i.place,p+i.place);if(h[0]===0)if(h[1]&128)h=h.slice(1);else return!1;if(b[0]===0)if(b[1]&128)b=b.slice(1);else return!1;return this.r=new K(h),this.s=new K(b),this.recoveryParam=null,!0};function ki(e,t){if(t<128){e.push(t);return}var r=1+(Math.log(t)/Math.LN2>>>3);for(e.push(r|128);--r;)e.push(t>>>(r<<3)&255);e.push(t)}Hr.prototype.toDER=function(t){var r=this.r.toArray(),i=this.s.toArray();for(r[0]&128&&(r=[0].concat(r)),i[0]&128&&(i=[0].concat(i)),r=Of(r),i=Of(i);!i[0]&&!(i[1]&128);)i=i.slice(1);var n=[2];ki(n,r.length),n=n.concat(r),n.push(2),ki(n,i.length);var o=n.concat(i),h=[48];return ki(h,o.length),h=h.concat(o),Jt.encode(h,t)};var Ha=function(){throw new Error(\"unsupported\")},Pf=Jt.assert;function $t(e){if(!(this instanceof $t))return new $t(e);typeof e==\"string\"&&(Pf(Object.prototype.hasOwnProperty.call(Kr,e),\"Unknown curve \"+e),e=Kr[e]),e instanceof Kr.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}var za=$t;$t.prototype.keyPair=function(t){return new Ti(this,t)},$t.prototype.keyFromPrivate=function(t,r){return Ti.fromPrivate(this,t,r)},$t.prototype.keyFromPublic=function(t,r){return Ti.fromPublic(this,t,r)},$t.prototype.genKeyPair=function(t){t||(t={});for(var r=new Rf({hash:this.hash,pers:t.pers,persEnc:t.persEnc||\"utf8\",entropy:t.entropy||Ha(this.hash.hmacStrength),entropyEnc:t.entropy&&t.entropyEnc||\"utf8\",nonce:this.n.toArray()}),i=this.n.byteLength(),n=this.n.sub(new K(2));;){var o=new K(r.generate(i));if(!(o.cmp(n)>0))return o.iaddn(1),this.keyFromPrivate(o)}},$t.prototype._truncateToN=function(t,r){var i=t.byteLength()*8-this.n.bitLength();return i>0&&(t=t.ushrn(i)),!r&&t.cmp(this.n)>=0?t.sub(this.n):t},$t.prototype.sign=function(t,r,i,n){typeof i==\"object\"&&(n=i,i=null),n||(n={}),r=this.keyFromPrivate(r,i),t=this._truncateToN(new K(t,16));for(var o=this.n.byteLength(),h=r.getPrivate().toArray(\"be\",o),p=t.toArray(\"be\",o),b=new Rf({hash:this.hash,entropy:h,nonce:p,pers:n.pers,persEnc:n.persEnc||\"utf8\"}),m=this.n.sub(new K(1)),w=0;;w++){var y=n.k?n.k(w):new K(b.generate(this.n.byteLength()));if(y=this._truncateToN(y,!0),!(y.cmpn(1)<=0||y.cmp(m)>=0)){var S=this.g.mul(y);if(!S.isInfinity()){var I=S.getX(),N=I.umod(this.n);if(N.cmpn(0)!==0){var C=y.invm(this.n).mul(N.mul(r.getPrivate()).iadd(t));if(C=C.umod(this.n),C.cmpn(0)!==0){var F=(S.getY().isOdd()?1:0)|(I.cmp(N)!==0?2:0);return n.canonical&&C.cmp(this.nh)>0&&(C=this.n.sub(C),F^=1),new zr({r:N,s:C,recoveryParam:F})}}}}}},$t.prototype.verify=function(t,r,i,n){t=this._truncateToN(new K(t,16)),i=this.keyFromPublic(i,n),r=new zr(r,\"hex\");var o=r.r,h=r.s;if(o.cmpn(1)<0||o.cmp(this.n)>=0||h.cmpn(1)<0||h.cmp(this.n)>=0)return!1;var p=h.invm(this.n),b=p.mul(t).umod(this.n),m=p.mul(o).umod(this.n),w;return this.curve._maxwellTrick?(w=this.g.jmulAdd(b,i.getPublic(),m),w.isInfinity()?!1:w.eqXToP(o)):(w=this.g.mulAdd(b,i.getPublic(),m),w.isInfinity()?!1:w.getX().umod(this.n).cmp(o)===0)},$t.prototype.recoverPubKey=function(e,t,r,i){Pf((3&r)===r,\"The recovery param is more than two bits\"),t=new zr(t,i);var n=this.n,o=new K(e),h=t.r,p=t.s,b=r&1,m=r>>1;if(h.cmp(this.curve.p.umod(this.curve.n))>=0&&m)throw new Error(\"Unable to find sencond key candinate\");m?h=this.curve.pointFromX(h.add(this.curve.n),b):h=this.curve.pointFromX(h,b);var w=t.r.invm(n),y=n.sub(o).mul(w).umod(n),S=p.mul(w).umod(n);return this.g.mulAdd(y,h,S)},$t.prototype.getKeyRecoveryParam=function(e,t,r,i){if(t=new zr(t,i),t.recoveryParam!==null)return t.recoveryParam;for(var n=0;n<4;n++){var o;try{o=this.recoverPubKey(e,t,n)}catch{continue}if(o.eq(r))return n}throw new Error(\"Unable to find valid recovery factor\")};var La=cr(function(e,t){var r=t;r.version=\"6.5.4\",r.utils=Jt,r.rand=function(){throw new Error(\"unsupported\")},r.curve=qr,r.curves=Kr,r.ec=za,r.eddsa=null}),ja=La.ec;const Qa=\"signing-key/5.7.0\",qi=new L(Qa);let Ki=null;function ve(){return Ki||(Ki=new ja(\"secp256k1\")),Ki}class Ja{constructor(t){br(this,\"curve\",\"secp256k1\"),br(this,\"privateKey\",Kt(t)),N0(this.privateKey)!==32&&qi.throwArgumentError(\"invalid private key\",\"privateKey\",\"[[ REDACTED ]]\");const r=ve().keyFromPrivate(Ot(this.privateKey));br(this,\"publicKey\",\"0x\"+r.getPublic(!1,\"hex\")),br(this,\"compressedPublicKey\",\"0x\"+r.getPublic(!0,\"hex\")),br(this,\"_isSigningKey\",!0)}_addPoint(t){const r=ve().keyFromPublic(Ot(this.publicKey)),i=ve().keyFromPublic(Ot(t));return\"0x\"+r.pub.add(i.pub).encodeCompressed(\"hex\")}signDigest(t){const r=ve().keyFromPrivate(Ot(this.privateKey)),i=Ot(t);i.length!==32&&qi.throwArgumentError(\"bad digest length\",\"digest\",t);const n=r.sign(i,{canonical:!0});return zn({recoveryParam:n.recoveryParam,r:oe(\"0x\"+n.r.toString(16),32),s:oe(\"0x\"+n.s.toString(16),32)})}computeSharedSecret(t){const r=ve().keyFromPrivate(Ot(this.privateKey)),i=ve().keyFromPublic(Ot(Df(t)));return oe(\"0x\"+r.derive(i.getPublic()).toString(16),32)}static isSigningKey(t){return!!(t&&t._isSigningKey)}}function Ga(e,t){const r=zn(t),i={r:Ot(r.r),s:Ot(r.s)};return\"0x\"+ve().recoverPubKey(Ot(e),i,r.recoveryParam).encode(\"hex\",!1)}function Df(e,t){const r=Ot(e);if(r.length===32){const i=new Ja(r);return t?\"0x\"+ve().keyFromPrivate(r).getPublic(!0,\"hex\"):i.publicKey}else{if(r.length===33)return t?Kt(r):\"0x\"+ve().keyFromPublic(r).getPublic(!1,\"hex\");if(r.length===65)return t?\"0x\"+ve().keyFromPublic(r).getPublic(!0,\"hex\"):Kt(r)}return qi.throwArgumentError(\"invalid public or private key\",\"key\",\"[REDACTED]\")}const Ya=\"transactions/5.7.0\";new L(Ya);var Ff;(function(e){e[e.legacy=0]=\"legacy\",e[e.eip2930=1]=\"eip2930\",e[e.eip1559=2]=\"eip1559\"})(Ff||(Ff={}));function Va(e){const t=Df(e);return ns(Hn(yi(Hn(t,1)),12))}function Wa(e,t){return Va(Ga(Ot(e),t))}const Xa=\"https://rpc.walletconnect.com/v1\";async function Tf(e,t,r,i,n,o){switch(r.t){case\"eip191\":return Uf(e,t,r.s);case\"eip1271\":return await kf(e,t,r.s,i,n,o);default:throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${r.t}`)}}function Uf(e,t,r){return Wa(ff(t),r).toLowerCase()===e.toLowerCase()}async function kf(e,t,r,i,n,o){try{const h=\"0x1626ba7e\",p=\"0000000000000000000000000000000000000000000000000000000000000040\",b=\"0000000000000000000000000000000000000000000000000000000000000041\",m=r.substring(2),w=ff(t).substring(2),y=h+w+p+b+m,S=await fetch(`${o||Xa}/?chainId=${i}&projectId=${n}`,{method:\"POST\",body:JSON.stringify({id:Za(),jsonrpc:\"2.0\",method:\"eth_call\",params:[{to:e,data:y},\"latest\"]})}),{result:I}=await S.json();return I?I.slice(0,h.length).toLowerCase()===h.toLowerCase():!1}catch(h){return console.error(\"isValidEip1271Signature: \",h),!1}}function Za(){return Date.now()+Math.floor(Math.random()*1e3)}var $a=Object.defineProperty,tu=Object.defineProperties,eu=Object.getOwnPropertyDescriptors,qf=Object.getOwnPropertySymbols,ru=Object.prototype.hasOwnProperty,iu=Object.prototype.propertyIsEnumerable,Kf=(e,t,r)=>t in e?$a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,Hi=(e,t)=>{for(var r in t||(t={}))ru.call(t,r)&&Kf(e,r,t[r]);if(qf)for(var r of qf(t))iu.call(t,r)&&Kf(e,r,t[r]);return e},Hf=(e,t)=>tu(e,eu(t));const nu=\"did:pkh:\",Lr=e=>e?.split(\":\"),zi=e=>{const t=e&&Lr(e);if(t)return e.includes(nu)?t[3]:t[1]},fu=e=>{const t=e&&Lr(e);if(t)return t[2]+\":\"+t[3]},Li=e=>{const t=e&&Lr(e);if(t)return t.pop()};async function ou(e){const{cacao:t,projectId:r}=e,{s:i,p:n}=t,o=zf(n,n.iss),h=Li(n.iss);return await Tf(h,o,i,zi(n.iss),r)}const zf=(e,t)=>{const r=`${e.domain} wants you to sign in with your Ethereum account:`,i=Li(t);if(!e.aud&&!e.uri)throw new Error(\"Either `aud` or `uri` is required to construct the message\");let n=e.statement||void 0;const o=`URI: ${e.aud||e.uri}`,h=`Version: ${e.version}`,p=`Chain ID: ${zi(t)}`,b=`Nonce: ${e.nonce}`,m=`Issued At: ${e.iat}`,w=e.resources?`Resources:${e.resources.map(S=>`\n- ${S}`).join(\"\")}`:void 0,y=Qr(e.resources);if(y){const S=Oe(y);n=Ji(n,S)}return[r,i,\"\",n,\"\",o,h,p,b,m,w].filter(S=>S!=null).join(`\n`)};function su(e,t,r){return r.includes(\"did:pkh:\")||(r=`did:pkh:${r}`),{h:{t:\"caip122\"},p:{iss:r,domain:e.domain,aud:e.aud,version:e.version,nonce:e.nonce,iat:e.iat,statement:e.statement,requestId:e.requestId,resources:e.resources,nbf:e.nbf,exp:e.exp},s:t}}function au(e){var t;const{authPayload:r,chains:i,methods:n}=e,o=r.statement||\"\";if(!(i!=null&&i.length))return r;const h=r.chains,p=mi(h,i);if(!(p!=null&&p.length))throw new Error(\"No supported chains\");const b=Lf(r.resources);if(!b)return r;me(b);const m=jf(b,\"eip155\");let w=r?.resources||[];if(m!=null&&m.length){const y=Qf(m),S=mi(y,n);if(!(S!=null&&S.length))throw new Error(`Supported methods don't satisfy the requested: ${JSON.stringify(y)}, supported: ${JSON.stringify(n)}`);const I=ji(\"request\",S,{chains:p}),N=Vf(b,\"eip155\",I);w=((t=r?.resources)==null?void 0:t.slice(0,-1))||[],w.push(jr(N))}return Hf(Hi({},r),{statement:Xf(o,Qr(w)),chains:p,resources:r!=null&&r.resources||w.length>0?w:void 0})}function Lf(e){const t=Qr(e);if(t&&Qi(t))return Oe(t)}function uu(e,t){var r;return(r=e?.att)==null?void 0:r.hasOwnProperty(t)}function jf(e,t){var r,i;return(r=e?.att)!=null&&r[t]?Object.keys((i=e?.att)==null?void 0:i[t]):[]}function hu(e){return e?.map(t=>Object.keys(t))||[]}function Qf(e){return e?.map(t=>{var r;return(r=t.split(\"/\"))==null?void 0:r[1]})||[]}function Jf(e){return Buffer.from(JSON.stringify(e)).toString(\"base64\")}function Gf(e){return JSON.parse(Buffer.from(e,\"base64\").toString(\"utf-8\"))}function me(e){if(!e)throw new Error(\"No recap provided, value is undefined\");if(!e.att)throw new Error(\"No `att` property found\");const t=Object.keys(e.att);if(!(t!=null&&t.length))throw new Error(\"No resources found in `att` property\");t.forEach(r=>{const i=e.att[r];if(Array.isArray(i))throw new Error(`Resource must be an object: ${r}`);if(typeof i!=\"object\")throw new Error(`Resource must be an object: ${r}`);if(!Object.keys(i).length)throw new Error(`Resource object is empty: ${r}`);Object.keys(i).forEach(n=>{const o=i[n];if(!Array.isArray(o))throw new Error(`Ability limits ${n} must be an array of objects, found: ${o}`);if(!o.length)throw new Error(`Value of ${n} is empty array, must be an array with objects`);o.forEach(h=>{if(typeof h!=\"object\")throw new Error(`Ability limits (${n}) must be an array of objects, found: ${h}`)})})})}function Yf(e,t,r,i={}){return r?.sort((n,o)=>n.localeCompare(o)),{att:{[e]:ji(t,r,i)}}}function Vf(e,t,r){var i;return e.att[t]=Hi({},r),((i=Object.keys(e.att))==null?void 0:i.sort((n,o)=>n.localeCompare(o))).reduce((n,o)=>(n.att[o]=e.att[o],n),{att:{}})}function ji(e,t,r={}){t=t?.sort((n,o)=>n.localeCompare(o));const i=t.map(n=>({[`${e}/${n}`]:[r]}));return Object.assign({},...i)}function jr(e){return me(e),`urn:recap:${Jf(e).replace(/=/g,\"\")}`}function Oe(e){const t=Gf(e.replace(\"urn:recap:\",\"\"));return me(t),t}function cu(e,t,r){const i=Yf(e,t,r);return jr(i)}function Qi(e){return e&&e.includes(\"urn:recap:\")}function lu(e,t){const r=Oe(e),i=Oe(t),n=Wf(r,i);return jr(n)}function Wf(e,t){me(e),me(t);const r=Object.keys(e.att).concat(Object.keys(t.att)).sort((n,o)=>n.localeCompare(o)),i={att:{}};return r.forEach(n=>{var o,h;Object.keys(((o=e.att)==null?void 0:o[n])||{}).concat(Object.keys(((h=t.att)==null?void 0:h[n])||{})).sort((p,b)=>p.localeCompare(b)).forEach(p=>{var b,m;i.att[n]=Hf(Hi({},i.att[n]),{[p]:((b=e.att[n])==null?void 0:b[p])||((m=t.att[n])==null?void 0:m[p])})})}),i}function Ji(e=\"\",t){me(t);const r=\"I further authorize the stated URI to perform the following actions on my behalf: \";if(e.includes(r))return e;const i=[];let n=0;Object.keys(t.att).forEach(p=>{const b=Object.keys(t.att[p]).map(y=>({ability:y.split(\"/\")[0],action:y.split(\"/\")[1]}));b.sort((y,S)=>y.action.localeCompare(S.action));const m={};b.forEach(y=>{m[y.ability]||(m[y.ability]=[]),m[y.ability].push(y.action)});const w=Object.keys(m).map(y=>(n++,`(${n}) '${y}': '${m[y].join(\"', '\")}' for '${p}'.`));i.push(w.join(\", \").replace(\".,\",\".\"))});const o=i.join(\" \"),h=`${r}${o}`;return`${e?e+\" \":\"\"}${h}`}function du(e){var t;const r=Oe(e);me(r);const i=(t=r.att)==null?void 0:t.eip155;return i?Object.keys(i).map(n=>n.split(\"/\")[1]):[]}function pu(e){const t=Oe(e);me(t);const r=[];return Object.values(t.att).forEach(i=>{Object.values(i).forEach(n=>{var o;(o=n?.[0])!=null&&o.chains&&r.push(n[0].chains)})}),[...new Set(r.flat())]}function Xf(e,t){if(!t)return e;const r=Oe(t);return me(r),Ji(e,r)}function Qr(e){if(!e)return;const t=e?.[e.length-1];return Qi(t)?t:void 0}const Gi=\"base10\",zt=\"base16\",Jr=\"base64pad\",Gr=\"utf8\",Yi=0,lr=1,vu=0,Zf=1,Vi=12,Wi=32;function mu(){const e=_stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__.generateKeyPair();return{privateKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e.secretKey,zt),publicKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e.publicKey,zt)}}function gu(){const e=(0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(Wi);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e,zt)}function Au(e,t){const r=_stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__.sharedKey((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e,zt),(0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(t,zt),!0),i=new _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_5__.HKDF(_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.SHA256,r).expand(Wi);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(i,zt)}function bu(e){const t=(0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e,zt));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(t,zt)}function yu(e){const t=(0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e,Gr));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(t,zt)}function $f(e){return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(`${e}`,Gi)}function Mr(e){return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e,Gi))}function wu(e){const t=$f(typeof e.type<\"u\"?e.type:Yi);if(Mr(t)===lr&&typeof e.senderPublicKey>\"u\")throw new Error(\"Missing sender public key for type 1 envelope\");const r=typeof e.senderPublicKey<\"u\"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.senderPublicKey,zt):void 0,i=typeof e.iv<\"u\"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.iv,zt):(0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(Vi),n=new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.symKey,zt)).seal(i,(0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.message,Gr));return to({type:t,sealed:n,iv:i,senderPublicKey:r})}function xu(e){const t=new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.symKey,zt)),{sealed:r,iv:i}=Xi(e.encoded),n=t.open(i,r);if(n===null)throw new Error(\"Failed to decrypt\");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(n,Gr)}function to(e){if(Mr(e.type)===lr){if(typeof e.senderPublicKey>\"u\")throw new Error(\"Missing sender public key for type 1 envelope\");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.concat)([e.type,e.senderPublicKey,e.iv,e.sealed]),Jr)}return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.concat)([e.type,e.iv,e.sealed]),Jr)}function Xi(e){const t=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e,Jr),r=t.slice(vu,Zf),i=Zf;if(Mr(r)===lr){const p=i+Wi,b=p+Vi,m=t.slice(i,p),w=t.slice(p,b),y=t.slice(b);return{type:r,sealed:y,iv:w,senderPublicKey:m}}const n=i+Vi,o=t.slice(i,n),h=t.slice(n);return{type:r,sealed:h,iv:o}}function Mu(e,t){const r=Xi(e);return eo({type:Mr(r.type),senderPublicKey:typeof r.senderPublicKey<\"u\"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(r.senderPublicKey,zt):void 0,receiverPublicKey:t?.receiverPublicKey})}function eo(e){const t=e?.type||Yi;if(t===lr){if(typeof e?.senderPublicKey>\"u\")throw new Error(\"missing sender public key\");if(typeof e?.receiverPublicKey>\"u\")throw new Error(\"missing receiver public key\")}return{type:t,senderPublicKey:e?.senderPublicKey,receiverPublicKey:e?.receiverPublicKey}}function Eu(e){return e.type===lr&&typeof e.senderPublicKey==\"string\"&&typeof e.receiverPublicKey==\"string\"}const ro=\"irn\";function Su(e){return e?.relay||{protocol:ro}}function Nu(e){const t=_walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__.RELAY_JSONRPC[e];if(typeof t>\"u\")throw new Error(`Relay Protocol not supported: ${e}`);return t}var Iu=Object.defineProperty,_u=Object.defineProperties,Bu=Object.getOwnPropertyDescriptors,io=Object.getOwnPropertySymbols,Cu=Object.prototype.hasOwnProperty,Ru=Object.prototype.propertyIsEnumerable,no=(e,t,r)=>t in e?Iu(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,fo=(e,t)=>{for(var r in t||(t={}))Cu.call(t,r)&&no(e,r,t[r]);if(io)for(var r of io(t))Ru.call(t,r)&&no(e,r,t[r]);return e},Ou=(e,t)=>_u(e,Bu(t));function oo(e,t=\"-\"){const r={},i=\"relay\"+t;return Object.keys(e).forEach(n=>{if(n.startsWith(i)){const o=n.replace(i,\"\"),h=e[n];r[o]=h}}),r}function Pu(e){e=e.includes(\"wc://\")?e.replace(\"wc://\",\"\"):e,e=e.includes(\"wc:\")?e.replace(\"wc:\",\"\"):e;const t=e.indexOf(\":\"),r=e.indexOf(\"?\")!==-1?e.indexOf(\"?\"):void 0,i=e.substring(0,t),n=e.substring(t+1,r).split(\"@\"),o=typeof r<\"u\"?e.substring(r):\"\",h=query_string__WEBPACK_IMPORTED_MODULE_3__.parse(o),p=typeof h.methods==\"string\"?h.methods.split(\",\"):void 0;return{protocol:i,topic:so(n[0]),version:parseInt(n[1],10),symKey:h.symKey,relay:oo(h),methods:p,expiryTimestamp:h.expiryTimestamp?parseInt(h.expiryTimestamp,10):void 0}}function so(e){return e.startsWith(\"//\")?e.substring(2):e}function ao(e,t=\"-\"){const r=\"relay\",i={};return Object.keys(e).forEach(n=>{const o=r+t+n;e[n]&&(i[o]=e[n])}),i}function Du(e){return`${e.protocol}:${e.topic}@${e.version}?`+query_string__WEBPACK_IMPORTED_MODULE_3__.stringify(fo(Ou(fo({symKey:e.symKey},ao(e.relay)),{expiryTimestamp:e.expiryTimestamp}),e.methods?{methods:e.methods.join(\",\")}:{}))}var Fu=Object.defineProperty,Tu=Object.defineProperties,Uu=Object.getOwnPropertyDescriptors,uo=Object.getOwnPropertySymbols,ku=Object.prototype.hasOwnProperty,qu=Object.prototype.propertyIsEnumerable,ho=(e,t,r)=>t in e?Fu(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,Ku=(e,t)=>{for(var r in t||(t={}))ku.call(t,r)&&ho(e,r,t[r]);if(uo)for(var r of uo(t))qu.call(t,r)&&ho(e,r,t[r]);return e},Hu=(e,t)=>Tu(e,Uu(t));function $e(e){const t=[];return e.forEach(r=>{const[i,n]=r.split(\":\");t.push(`${i}:${n}`)}),t}function co(e){const t=[];return Object.values(e).forEach(r=>{t.push(...$e(r.accounts))}),t}function lo(e,t){const r=[];return Object.values(e).forEach(i=>{$e(i.accounts).includes(t)&&r.push(...i.methods)}),r}function po(e,t){const r=[];return Object.values(e).forEach(i=>{$e(i.accounts).includes(t)&&r.push(...i.events)}),r}function zu(e,t){const r=So(e,t);if(r)throw new Error(r.message);const i={};for(const[n,o]of Object.entries(e))i[n]={methods:o.methods,events:o.events,chains:o.accounts.map(h=>`${h.split(\":\")[0]}:${h.split(\":\")[1]}`)};return i}function Lu(e){const{proposal:{requiredNamespaces:t,optionalNamespaces:r={}},supportedNamespaces:i}=e,n=$i(t),o=$i(r),h={};Object.keys(i).forEach(m=>{const w=i[m].chains,y=i[m].methods,S=i[m].events,I=i[m].accounts;w.forEach(N=>{if(!I.some(C=>C.includes(N)))throw new Error(`No accounts provided for chain ${N} in namespace ${m}`)}),h[m]={chains:w,methods:y,events:S,accounts:I}});const p=Io(t,h,\"approve()\");if(p)throw new Error(p.message);const b={};return!Object.keys(t).length&&!Object.keys(r).length?h:(Object.keys(n).forEach(m=>{const w=i[m].chains.filter(N=>{var C,F;return(F=(C=n[m])==null?void 0:C.chains)==null?void 0:F.includes(N)}),y=i[m].methods.filter(N=>{var C,F;return(F=(C=n[m])==null?void 0:C.methods)==null?void 0:F.includes(N)}),S=i[m].events.filter(N=>{var C,F;return(F=(C=n[m])==null?void 0:C.events)==null?void 0:F.includes(N)}),I=w.map(N=>i[m].accounts.filter(C=>C.includes(`${N}:`))).flat();b[m]={chains:w,methods:y,events:S,accounts:I}}),Object.keys(o).forEach(m=>{var w,y,S,I,N,C;if(!i[m])return;const F=(y=(w=o[m])==null?void 0:w.chains)==null?void 0:y.filter(G=>i[m].chains.includes(G)),U=i[m].methods.filter(G=>{var H,z;return(z=(H=o[m])==null?void 0:H.methods)==null?void 0:z.includes(G)}),J=i[m].events.filter(G=>{var H,z;return(z=(H=o[m])==null?void 0:H.events)==null?void 0:z.includes(G)}),Bt=F?.map(G=>i[m].accounts.filter(H=>H.includes(`${G}:`))).flat();b[m]={chains:ge((S=b[m])==null?void 0:S.chains,F),methods:ge((I=b[m])==null?void 0:I.methods,U),events:ge((N=b[m])==null?void 0:N.events,J),accounts:ge((C=b[m])==null?void 0:C.accounts,Bt)}}),b)}function Zi(e){return e.includes(\":\")}function vo(e){return Zi(e)?e.split(\":\")[0]:e}function $i(e){var t,r,i;const n={};if(!Yr(e))return n;for(const[o,h]of Object.entries(e)){const p=Zi(o)?[o]:h.chains,b=h.methods||[],m=h.events||[],w=vo(o);n[w]=Hu(Ku({},n[w]),{chains:ge(p,(t=n[w])==null?void 0:t.chains),methods:ge(b,(r=n[w])==null?void 0:r.methods),events:ge(m,(i=n[w])==null?void 0:i.events)})}return n}function mo(e){const t={};return e?.forEach(r=>{const[i,n]=r.split(\":\");t[i]||(t[i]={accounts:[],chains:[],events:[]}),t[i].accounts.push(r),t[i].chains.push(`${i}:${n}`)}),t}function ju(e,t){t=t.map(i=>i.replace(\"did:pkh:\",\"\"));const r=mo(t);for(const[i,n]of Object.entries(r))n.methods?n.methods=ge(n.methods,e):n.methods=e,n.events=[\"chainChanged\",\"accountsChanged\"];return r}const go={INVALID_METHOD:{message:\"Invalid method.\",code:1001},INVALID_EVENT:{message:\"Invalid event.\",code:1002},INVALID_UPDATE_REQUEST:{message:\"Invalid update request.\",code:1003},INVALID_EXTEND_REQUEST:{message:\"Invalid extend request.\",code:1004},INVALID_SESSION_SETTLE_REQUEST:{message:\"Invalid session settle request.\",code:1005},UNAUTHORIZED_METHOD:{message:\"Unauthorized method.\",code:3001},UNAUTHORIZED_EVENT:{message:\"Unauthorized event.\",code:3002},UNAUTHORIZED_UPDATE_REQUEST:{message:\"Unauthorized update request.\",code:3003},UNAUTHORIZED_EXTEND_REQUEST:{message:\"Unauthorized extend request.\",code:3004},USER_REJECTED:{message:\"User rejected.\",code:5e3},USER_REJECTED_CHAINS:{message:\"User rejected chains.\",code:5001},USER_REJECTED_METHODS:{message:\"User rejected methods.\",code:5002},USER_REJECTED_EVENTS:{message:\"User rejected events.\",code:5003},UNSUPPORTED_CHAINS:{message:\"Unsupported chains.\",code:5100},UNSUPPORTED_METHODS:{message:\"Unsupported methods.\",code:5101},UNSUPPORTED_EVENTS:{message:\"Unsupported events.\",code:5102},UNSUPPORTED_ACCOUNTS:{message:\"Unsupported accounts.\",code:5103},UNSUPPORTED_NAMESPACE_KEY:{message:\"Unsupported namespace key.\",code:5104},USER_DISCONNECTED:{message:\"User disconnected.\",code:6e3},SESSION_SETTLEMENT_FAILED:{message:\"Session settlement failed.\",code:7e3},WC_METHOD_UNSUPPORTED:{message:\"Unsupported wc_ method.\",code:10001}},Ao={NOT_INITIALIZED:{message:\"Not initialized.\",code:1},NO_MATCHING_KEY:{message:\"No matching key.\",code:2},RESTORE_WILL_OVERRIDE:{message:\"Restore will override.\",code:3},RESUBSCRIBED:{message:\"Resubscribed.\",code:4},MISSING_OR_INVALID:{message:\"Missing or invalid.\",code:5},EXPIRED:{message:\"Expired.\",code:6},UNKNOWN_TYPE:{message:\"Unknown type.\",code:7},MISMATCHED_TOPIC:{message:\"Mismatched topic.\",code:8},NON_CONFORMING_NAMESPACES:{message:\"Non conforming namespaces.\",code:9}};function xe(e,t){const{message:r,code:i}=Ao[e];return{message:t?`${r} ${t}`:r,code:i}}function tr(e,t){const{message:r,code:i}=go[e];return{message:t?`${r} ${t}`:r,code:i}}function Er(e,t){return Array.isArray(e)?typeof t<\"u\"&&e.length?e.every(t):!0:!1}function Yr(e){return Object.getPrototypeOf(e)===Object.prototype&&Object.keys(e).length}function Pe(e){return typeof e>\"u\"}function Gt(e,t){return t&&Pe(e)?!0:typeof e==\"string\"&&!!e.trim().length}function Vr(e,t){return t&&Pe(e)?!0:typeof e==\"number\"&&!isNaN(e)}function Qu(e,t){const{requiredNamespaces:r}=t,i=Object.keys(e.namespaces),n=Object.keys(r);let o=!0;return _e(n,i)?(i.forEach(h=>{const{accounts:p,methods:b,events:m}=e.namespaces[h],w=$e(p),y=r[h];(!_e(_r(h,y),w)||!_e(y.methods,b)||!_e(y.events,m))&&(o=!1)}),o):!1}function Sr(e){return Gt(e,!1)&&e.includes(\":\")?e.split(\":\").length===2:!1}function bo(e){if(Gt(e,!1)&&e.includes(\":\")){const t=e.split(\":\");if(t.length===3){const r=t[0]+\":\"+t[1];return!!t[2]&&Sr(r)}}return!1}function Ju(e){if(Gt(e,!1))try{return typeof new URL(e)<\"u\"}catch{return!1}return!1}function Gu(e){var t;return(t=e?.proposer)==null?void 0:t.publicKey}function Yu(e){return e?.topic}function Vu(e,t){let r=null;return Gt(e?.publicKey,!1)||(r=xe(\"MISSING_OR_INVALID\",`${t} controller public key should be a string`)),r}function tn(e){let t=!0;return Er(e)?e.length&&(t=e.every(r=>Gt(r,!1))):t=!1,t}function yo(e,t,r){let i=null;return Er(t)&&t.length?t.forEach(n=>{i||Sr(n)||(i=tr(\"UNSUPPORTED_CHAINS\",`${r}, chain ${n} should be a string and conform to \"namespace:chainId\" format`))}):Sr(e)||(i=tr(\"UNSUPPORTED_CHAINS\",`${r}, chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }`)),i}function wo(e,t,r){let i=null;return Object.entries(e).forEach(([n,o])=>{if(i)return;const h=yo(n,_r(n,o),`${t} ${r}`);h&&(i=h)}),i}function xo(e,t){let r=null;return Er(e)?e.forEach(i=>{r||bo(i)||(r=tr(\"UNSUPPORTED_ACCOUNTS\",`${t}, account ${i} should be a string and conform to \"namespace:chainId:address\" format`))}):r=tr(\"UNSUPPORTED_ACCOUNTS\",`${t}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`),r}function Mo(e,t){let r=null;return Object.values(e).forEach(i=>{if(r)return;const n=xo(i?.accounts,`${t} namespace`);n&&(r=n)}),r}function Eo(e,t){let r=null;return tn(e?.methods)?tn(e?.events)||(r=tr(\"UNSUPPORTED_EVENTS\",`${t}, events should be an array of strings or empty array for no events`)):r=tr(\"UNSUPPORTED_METHODS\",`${t}, methods should be an array of strings or empty array for no methods`),r}function en(e,t){let r=null;return Object.values(e).forEach(i=>{if(r)return;const n=Eo(i,`${t}, namespace`);n&&(r=n)}),r}function Wu(e,t,r){let i=null;if(e&&Yr(e)){const n=en(e,t);n&&(i=n);const o=wo(e,t,r);o&&(i=o)}else i=xe(\"MISSING_OR_INVALID\",`${t}, ${r} should be an object with data`);return i}function So(e,t){let r=null;if(e&&Yr(e)){const i=en(e,t);i&&(r=i);const n=Mo(e,t);n&&(r=n)}else r=xe(\"MISSING_OR_INVALID\",`${t}, namespaces should be an object with data`);return r}function No(e){return Gt(e.protocol,!0)}function Xu(e,t){let r=!1;return t&&!e?r=!0:e&&Er(e)&&e.length&&e.forEach(i=>{r=No(i)}),r}function Zu(e){return typeof e==\"number\"}function $u(e){return typeof e<\"u\"&&typeof e!==null}function th(e){return!(!e||typeof e!=\"object\"||!e.code||!Vr(e.code,!1)||!e.message||!Gt(e.message,!1))}function eh(e){return!(Pe(e)||!Gt(e.method,!1))}function rh(e){return!(Pe(e)||Pe(e.result)&&Pe(e.error)||!Vr(e.id,!1)||!Gt(e.jsonrpc,!1))}function ih(e){return!(Pe(e)||!Gt(e.name,!1))}function nh(e,t){return!(!Sr(t)||!co(e).includes(t))}function fh(e,t,r){return Gt(r,!1)?lo(e,t).includes(r):!1}function oh(e,t,r){return Gt(r,!1)?po(e,t).includes(r):!1}function Io(e,t,r){let i=null;const n=sh(e),o=ah(t),h=Object.keys(n),p=Object.keys(o),b=_o(Object.keys(e)),m=_o(Object.keys(t)),w=b.filter(y=>!m.includes(y));return w.length&&(i=xe(\"NON_CONFORMING_NAMESPACES\",`${r} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${w.toString()}\n      Received: ${Object.keys(t).toString()}`)),_e(h,p)||(i=xe(\"NON_CONFORMING_NAMESPACES\",`${r} namespaces chains don't satisfy required namespaces.\n      Required: ${h.toString()}\n      Approved: ${p.toString()}`)),Object.keys(t).forEach(y=>{if(!y.includes(\":\")||i)return;const S=$e(t[y].accounts);S.includes(y)||(i=xe(\"NON_CONFORMING_NAMESPACES\",`${r} namespaces accounts don't satisfy namespace accounts for ${y}\n        Required: ${y}\n        Approved: ${S.toString()}`))}),h.forEach(y=>{i||(_e(n[y].methods,o[y].methods)?_e(n[y].events,o[y].events)||(i=xe(\"NON_CONFORMING_NAMESPACES\",`${r} namespaces events don't satisfy namespace events for ${y}`)):i=xe(\"NON_CONFORMING_NAMESPACES\",`${r} namespaces methods don't satisfy namespace methods for ${y}`))}),i}function sh(e){const t={};return Object.keys(e).forEach(r=>{var i;r.includes(\":\")?t[r]=e[r]:(i=e[r].chains)==null||i.forEach(n=>{t[n]={methods:e[r].methods,events:e[r].events}})}),t}function _o(e){return[...new Set(e.map(t=>t.includes(\":\")?t.split(\":\")[0]:t))]}function ah(e){const t={};return Object.keys(e).forEach(r=>{if(r.includes(\":\"))t[r]=e[r];else{const i=$e(e[r].accounts);i?.forEach(n=>{t[n]={accounts:e[r].accounts.filter(o=>o.includes(`${n}:`)),methods:e[r].methods,events:e[r].events}})}}),t}function uh(e,t){return Vr(e,!1)&&e<=t.max&&e>=t.min}function hh(){const e=We();return new Promise(t=>{switch(e){case qt.browser:t(Bo());break;case qt.reactNative:t(Co());break;case qt.node:t(Ro());break;default:t(!0)}})}function Bo(){return pr()&&navigator?.onLine}async function Co(){if(er()&&typeof __webpack_require__.g<\"u\"&&__webpack_require__.g!=null&&__webpack_require__.g.NetInfo){const e=await(__webpack_require__.g==null?void 0:__webpack_require__.g.NetInfo.fetch());return e?.isConnected}return!0}function Ro(){return!0}function ch(e){switch(We()){case qt.browser:Oo(e);break;case qt.reactNative:Po(e);break;case qt.node:break}}function Oo(e){!er()&&pr()&&(window.addEventListener(\"online\",()=>e(!0)),window.addEventListener(\"offline\",()=>e(!1)))}function Po(e){er()&&typeof __webpack_require__.g<\"u\"&&__webpack_require__.g!=null&&__webpack_require__.g.NetInfo&&__webpack_require__.g?.NetInfo.addEventListener(t=>e(t?.isConnected))}const rn={};class lh{static get(t){return rn[t]}static set(t,r){rn[t]=r}static delete(t){delete rn[t]}}\n//# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9kaXN0L2luZGV4LmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFrc0IsYUFBYSxlQUFlLHVCQUF1QixPQUFPLHlCQUF5QixlQUFlLE1BQU0sd0JBQXdCLEdBQUcscUJBQXFCLGVBQWUseUJBQXlCLE9BQU8sbUNBQW1DLGVBQWUsTUFBTSxrQ0FBa0MsR0FBRyx1QkFBdUIsaUJBQWlCLFdBQVcscUJBQXFCLGFBQWEseUJBQXlCLElBQUksZUFBZSxNQUFNLFVBQVUsT0FBTyxTQUFTLGVBQWUsTUFBTSx3QkFBd0IsT0FBTyxXQUFXLHdCQUF3QixFQUFFLGlCQUFpQixNQUFNLHdCQUF3QixPQUFPLFdBQVcsa0NBQWtDLEVBQUUsZUFBZSxnQkFBZ0IsZUFBZSxnQkFBZ0Isb0JBQW9CLFdBQVcsa0NBQWtDLG1DQUFtQyxhQUFhLHNCQUFzQixJQUFJLG9CQUFvQixXQUFXLGtDQUFrQyxtQ0FBbUMsYUFBYSwwQkFBMEIsSUFBSSxvQkFBb0IsV0FBVyxrQ0FBa0MsbUNBQW1DLGFBQWEsbUJBQW1CLElBQUksaUJBQWlCLHdDQUF3QyxvS0FBb0ssa0RBQWtELG9CQUFvQixxQkFBcUIsNkJBQTZCLG9EQUFvRCxVQUFVLDJCQUEyQiwyRUFBMkUsMENBQTBDLGNBQWMsY0FBYyxPQUFPLGFBQWEsT0FBTyxzQkFBc0IsT0FBTyxtQkFBbUIsY0FBYyxPQUFPLDBFQUFFLE1BQU0sMkVBQUUsMkJBQTJCLGNBQWMsZUFBZSwyRUFBRSxN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QUNsQixrQkFBa0IsMEJBQTBCLGtEQUFrRCxHQUFHO0FBQ2pHLGtCQUFrQjtBQUNsQixrQkFBa0IsYUFBYSwrQkFBK0IsOEJBQThCLDBCQUEwQixvREFBb0QsR0FBRywyREFBMkQ7QUFDeE8sb0JBQW9CO0FBQ3BCLG9CQUFvQixhQUFhLElBQUksZ0JBQWdCLG9HQUFvRyxHQUFHLHVEQUF1RCxFQUFFLHdDQUF3QyxHQUFHLHlEQUF5RCxFQUFFLElBQUksSUFBSSxlQUFlLFdBQVcsa0NBQWtDLE1BQU0sK0RBQStELE1BQU0seUNBQXlDLEVBQUUsSUFBSSxlQUFlLGdFQUFnRSxlQUFlLFdBQVcsa0NBQWtDLDZCQUE2QixLQUFLLDBCQUEwQixlQUFlLE1BQU0sK0NBQStDLEVBQUUsOENBQThDLEdBQUcsSUFBSSxpQkFBaUIsb0NBQW9DLGNBQWMsYUFBYSx1QkFBdUIsVUFBVSx3QkFBd0IsTUFBTSw0QkFBNEIsTUFBTSxxQkFBcUIsTUFBTSxlQUFlLEVBQUUsY0FBYywrQkFBK0Isb0JBQW9CLGdCQUFnQixxQkFBTSxNQUFNLHFCQUFNLFFBQVEscUJBQU0sVUFBVSxjQUFjLHFCQUFNLGNBQWMscUJBQU0sa0JBQWtCLHNCQUFzQixTQUFTLGNBQWMsU0FBUyxlQUFlLGFBQWEsc0JBQXNCLE1BQU0sMEJBQTBCLE1BQU0sb0JBQW9CLGVBQWUsd0dBQXdHLGVBQWUsYUFBYSxxQkFBTSxNQUFNLHFCQUFNLFFBQVEscUJBQU0sVUFBVSxxQkFBTSxpREFBaUQsWUFBWSxTQUFTLGNBQWMsYUFBYSxnQkFBZ0IsUUFBUSxpQkFBaUIsY0FBeStIO0FBQ3JxTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9kaXN0L2luZGV4LmVzLmpzPzg3NWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0e2RldGVjdCBhcyBEb31mcm9tXCJkZXRlY3QtYnJvd3NlclwiO2ltcG9ydHt0b01pbGlzZWNvbmRzIGFzIGhpLEZJVkVfTUlOVVRFUyBhcyBubixmcm9tTWlsaXNlY29uZHMgYXMgRm99ZnJvbVwiQHdhbGxldGNvbm5lY3QvdGltZVwiO2ltcG9ydHtnZXREb2N1bWVudCBhcyBmbixnZXROYXZpZ2F0b3IgYXMgb24sZ2V0TG9jYXRpb24gYXMgc259ZnJvbVwiQHdhbGxldGNvbm5lY3Qvd2luZG93LWdldHRlcnNcIjtpbXBvcnR7Z2V0V2luZG93TWV0YWRhdGEgYXMgVG99ZnJvbVwiQHdhbGxldGNvbm5lY3Qvd2luZG93LW1ldGFkYXRhXCI7aW1wb3J0KmFzIE5yIGZyb21cInF1ZXJ5LXN0cmluZ1wiO2ltcG9ydHtDaGFDaGEyMFBvbHkxMzA1IGFzIGFufWZyb21cIkBzdGFibGVsaWIvY2hhY2hhMjBwb2x5MTMwNVwiO2ltcG9ydHtIS0RGIGFzIFVvfWZyb21cIkBzdGFibGVsaWIvaGtkZlwiO2ltcG9ydHtyYW5kb21CeXRlcyBhcyB1bn1mcm9tXCJAc3RhYmxlbGliL3JhbmRvbVwiO2ltcG9ydHtTSEEyNTYgYXMga28saGFzaCBhcyBobn1mcm9tXCJAc3RhYmxlbGliL3NoYTI1NlwiO2ltcG9ydCphcyBjbiBmcm9tXCJAc3RhYmxlbGliL3gyNTUxOVwiO2ltcG9ydHt0b1N0cmluZyBhcyB0ZSxmcm9tU3RyaW5nIGFzIGVlLGNvbmNhdCBhcyBsbn1mcm9tXCJ1aW50OGFycmF5c1wiO2ltcG9ydHtSRUxBWV9KU09OUlBDIGFzIHFvfWZyb21cIkB3YWxsZXRjb25uZWN0L3JlbGF5LWFwaVwiO2NvbnN0IElyPVwiOlwiO2Z1bmN0aW9uIGRuKGUpe2NvbnN0W3Qscl09ZS5zcGxpdChJcik7cmV0dXJue25hbWVzcGFjZTp0LHJlZmVyZW5jZTpyfX1mdW5jdGlvbiBwbihlKXtjb25zdHtuYW1lc3BhY2U6dCxyZWZlcmVuY2U6cn09ZTtyZXR1cm5bdCxyXS5qb2luKElyKX1mdW5jdGlvbiBjaShlKXtjb25zdFt0LHIsaV09ZS5zcGxpdChJcik7cmV0dXJue25hbWVzcGFjZTp0LHJlZmVyZW5jZTpyLGFkZHJlc3M6aX19ZnVuY3Rpb24gdm4oZSl7Y29uc3R7bmFtZXNwYWNlOnQscmVmZXJlbmNlOnIsYWRkcmVzczppfT1lO3JldHVyblt0LHIsaV0uam9pbihJcil9ZnVuY3Rpb24gbGkoZSx0KXtjb25zdCByPVtdO3JldHVybiBlLmZvckVhY2goaT0+e2NvbnN0IG49dChpKTtyLmluY2x1ZGVzKG4pfHxyLnB1c2gobil9KSxyfWZ1bmN0aW9uIG1uKGUpe2NvbnN0e2FkZHJlc3M6dH09Y2koZSk7cmV0dXJuIHR9ZnVuY3Rpb24gZ24oZSl7Y29uc3R7bmFtZXNwYWNlOnQscmVmZXJlbmNlOnJ9PWNpKGUpO3JldHVybiBwbih7bmFtZXNwYWNlOnQscmVmZXJlbmNlOnJ9KX1mdW5jdGlvbiBLbyhlLHQpe2NvbnN0e25hbWVzcGFjZTpyLHJlZmVyZW5jZTppfT1kbih0KTtyZXR1cm4gdm4oe25hbWVzcGFjZTpyLHJlZmVyZW5jZTppLGFkZHJlc3M6ZX0pfWZ1bmN0aW9uIEhvKGUpe3JldHVybiBsaShlLG1uKX1mdW5jdGlvbiBBbihlKXtyZXR1cm4gbGkoZSxnbil9ZnVuY3Rpb24gem8oZSx0PVtdKXtjb25zdCByPVtdO3JldHVybiBPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGk9PntpZih0Lmxlbmd0aCYmIXQuaW5jbHVkZXMoaSkpcmV0dXJuO2NvbnN0IG49ZVtpXTtyLnB1c2goLi4ubi5hY2NvdW50cyl9KSxyfWZ1bmN0aW9uIExvKGUsdD1bXSl7Y29uc3Qgcj1bXTtyZXR1cm4gT2JqZWN0LmtleXMoZSkuZm9yRWFjaChpPT57aWYodC5sZW5ndGgmJiF0LmluY2x1ZGVzKGkpKXJldHVybjtjb25zdCBuPWVbaV07ci5wdXNoKC4uLkFuKG4uYWNjb3VudHMpKX0pLHJ9ZnVuY3Rpb24gam8oZSx0PVtdKXtjb25zdCByPVtdO3JldHVybiBPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGk9PntpZih0Lmxlbmd0aCYmIXQuaW5jbHVkZXMoaSkpcmV0dXJuO2NvbnN0IG49ZVtpXTtyLnB1c2goLi4uX3IoaSxuKSl9KSxyfWZ1bmN0aW9uIF9yKGUsdCl7cmV0dXJuIGUuaW5jbHVkZXMoXCI6XCIpP1tlXTp0LmNoYWluc3x8W119dmFyIFFvPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxibj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLEpvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksR289T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSx5bj0oZSx0LHIpPT50IGluIGU/UW8oZSx0LHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTpyfSk6ZVt0XT1yLHduPShlLHQpPT57Zm9yKHZhciByIGluIHR8fCh0PXt9KSlKby5jYWxsKHQscikmJnluKGUscix0W3JdKTtpZihibilmb3IodmFyIHIgb2YgYm4odCkpR28uY2FsbCh0LHIpJiZ5bihlLHIsdFtyXSk7cmV0dXJuIGV9O2NvbnN0IHhuPVwiUmVhY3ROYXRpdmVcIixxdD17cmVhY3ROYXRpdmU6XCJyZWFjdC1uYXRpdmVcIixub2RlOlwibm9kZVwiLGJyb3dzZXI6XCJicm93c2VyXCIsdW5rbm93bjpcInVua25vd25cIn0sQnI9XCIgXCIsWW89XCI6XCIsTW49XCIvXCIsZGk9MixWbz0xZTMsRW49XCJqc1wiO2Z1bmN0aW9uIHBpKCl7cmV0dXJuIHR5cGVvZiBwcm9jZXNzPFwidVwiJiZ0eXBlb2YgcHJvY2Vzcy52ZXJzaW9uczxcInVcIiYmdHlwZW9mIHByb2Nlc3MudmVyc2lvbnMubm9kZTxcInVcIn1mdW5jdGlvbiBlcigpe3JldHVybiFmbigpJiYhIW9uKCkmJm5hdmlnYXRvci5wcm9kdWN0PT09eG59ZnVuY3Rpb24gcHIoKXtyZXR1cm4hcGkoKSYmISFvbigpJiYhIWZuKCl9ZnVuY3Rpb24gV2UoKXtyZXR1cm4gZXIoKT9xdC5yZWFjdE5hdGl2ZTpwaSgpP3F0Lm5vZGU6cHIoKT9xdC5icm93c2VyOnF0LnVua25vd259ZnVuY3Rpb24gV28oKXt2YXIgZTt0cnl7cmV0dXJuIGVyKCkmJnR5cGVvZiBnbG9iYWw8XCJ1XCImJnR5cGVvZihnbG9iYWw9PW51bGw/dm9pZCAwOmdsb2JhbC5BcHBsaWNhdGlvbik8XCJ1XCI/KGU9Z2xvYmFsLkFwcGxpY2F0aW9uKT09bnVsbD92b2lkIDA6ZS5hcHBsaWNhdGlvbklkOnZvaWQgMH1jYXRjaHtyZXR1cm59fWZ1bmN0aW9uIFNuKGUsdCl7bGV0IHI9TnIucGFyc2UoZSk7cmV0dXJuIHI9d24od24oe30sciksdCksZT1Oci5zdHJpbmdpZnkociksZX1mdW5jdGlvbiBYbygpe3JldHVybiBUbygpfHx7bmFtZTpcIlwiLGRlc2NyaXB0aW9uOlwiXCIsdXJsOlwiXCIsaWNvbnM6W1wiXCJdfX1mdW5jdGlvbiBabyhlLHQpe3ZhciByO2NvbnN0IGk9V2UoKSxuPXtwcm90b2NvbDplLHZlcnNpb246dCxlbnY6aX07cmV0dXJuIGk9PT1cImJyb3dzZXJcIiYmKG4uaG9zdD0oKHI9c24oKSk9PW51bGw/dm9pZCAwOnIuaG9zdCl8fFwidW5rbm93blwiKSxufWZ1bmN0aW9uIE5uKCl7aWYoV2UoKT09PXF0LnJlYWN0TmF0aXZlJiZ0eXBlb2YgZ2xvYmFsPFwidVwiJiZ0eXBlb2YoZ2xvYmFsPT1udWxsP3ZvaWQgMDpnbG9iYWwuUGxhdGZvcm0pPFwidVwiKXtjb25zdHtPUzpyLFZlcnNpb246aX09Z2xvYmFsLlBsYXRmb3JtO3JldHVybltyLGldLmpvaW4oXCItXCIpfWNvbnN0IGU9RG8oKTtpZihlPT09bnVsbClyZXR1cm5cInVua25vd25cIjtjb25zdCB0PWUub3M/ZS5vcy5yZXBsYWNlKFwiIFwiLFwiXCIpLnRvTG93ZXJDYXNlKCk6XCJ1bmtub3duXCI7cmV0dXJuIGUudHlwZT09PVwiYnJvd3NlclwiP1t0LGUubmFtZSxlLnZlcnNpb25dLmpvaW4oXCItXCIpOlt0LGUudmVyc2lvbl0uam9pbihcIi1cIil9ZnVuY3Rpb24gSW4oKXt2YXIgZTtjb25zdCB0PVdlKCk7cmV0dXJuIHQ9PT1xdC5icm93c2VyP1t0LCgoZT1zbigpKT09bnVsbD92b2lkIDA6ZS5ob3N0KXx8XCJ1bmtub3duXCJdLmpvaW4oXCI6XCIpOnR9ZnVuY3Rpb24gX24oZSx0LHIpe2NvbnN0IGk9Tm4oKSxuPUluKCk7cmV0dXJuW1tlLHRdLmpvaW4oXCItXCIpLFtFbixyXS5qb2luKFwiLVwiKSxpLG5dLmpvaW4oXCIvXCIpfWZ1bmN0aW9uICRvKHtwcm90b2NvbDplLHZlcnNpb246dCxyZWxheVVybDpyLHNka1ZlcnNpb246aSxhdXRoOm4scHJvamVjdElkOm8sdXNlT25DbG9zZUV2ZW50OmgsYnVuZGxlSWQ6cH0pe2NvbnN0IGI9ci5zcGxpdChcIj9cIiksbT1fbihlLHQsaSksdz17YXV0aDpuLHVhOm0scHJvamVjdElkOm8sdXNlT25DbG9zZUV2ZW50Omh8fHZvaWQgMCxvcmlnaW46cHx8dm9pZCAwfSx5PVNuKGJbMV18fFwiXCIsdyk7cmV0dXJuIGJbMF0rXCI/XCIreX1mdW5jdGlvbiB0MChlKXtsZXQgdD0oZS5tYXRjaCgvXlteOl0rKD89OlxcL1xcLykvZ2kpfHxbXSlbMF07Y29uc3Qgcj10eXBlb2YgdDxcInVcIj9lLnNwbGl0KFwiOi8vXCIpWzFdOmU7cmV0dXJuIHQ9dD09PVwid3NzXCI/XCJodHRwc1wiOlwiaHR0cFwiLFt0LHJdLmpvaW4oXCI6Ly9cIil9ZnVuY3Rpb24gZTAoZSx0LHIpe2lmKCFlW3RdfHx0eXBlb2YgZVt0XSE9PXIpdGhyb3cgbmV3IEVycm9yKGBNaXNzaW5nIG9yIGludmFsaWQgXCIke3R9XCIgcGFyYW1gKX1mdW5jdGlvbiBCbihlLHQ9ZGkpe3JldHVybiBDbihlLnNwbGl0KE1uKSx0KX1mdW5jdGlvbiByMChlKXtyZXR1cm4gQm4oZSkuam9pbihCcil9ZnVuY3Rpb24gX2UoZSx0KXtyZXR1cm4gZS5maWx0ZXIocj0+dC5pbmNsdWRlcyhyKSkubGVuZ3RoPT09ZS5sZW5ndGh9ZnVuY3Rpb24gQ24oZSx0PWRpKXtyZXR1cm4gZS5zbGljZShNYXRoLm1heChlLmxlbmd0aC10LDApKX1mdW5jdGlvbiBpMChlKXtyZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKGUuZW50cmllcygpKX1mdW5jdGlvbiBuMChlKXtyZXR1cm4gbmV3IE1hcChPYmplY3QuZW50cmllcyhlKSl9ZnVuY3Rpb24gZjAoZSx0KXtjb25zdCByPXt9O3JldHVybiBPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGk9PntyW2ldPXQoZVtpXSl9KSxyfWNvbnN0IG8wPWU9PmU7ZnVuY3Rpb24gUm4oZSl7cmV0dXJuIGUudHJpbSgpLnJlcGxhY2UoL15cXHcvLHQ9PnQudG9VcHBlckNhc2UoKSl9ZnVuY3Rpb24gczAoZSl7cmV0dXJuIGUuc3BsaXQoQnIpLm1hcCh0PT5Sbih0KSkuam9pbihCcil9ZnVuY3Rpb24gYTAoZT1ubix0KXtjb25zdCByPWhpKGV8fG5uKTtsZXQgaSxuLG87cmV0dXJue3Jlc29sdmU6aD0+e28mJmkmJihjbGVhclRpbWVvdXQobyksaShoKSl9LHJlamVjdDpoPT57byYmbiYmKGNsZWFyVGltZW91dChvKSxuKGgpKX0sZG9uZTooKT0+bmV3IFByb21pc2UoKGgscCk9PntvPXNldFRpbWVvdXQoKCk9PntwKG5ldyBFcnJvcih0KSl9LHIpLGk9aCxuPXB9KX19ZnVuY3Rpb24gdTAoZSx0LHIpe3JldHVybiBuZXcgUHJvbWlzZShhc3luYyhpLG4pPT57Y29uc3Qgbz1zZXRUaW1lb3V0KCgpPT5uKG5ldyBFcnJvcihyKSksdCk7dHJ5e2NvbnN0IGg9YXdhaXQgZTtpKGgpfWNhdGNoKGgpe24oaCl9Y2xlYXJUaW1lb3V0KG8pfSl9ZnVuY3Rpb24gdmkoZSx0KXtpZih0eXBlb2YgdD09XCJzdHJpbmdcIiYmdC5zdGFydHNXaXRoKGAke2V9OmApKXJldHVybiB0O2lmKGUudG9Mb3dlckNhc2UoKT09PVwidG9waWNcIil7aWYodHlwZW9mIHQhPVwic3RyaW5nXCIpdGhyb3cgbmV3IEVycm9yKCdWYWx1ZSBtdXN0IGJlIFwic3RyaW5nXCIgZm9yIGV4cGlyZXIgdGFyZ2V0IHR5cGU6IHRvcGljJyk7cmV0dXJuYHRvcGljOiR7dH1gfWVsc2UgaWYoZS50b0xvd2VyQ2FzZSgpPT09XCJpZFwiKXtpZih0eXBlb2YgdCE9XCJudW1iZXJcIil0aHJvdyBuZXcgRXJyb3IoJ1ZhbHVlIG11c3QgYmUgXCJudW1iZXJcIiBmb3IgZXhwaXJlciB0YXJnZXQgdHlwZTogaWQnKTtyZXR1cm5gaWQ6JHt0fWB9dGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGV4cGlyZXIgdGFyZ2V0IHR5cGU6ICR7ZX1gKX1mdW5jdGlvbiBoMChlKXtyZXR1cm4gdmkoXCJ0b3BpY1wiLGUpfWZ1bmN0aW9uIGMwKGUpe3JldHVybiB2aShcImlkXCIsZSl9ZnVuY3Rpb24gbDAoZSl7Y29uc3RbdCxyXT1lLnNwbGl0KFwiOlwiKSxpPXtpZDp2b2lkIDAsdG9waWM6dm9pZCAwfTtpZih0PT09XCJ0b3BpY1wiJiZ0eXBlb2Ygcj09XCJzdHJpbmdcIilpLnRvcGljPXI7ZWxzZSBpZih0PT09XCJpZFwiJiZOdW1iZXIuaXNJbnRlZ2VyKE51bWJlcihyKSkpaS5pZD1OdW1iZXIocik7ZWxzZSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdGFyZ2V0LCBleHBlY3RlZCBpZDpudW1iZXIgb3IgdG9waWM6c3RyaW5nLCBnb3QgJHt0fToke3J9YCk7cmV0dXJuIGl9ZnVuY3Rpb24gZDAoZSx0KXtyZXR1cm4gRm8oKHR8fERhdGUubm93KCkpK2hpKGUpKX1mdW5jdGlvbiBwMChlKXtyZXR1cm4gRGF0ZS5ub3coKT49aGkoZSl9ZnVuY3Rpb24gdjAoZSx0KXtyZXR1cm5gJHtlfSR7dD9gOiR7dH1gOlwiXCJ9YH1mdW5jdGlvbiBnZShlPVtdLHQ9W10pe3JldHVyblsuLi5uZXcgU2V0KFsuLi5lLC4uLnRdKV19YXN5bmMgZnVuY3Rpb24gbTAoe2lkOmUsdG9waWM6dCx3Y0RlZXBMaW5rOnJ9KXt0cnl7aWYoIXIpcmV0dXJuO2NvbnN0IGk9dHlwZW9mIHI9PVwic3RyaW5nXCI/SlNPTi5wYXJzZShyKTpyO2xldCBuPWk/LmhyZWY7aWYodHlwZW9mIG4hPVwic3RyaW5nXCIpcmV0dXJuO24uZW5kc1dpdGgoXCIvXCIpJiYobj1uLnNsaWNlKDAsLTEpKTtjb25zdCBvPWAke259L3djP3JlcXVlc3RJZD0ke2V9JnNlc3Npb25Ub3BpYz0ke3R9YCxoPVdlKCk7aD09PXF0LmJyb3dzZXI/by5zdGFydHNXaXRoKFwiaHR0cHM6Ly9cIil8fG8uc3RhcnRzV2l0aChcImh0dHA6Ly9cIik/d2luZG93Lm9wZW4obyxcIl9ibGFua1wiLFwibm9yZWZlcnJlciBub29wZW5lclwiKTp3aW5kb3cub3BlbihvLFwiX3NlbGZcIixcIm5vcmVmZXJyZXIgbm9vcGVuZXJcIik6aD09PXF0LnJlYWN0TmF0aXZlJiZ0eXBlb2YoZ2xvYmFsPT1udWxsP3ZvaWQgMDpnbG9iYWwuTGlua2luZyk8XCJ1XCImJmF3YWl0IGdsb2JhbC5MaW5raW5nLm9wZW5VUkwobyl9Y2F0Y2goaSl7Y29uc29sZS5lcnJvcihpKX19YXN5bmMgZnVuY3Rpb24gZzAoZSx0KXt0cnl7cmV0dXJuIGF3YWl0IGUuZ2V0SXRlbSh0KXx8KHByKCk/bG9jYWxTdG9yYWdlLmdldEl0ZW0odCk6dm9pZCAwKX1jYXRjaChyKXtjb25zb2xlLmVycm9yKHIpfX1mdW5jdGlvbiBtaShlLHQpe3JldHVybiBlLmZpbHRlcihyPT50LmluY2x1ZGVzKHIpKX12YXIgT249dHlwZW9mIGdsb2JhbFRoaXM8XCJ1XCI/Z2xvYmFsVGhpczp0eXBlb2Ygd2luZG93PFwidVwiP3dpbmRvdzp0eXBlb2YgZ2xvYmFsPFwidVwiP2dsb2JhbDp0eXBlb2Ygc2VsZjxcInVcIj9zZWxmOnt9O2Z1bmN0aW9uIEEwKGUpe3ZhciB0PWUuZGVmYXVsdDtpZih0eXBlb2YgdD09XCJmdW5jdGlvblwiKXt2YXIgcj1mdW5jdGlvbigpe3JldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX07ci5wcm90b3R5cGU9dC5wcm90b3R5cGV9ZWxzZSByPXt9O3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGZ1bmN0aW9uKGkpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxpKTtPYmplY3QuZGVmaW5lUHJvcGVydHkocixpLG4uZ2V0P246e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGVbaV19fSl9KSxyfXZhciBQbj17ZXhwb3J0czp7fX07LyoqXG4gKiBbanMtc2hhM117QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2VtbjE3OC9qcy1zaGEzfVxuICpcbiAqIEB2ZXJzaW9uIDAuOC4wXG4gKiBAYXV0aG9yIENoZW4sIFlpLUN5dWFuIFtlbW4xNzhAZ21haWwuY29tXVxuICogQGNvcHlyaWdodCBDaGVuLCBZaS1DeXVhbiAyMDE1LTIwMThcbiAqIEBsaWNlbnNlIE1JVFxuICovKGZ1bmN0aW9uKGUpeyhmdW5jdGlvbigpe3ZhciB0PVwiaW5wdXQgaXMgaW52YWxpZCB0eXBlXCIscj1cImZpbmFsaXplIGFscmVhZHkgY2FsbGVkXCIsaT10eXBlb2Ygd2luZG93PT1cIm9iamVjdFwiLG49aT93aW5kb3c6e307bi5KU19TSEEzX05PX1dJTkRPVyYmKGk9ITEpO3ZhciBvPSFpJiZ0eXBlb2Ygc2VsZj09XCJvYmplY3RcIixoPSFuLkpTX1NIQTNfTk9fTk9ERV9KUyYmdHlwZW9mIHByb2Nlc3M9PVwib2JqZWN0XCImJnByb2Nlc3MudmVyc2lvbnMmJnByb2Nlc3MudmVyc2lvbnMubm9kZTtoP249T246byYmKG49c2VsZik7dmFyIHA9IW4uSlNfU0hBM19OT19DT01NT05fSlMmJiEwJiZlLmV4cG9ydHMsYj0hbi5KU19TSEEzX05PX0FSUkFZX0JVRkZFUiYmdHlwZW9mIEFycmF5QnVmZmVyPFwidVwiLG09XCIwMTIzNDU2Nzg5YWJjZGVmXCIuc3BsaXQoXCJcIiksdz1bMzEsNzkzNiwyMDMxNjE2LDUyMDA5MzY5Nl0seT1bNCwxMDI0LDI2MjE0NCw2NzEwODg2NF0sUz1bMSwyNTYsNjU1MzYsMTY3NzcyMTZdLEk9WzYsMTUzNiwzOTMyMTYsMTAwNjYzMjk2XSxOPVswLDgsMTYsMjRdLEM9WzEsMCwzMjg5OCwwLDMyOTA2LDIxNDc0ODM2NDgsMjE0NzUxNjQxNiwyMTQ3NDgzNjQ4LDMyOTA3LDAsMjE0NzQ4MzY0OSwwLDIxNDc1MTY1NDUsMjE0NzQ4MzY0OCwzMjc3NywyMTQ3NDgzNjQ4LDEzOCwwLDEzNiwwLDIxNDc1MTY0MjUsMCwyMTQ3NDgzNjU4LDAsMjE0NzUxNjU1NSwwLDEzOSwyMTQ3NDgzNjQ4LDMyOTA1LDIxNDc0ODM2NDgsMzI3NzEsMjE0NzQ4MzY0OCwzMjc3MCwyMTQ3NDgzNjQ4LDEyOCwyMTQ3NDgzNjQ4LDMyNzc4LDAsMjE0NzQ4MzY1OCwyMTQ3NDgzNjQ4LDIxNDc1MTY1NDUsMjE0NzQ4MzY0OCwzMjg5NiwyMTQ3NDgzNjQ4LDIxNDc0ODM2NDksMCwyMTQ3NTE2NDI0LDIxNDc0ODM2NDhdLEY9WzIyNCwyNTYsMzg0LDUxMl0sVT1bMTI4LDI1Nl0sSj1bXCJoZXhcIixcImJ1ZmZlclwiLFwiYXJyYXlCdWZmZXJcIixcImFycmF5XCIsXCJkaWdlc3RcIl0sQnQ9ezEyODoxNjgsMjU2OjEzNn07KG4uSlNfU0hBM19OT19OT0RFX0pTfHwhQXJyYXkuaXNBcnJheSkmJihBcnJheS5pc0FycmF5PWZ1bmN0aW9uKHUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodSk9PT1cIltvYmplY3QgQXJyYXldXCJ9KSxiJiYobi5KU19TSEEzX05PX0FSUkFZX0JVRkZFUl9JU19WSUVXfHwhQXJyYXlCdWZmZXIuaXNWaWV3KSYmKEFycmF5QnVmZmVyLmlzVmlldz1mdW5jdGlvbih1KXtyZXR1cm4gdHlwZW9mIHU9PVwib2JqZWN0XCImJnUuYnVmZmVyJiZ1LmJ1ZmZlci5jb25zdHJ1Y3Rvcj09PUFycmF5QnVmZmVyfSk7Zm9yKHZhciBHPWZ1bmN0aW9uKHUsRSxfKXtyZXR1cm4gZnVuY3Rpb24oQil7cmV0dXJuIG5ldyBzKHUsRSx1KS51cGRhdGUoQilbX10oKX19LEg9ZnVuY3Rpb24odSxFLF8pe3JldHVybiBmdW5jdGlvbihCLFIpe3JldHVybiBuZXcgcyh1LEUsUikudXBkYXRlKEIpW19dKCl9fSx6PWZ1bmN0aW9uKHUsRSxfKXtyZXR1cm4gZnVuY3Rpb24oQixSLFQsUCl7cmV0dXJuIGZbXCJjc2hha2VcIit1XS51cGRhdGUoQixSLFQsUClbX10oKX19LFB0PWZ1bmN0aW9uKHUsRSxfKXtyZXR1cm4gZnVuY3Rpb24oQixSLFQsUCl7cmV0dXJuIGZbXCJrbWFjXCIrdV0udXBkYXRlKEIsUixULFApW19dKCl9fSxXPWZ1bmN0aW9uKHUsRSxfLEIpe2Zvcih2YXIgUj0wO1I8Si5sZW5ndGg7KytSKXt2YXIgVD1KW1JdO3VbVF09RShfLEIsVCl9cmV0dXJuIHV9LFJ0PWZ1bmN0aW9uKHUsRSl7dmFyIF89Ryh1LEUsXCJoZXhcIik7cmV0dXJuIF8uY3JlYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBzKHUsRSx1KX0sXy51cGRhdGU9ZnVuY3Rpb24oQil7cmV0dXJuIF8uY3JlYXRlKCkudXBkYXRlKEIpfSxXKF8sRyx1LEUpfSxZdD1mdW5jdGlvbih1LEUpe3ZhciBfPUgodSxFLFwiaGV4XCIpO3JldHVybiBfLmNyZWF0ZT1mdW5jdGlvbihCKXtyZXR1cm4gbmV3IHModSxFLEIpfSxfLnVwZGF0ZT1mdW5jdGlvbihCLFIpe3JldHVybiBfLmNyZWF0ZShSKS51cGRhdGUoQil9LFcoXyxILHUsRSl9LFk9ZnVuY3Rpb24odSxFKXt2YXIgXz1CdFt1XSxCPXoodSxFLFwiaGV4XCIpO3JldHVybiBCLmNyZWF0ZT1mdW5jdGlvbihSLFQsUCl7cmV0dXJuIVQmJiFQP2ZbXCJzaGFrZVwiK3VdLmNyZWF0ZShSKTpuZXcgcyh1LEUsUikuYnl0ZXBhZChbVCxQXSxfKX0sQi51cGRhdGU9ZnVuY3Rpb24oUixULFAsTyl7cmV0dXJuIEIuY3JlYXRlKFQsUCxPKS51cGRhdGUoUil9LFcoQix6LHUsRSl9LFZ0PWZ1bmN0aW9uKHUsRSl7dmFyIF89QnRbdV0sQj1QdCh1LEUsXCJoZXhcIik7cmV0dXJuIEIuY3JlYXRlPWZ1bmN0aW9uKFIsVCxQKXtyZXR1cm4gbmV3IHYodSxFLFQpLmJ5dGVwYWQoW1wiS01BQ1wiLFBdLF8pLmJ5dGVwYWQoW1JdLF8pfSxCLnVwZGF0ZT1mdW5jdGlvbihSLFQsUCxPKXtyZXR1cm4gQi5jcmVhdGUoUixQLE8pLnVwZGF0ZShUKX0sVyhCLFB0LHUsRSl9LEE9W3tuYW1lOlwia2VjY2FrXCIscGFkZGluZzpTLGJpdHM6RixjcmVhdGVNZXRob2Q6UnR9LHtuYW1lOlwic2hhM1wiLHBhZGRpbmc6SSxiaXRzOkYsY3JlYXRlTWV0aG9kOlJ0fSx7bmFtZTpcInNoYWtlXCIscGFkZGluZzp3LGJpdHM6VSxjcmVhdGVNZXRob2Q6WXR9LHtuYW1lOlwiY3NoYWtlXCIscGFkZGluZzp5LGJpdHM6VSxjcmVhdGVNZXRob2Q6WX0se25hbWU6XCJrbWFjXCIscGFkZGluZzp5LGJpdHM6VSxjcmVhdGVNZXRob2Q6VnR9XSxmPXt9LGE9W10sYz0wO2M8QS5sZW5ndGg7KytjKWZvcih2YXIgZD1BW2NdLGc9ZC5iaXRzLHg9MDt4PGcubGVuZ3RoOysreCl7dmFyIE09ZC5uYW1lK1wiX1wiK2dbeF07aWYoYS5wdXNoKE0pLGZbTV09ZC5jcmVhdGVNZXRob2QoZ1t4XSxkLnBhZGRpbmcpLGQubmFtZSE9PVwic2hhM1wiKXt2YXIgbD1kLm5hbWUrZ1t4XTthLnB1c2gobCksZltsXT1mW01dfX1mdW5jdGlvbiBzKHUsRSxfKXt0aGlzLmJsb2Nrcz1bXSx0aGlzLnM9W10sdGhpcy5wYWRkaW5nPUUsdGhpcy5vdXRwdXRCaXRzPV8sdGhpcy5yZXNldD0hMCx0aGlzLmZpbmFsaXplZD0hMSx0aGlzLmJsb2NrPTAsdGhpcy5zdGFydD0wLHRoaXMuYmxvY2tDb3VudD0xNjAwLSh1PDwxKT4+NSx0aGlzLmJ5dGVDb3VudD10aGlzLmJsb2NrQ291bnQ8PDIsdGhpcy5vdXRwdXRCbG9ja3M9Xz4+NSx0aGlzLmV4dHJhQnl0ZXM9KF8mMzEpPj4zO2Zvcih2YXIgQj0wO0I8NTA7KytCKXRoaXMuc1tCXT0wfXMucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih1KXtpZih0aGlzLmZpbmFsaXplZCl0aHJvdyBuZXcgRXJyb3Iocik7dmFyIEUsXz10eXBlb2YgdTtpZihfIT09XCJzdHJpbmdcIil7aWYoXz09PVwib2JqZWN0XCIpe2lmKHU9PT1udWxsKXRocm93IG5ldyBFcnJvcih0KTtpZihiJiZ1LmNvbnN0cnVjdG9yPT09QXJyYXlCdWZmZXIpdT1uZXcgVWludDhBcnJheSh1KTtlbHNlIGlmKCFBcnJheS5pc0FycmF5KHUpJiYoIWJ8fCFBcnJheUJ1ZmZlci5pc1ZpZXcodSkpKXRocm93IG5ldyBFcnJvcih0KX1lbHNlIHRocm93IG5ldyBFcnJvcih0KTtFPSEwfWZvcih2YXIgQj10aGlzLmJsb2NrcyxSPXRoaXMuYnl0ZUNvdW50LFQ9dS5sZW5ndGgsUD10aGlzLmJsb2NrQ291bnQsTz0wLEN0PXRoaXMucyxELHE7TzxUOyl7aWYodGhpcy5yZXNldClmb3IodGhpcy5yZXNldD0hMSxCWzBdPXRoaXMuYmxvY2ssRD0xO0Q8UCsxOysrRClCW0RdPTA7aWYoRSlmb3IoRD10aGlzLnN0YXJ0O088VCYmRDxSOysrTylCW0Q+PjJdfD11W09dPDxOW0QrKyYzXTtlbHNlIGZvcihEPXRoaXMuc3RhcnQ7TzxUJiZEPFI7KytPKXE9dS5jaGFyQ29kZUF0KE8pLHE8MTI4P0JbRD4+Ml18PXE8PE5bRCsrJjNdOnE8MjA0OD8oQltEPj4yXXw9KDE5MnxxPj42KTw8TltEKysmM10sQltEPj4yXXw9KDEyOHxxJjYzKTw8TltEKysmM10pOnE8NTUyOTZ8fHE+PTU3MzQ0PyhCW0Q+PjJdfD0oMjI0fHE+PjEyKTw8TltEKysmM10sQltEPj4yXXw9KDEyOHxxPj42JjYzKTw8TltEKysmM10sQltEPj4yXXw9KDEyOHxxJjYzKTw8TltEKysmM10pOihxPTY1NTM2KygocSYxMDIzKTw8MTB8dS5jaGFyQ29kZUF0KCsrTykmMTAyMyksQltEPj4yXXw9KDI0MHxxPj4xOCk8PE5bRCsrJjNdLEJbRD4+Ml18PSgxMjh8cT4+MTImNjMpPDxOW0QrKyYzXSxCW0Q+PjJdfD0oMTI4fHE+PjYmNjMpPDxOW0QrKyYzXSxCW0Q+PjJdfD0oMTI4fHEmNjMpPDxOW0QrKyYzXSk7aWYodGhpcy5sYXN0Qnl0ZUluZGV4PUQsRD49Uil7Zm9yKHRoaXMuc3RhcnQ9RC1SLHRoaXMuYmxvY2s9QltQXSxEPTA7RDxQOysrRClDdFtEXV49QltEXTtrKEN0KSx0aGlzLnJlc2V0PSEwfWVsc2UgdGhpcy5zdGFydD1EfXJldHVybiB0aGlzfSxzLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24odSxFKXt2YXIgXz11JjI1NSxCPTEsUj1bX107Zm9yKHU9dT4+OCxfPXUmMjU1O18+MDspUi51bnNoaWZ0KF8pLHU9dT4+OCxfPXUmMjU1LCsrQjtyZXR1cm4gRT9SLnB1c2goQik6Ui51bnNoaWZ0KEIpLHRoaXMudXBkYXRlKFIpLFIubGVuZ3RofSxzLnByb3RvdHlwZS5lbmNvZGVTdHJpbmc9ZnVuY3Rpb24odSl7dmFyIEUsXz10eXBlb2YgdTtpZihfIT09XCJzdHJpbmdcIil7aWYoXz09PVwib2JqZWN0XCIpe2lmKHU9PT1udWxsKXRocm93IG5ldyBFcnJvcih0KTtpZihiJiZ1LmNvbnN0cnVjdG9yPT09QXJyYXlCdWZmZXIpdT1uZXcgVWludDhBcnJheSh1KTtlbHNlIGlmKCFBcnJheS5pc0FycmF5KHUpJiYoIWJ8fCFBcnJheUJ1ZmZlci5pc1ZpZXcodSkpKXRocm93IG5ldyBFcnJvcih0KX1lbHNlIHRocm93IG5ldyBFcnJvcih0KTtFPSEwfXZhciBCPTAsUj11Lmxlbmd0aDtpZihFKUI9UjtlbHNlIGZvcih2YXIgVD0wO1Q8dS5sZW5ndGg7KytUKXt2YXIgUD11LmNoYXJDb2RlQXQoVCk7UDwxMjg/Qis9MTpQPDIwNDg/Qis9MjpQPDU1Mjk2fHxQPj01NzM0ND9CKz0zOihQPTY1NTM2KygoUCYxMDIzKTw8MTB8dS5jaGFyQ29kZUF0KCsrVCkmMTAyMyksQis9NCl9cmV0dXJuIEIrPXRoaXMuZW5jb2RlKEIqOCksdGhpcy51cGRhdGUodSksQn0scy5wcm90b3R5cGUuYnl0ZXBhZD1mdW5jdGlvbih1LEUpe2Zvcih2YXIgXz10aGlzLmVuY29kZShFKSxCPTA7Qjx1Lmxlbmd0aDsrK0IpXys9dGhpcy5lbmNvZGVTdHJpbmcodVtCXSk7dmFyIFI9RS1fJUUsVD1bXTtyZXR1cm4gVC5sZW5ndGg9Uix0aGlzLnVwZGF0ZShUKSx0aGlzfSxzLnByb3RvdHlwZS5maW5hbGl6ZT1mdW5jdGlvbigpe2lmKCF0aGlzLmZpbmFsaXplZCl7dGhpcy5maW5hbGl6ZWQ9ITA7dmFyIHU9dGhpcy5ibG9ja3MsRT10aGlzLmxhc3RCeXRlSW5kZXgsXz10aGlzLmJsb2NrQ291bnQsQj10aGlzLnM7aWYodVtFPj4yXXw9dGhpcy5wYWRkaW5nW0UmM10sdGhpcy5sYXN0Qnl0ZUluZGV4PT09dGhpcy5ieXRlQ291bnQpZm9yKHVbMF09dVtfXSxFPTE7RTxfKzE7KytFKXVbRV09MDtmb3IodVtfLTFdfD0yMTQ3NDgzNjQ4LEU9MDtFPF87KytFKUJbRV1ePXVbRV07ayhCKX19LHMucHJvdG90eXBlLnRvU3RyaW5nPXMucHJvdG90eXBlLmhleD1mdW5jdGlvbigpe3RoaXMuZmluYWxpemUoKTtmb3IodmFyIHU9dGhpcy5ibG9ja0NvdW50LEU9dGhpcy5zLF89dGhpcy5vdXRwdXRCbG9ja3MsQj10aGlzLmV4dHJhQnl0ZXMsUj0wLFQ9MCxQPVwiXCIsTztUPF87KXtmb3IoUj0wO1I8dSYmVDxfOysrUiwrK1QpTz1FW1JdLFArPW1bTz4+NCYxNV0rbVtPJjE1XSttW08+PjEyJjE1XSttW08+PjgmMTVdK21bTz4+MjAmMTVdK21bTz4+MTYmMTVdK21bTz4+MjgmMTVdK21bTz4+MjQmMTVdO1QldT09PTAmJihrKEUpLFI9MCl9cmV0dXJuIEImJihPPUVbUl0sUCs9bVtPPj40JjE1XSttW08mMTVdLEI+MSYmKFArPW1bTz4+MTImMTVdK21bTz4+OCYxNV0pLEI+MiYmKFArPW1bTz4+MjAmMTVdK21bTz4+MTYmMTVdKSksUH0scy5wcm90b3R5cGUuYXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXt0aGlzLmZpbmFsaXplKCk7dmFyIHU9dGhpcy5ibG9ja0NvdW50LEU9dGhpcy5zLF89dGhpcy5vdXRwdXRCbG9ja3MsQj10aGlzLmV4dHJhQnl0ZXMsUj0wLFQ9MCxQPXRoaXMub3V0cHV0Qml0cz4+MyxPO0I/Tz1uZXcgQXJyYXlCdWZmZXIoXysxPDwyKTpPPW5ldyBBcnJheUJ1ZmZlcihQKTtmb3IodmFyIEN0PW5ldyBVaW50MzJBcnJheShPKTtUPF87KXtmb3IoUj0wO1I8dSYmVDxfOysrUiwrK1QpQ3RbVF09RVtSXTtUJXU9PT0wJiZrKEUpfXJldHVybiBCJiYoQ3RbUl09RVtSXSxPPU8uc2xpY2UoMCxQKSksT30scy5wcm90b3R5cGUuYnVmZmVyPXMucHJvdG90eXBlLmFycmF5QnVmZmVyLHMucHJvdG90eXBlLmRpZ2VzdD1zLnByb3RvdHlwZS5hcnJheT1mdW5jdGlvbigpe3RoaXMuZmluYWxpemUoKTtmb3IodmFyIHU9dGhpcy5ibG9ja0NvdW50LEU9dGhpcy5zLF89dGhpcy5vdXRwdXRCbG9ja3MsQj10aGlzLmV4dHJhQnl0ZXMsUj0wLFQ9MCxQPVtdLE8sQ3Q7VDxfOyl7Zm9yKFI9MDtSPHUmJlQ8XzsrK1IsKytUKU89VDw8MixDdD1FW1JdLFBbT109Q3QmMjU1LFBbTysxXT1DdD4+OCYyNTUsUFtPKzJdPUN0Pj4xNiYyNTUsUFtPKzNdPUN0Pj4yNCYyNTU7VCV1PT09MCYmayhFKX1yZXR1cm4gQiYmKE89VDw8MixDdD1FW1JdLFBbT109Q3QmMjU1LEI+MSYmKFBbTysxXT1DdD4+OCYyNTUpLEI+MiYmKFBbTysyXT1DdD4+MTYmMjU1KSksUH07ZnVuY3Rpb24gdih1LEUsXyl7cy5jYWxsKHRoaXMsdSxFLF8pfXYucHJvdG90eXBlPW5ldyBzLHYucHJvdG90eXBlLmZpbmFsaXplPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZW5jb2RlKHRoaXMub3V0cHV0Qml0cywhMCkscy5wcm90b3R5cGUuZmluYWxpemUuY2FsbCh0aGlzKX07dmFyIGs9ZnVuY3Rpb24odSl7dmFyIEUsXyxCLFIsVCxQLE8sQ3QsRCxxLERlLFgsWixGZSwkLHR0LFRlLGV0LHJ0LFVlLGl0LG50LGtlLGZ0LG90LHFlLHN0LGF0LEtlLHV0LGh0LEhlLGN0LGx0LHplLGR0LHB0LExlLHZ0LG10LGplLGd0LEF0LFFlLGJ0LHl0LEplLHd0LHh0LEdlLE10LEV0LFllLFN0LE50LFZlLEl0LF90LE1lLEVlLFNlLE5lLEllO2ZvcihCPTA7Qjw0ODtCKz0yKVI9dVswXV51WzEwXV51WzIwXV51WzMwXV51WzQwXSxUPXVbMV1edVsxMV1edVsyMV1edVszMV1edVs0MV0sUD11WzJdXnVbMTJdXnVbMjJdXnVbMzJdXnVbNDJdLE89dVszXV51WzEzXV51WzIzXV51WzMzXV51WzQzXSxDdD11WzRdXnVbMTRdXnVbMjRdXnVbMzRdXnVbNDRdLEQ9dVs1XV51WzE1XV51WzI1XV51WzM1XV51WzQ1XSxxPXVbNl1edVsxNl1edVsyNl1edVszNl1edVs0Nl0sRGU9dVs3XV51WzE3XV51WzI3XV51WzM3XV51WzQ3XSxYPXVbOF1edVsxOF1edVsyOF1edVszOF1edVs0OF0sWj11WzldXnVbMTldXnVbMjldXnVbMzldXnVbNDldLEU9WF4oUDw8MXxPPj4+MzEpLF89Wl4oTzw8MXxQPj4+MzEpLHVbMF1ePUUsdVsxXV49Xyx1WzEwXV49RSx1WzExXV49Xyx1WzIwXV49RSx1WzIxXV49Xyx1WzMwXV49RSx1WzMxXV49Xyx1WzQwXV49RSx1WzQxXV49XyxFPVJeKEN0PDwxfEQ+Pj4zMSksXz1UXihEPDwxfEN0Pj4+MzEpLHVbMl1ePUUsdVszXV49Xyx1WzEyXV49RSx1WzEzXV49Xyx1WzIyXV49RSx1WzIzXV49Xyx1WzMyXV49RSx1WzMzXV49Xyx1WzQyXV49RSx1WzQzXV49XyxFPVBeKHE8PDF8RGU+Pj4zMSksXz1PXihEZTw8MXxxPj4+MzEpLHVbNF1ePUUsdVs1XV49Xyx1WzE0XV49RSx1WzE1XV49Xyx1WzI0XV49RSx1WzI1XV49Xyx1WzM0XV49RSx1WzM1XV49Xyx1WzQ0XV49RSx1WzQ1XV49XyxFPUN0XihYPDwxfFo+Pj4zMSksXz1EXihaPDwxfFg+Pj4zMSksdVs2XV49RSx1WzddXj1fLHVbMTZdXj1FLHVbMTddXj1fLHVbMjZdXj1FLHVbMjddXj1fLHVbMzZdXj1FLHVbMzddXj1fLHVbNDZdXj1FLHVbNDddXj1fLEU9cV4oUjw8MXxUPj4+MzEpLF89RGVeKFQ8PDF8Uj4+PjMxKSx1WzhdXj1FLHVbOV1ePV8sdVsxOF1ePUUsdVsxOV1ePV8sdVsyOF1ePUUsdVsyOV1ePV8sdVszOF1ePUUsdVszOV1ePV8sdVs0OF1ePUUsdVs0OV1ePV8sRmU9dVswXSwkPXVbMV0seXQ9dVsxMV08PDR8dVsxMF0+Pj4yOCxKZT11WzEwXTw8NHx1WzExXT4+PjI4LGF0PXVbMjBdPDwzfHVbMjFdPj4+MjksS2U9dVsyMV08PDN8dVsyMF0+Pj4yOSxFZT11WzMxXTw8OXx1WzMwXT4+PjIzLFNlPXVbMzBdPDw5fHVbMzFdPj4+MjMsZ3Q9dVs0MF08PDE4fHVbNDFdPj4+MTQsQXQ9dVs0MV08PDE4fHVbNDBdPj4+MTQsbHQ9dVsyXTw8MXx1WzNdPj4+MzEsemU9dVszXTw8MXx1WzJdPj4+MzEsdHQ9dVsxM108PDEyfHVbMTJdPj4+MjAsVGU9dVsxMl08PDEyfHVbMTNdPj4+MjAsd3Q9dVsyMl08PDEwfHVbMjNdPj4+MjIseHQ9dVsyM108PDEwfHVbMjJdPj4+MjIsdXQ9dVszM108PDEzfHVbMzJdPj4+MTksaHQ9dVszMl08PDEzfHVbMzNdPj4+MTksTmU9dVs0Ml08PDJ8dVs0M10+Pj4zMCxJZT11WzQzXTw8Mnx1WzQyXT4+PjMwLFN0PXVbNV08PDMwfHVbNF0+Pj4yLE50PXVbNF08PDMwfHVbNV0+Pj4yLGR0PXVbMTRdPDw2fHVbMTVdPj4+MjYscHQ9dVsxNV08PDZ8dVsxNF0+Pj4yNixldD11WzI1XTw8MTF8dVsyNF0+Pj4yMSxydD11WzI0XTw8MTF8dVsyNV0+Pj4yMSxHZT11WzM0XTw8MTV8dVszNV0+Pj4xNyxNdD11WzM1XTw8MTV8dVszNF0+Pj4xNyxIZT11WzQ1XTw8Mjl8dVs0NF0+Pj4zLGN0PXVbNDRdPDwyOXx1WzQ1XT4+PjMsZnQ9dVs2XTw8Mjh8dVs3XT4+PjQsb3Q9dVs3XTw8Mjh8dVs2XT4+PjQsVmU9dVsxN108PDIzfHVbMTZdPj4+OSxJdD11WzE2XTw8MjN8dVsxN10+Pj45LExlPXVbMjZdPDwyNXx1WzI3XT4+PjcsdnQ9dVsyN108PDI1fHVbMjZdPj4+NyxVZT11WzM2XTw8MjF8dVszN10+Pj4xMSxpdD11WzM3XTw8MjF8dVszNl0+Pj4xMSxFdD11WzQ3XTw8MjR8dVs0Nl0+Pj44LFllPXVbNDZdPDwyNHx1WzQ3XT4+PjgsUWU9dVs4XTw8Mjd8dVs5XT4+PjUsYnQ9dVs5XTw8Mjd8dVs4XT4+PjUscWU9dVsxOF08PDIwfHVbMTldPj4+MTIsc3Q9dVsxOV08PDIwfHVbMThdPj4+MTIsX3Q9dVsyOV08PDd8dVsyOF0+Pj4yNSxNZT11WzI4XTw8N3x1WzI5XT4+PjI1LG10PXVbMzhdPDw4fHVbMzldPj4+MjQsamU9dVszOV08PDh8dVszOF0+Pj4yNCxudD11WzQ4XTw8MTR8dVs0OV0+Pj4xOCxrZT11WzQ5XTw8MTR8dVs0OF0+Pj4xOCx1WzBdPUZlXn50dCZldCx1WzFdPSReflRlJnJ0LHVbMTBdPWZ0Xn5xZSZhdCx1WzExXT1vdF5+c3QmS2UsdVsyMF09bHRefmR0JkxlLHVbMjFdPXplXn5wdCZ2dCx1WzMwXT1RZV5+eXQmd3QsdVszMV09YnRefkplJnh0LHVbNDBdPVN0Xn5WZSZfdCx1WzQxXT1OdF5+SXQmTWUsdVsyXT10dF5+ZXQmVWUsdVszXT1UZV5+cnQmaXQsdVsxMl09cWVefmF0JnV0LHVbMTNdPXN0Xn5LZSZodCx1WzIyXT1kdF5+TGUmbXQsdVsyM109cHRefnZ0JmplLHVbMzJdPXl0Xn53dCZHZSx1WzMzXT1KZV5+eHQmTXQsdVs0Ml09VmVefl90JkVlLHVbNDNdPUl0Xn5NZSZTZSx1WzRdPWV0Xn5VZSZudCx1WzVdPXJ0Xn5pdCZrZSx1WzE0XT1hdF5+dXQmSGUsdVsxNV09S2Vefmh0JmN0LHVbMjRdPUxlXn5tdCZndCx1WzI1XT12dF5+amUmQXQsdVszNF09d3RefkdlJkV0LHVbMzVdPXh0Xn5NdCZZZSx1WzQ0XT1fdF5+RWUmTmUsdVs0NV09TWVeflNlJkllLHVbNl09VWVefm50JkZlLHVbN109aXRefmtlJiQsdVsxNl09dXRefkhlJmZ0LHVbMTddPWh0Xn5jdCZvdCx1WzI2XT1tdF5+Z3QmbHQsdVsyN109amVefkF0JnplLHVbMzZdPUdlXn5FdCZRZSx1WzM3XT1NdF5+WWUmYnQsdVs0Nl09RWVefk5lJlN0LHVbNDddPVNlXn5JZSZOdCx1WzhdPW50Xn5GZSZ0dCx1WzldPWtlXn4kJlRlLHVbMThdPUhlXn5mdCZxZSx1WzE5XT1jdF5+b3Qmc3QsdVsyOF09Z3Refmx0JmR0LHVbMjldPUF0Xn56ZSZwdCx1WzM4XT1FdF5+UWUmeXQsdVszOV09WWVefmJ0JkplLHVbNDhdPU5lXn5TdCZWZSx1WzQ5XT1JZV5+TnQmSXQsdVswXV49Q1tCXSx1WzFdXj1DW0IrMV19O2lmKHApZS5leHBvcnRzPWY7ZWxzZSBmb3IoYz0wO2M8YS5sZW5ndGg7KytjKW5bYVtjXV09ZlthW2NdXX0pKCl9KShQbik7dmFyIGIwPVBuLmV4cG9ydHM7Y29uc3QgeTA9XCJsb2dnZXIvNS43LjBcIjtsZXQgRG49ITEsRm49ITE7Y29uc3QgQ3I9e2RlYnVnOjEsZGVmYXVsdDoyLGluZm86Mix3YXJuaW5nOjMsZXJyb3I6NCxvZmY6NX07bGV0IFRuPUNyLmRlZmF1bHQsZ2k9bnVsbDtmdW5jdGlvbiB3MCgpe3RyeXtjb25zdCBlPVtdO2lmKFtcIk5GRFwiLFwiTkZDXCIsXCJORktEXCIsXCJORktDXCJdLmZvckVhY2godD0+e3RyeXtpZihcInRlc3RcIi5ub3JtYWxpemUodCkhPT1cInRlc3RcIil0aHJvdyBuZXcgRXJyb3IoXCJiYWQgbm9ybWFsaXplXCIpfWNhdGNoe2UucHVzaCh0KX19KSxlLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJtaXNzaW5nIFwiK2Uuam9pbihcIiwgXCIpKTtpZihTdHJpbmcuZnJvbUNoYXJDb2RlKDIzMykubm9ybWFsaXplKFwiTkZEXCIpIT09U3RyaW5nLmZyb21DaGFyQ29kZSgxMDEsNzY5KSl0aHJvdyBuZXcgRXJyb3IoXCJicm9rZW4gaW1wbGVtZW50YXRpb25cIil9Y2F0Y2goZSl7cmV0dXJuIGUubWVzc2FnZX1yZXR1cm4gbnVsbH1jb25zdCBVbj13MCgpO3ZhciBBaTsoZnVuY3Rpb24oZSl7ZS5ERUJVRz1cIkRFQlVHXCIsZS5JTkZPPVwiSU5GT1wiLGUuV0FSTklORz1cIldBUk5JTkdcIixlLkVSUk9SPVwiRVJST1JcIixlLk9GRj1cIk9GRlwifSkoQWl8fChBaT17fSkpO3ZhciByZTsoZnVuY3Rpb24oZSl7ZS5VTktOT1dOX0VSUk9SPVwiVU5LTk9XTl9FUlJPUlwiLGUuTk9UX0lNUExFTUVOVEVEPVwiTk9UX0lNUExFTUVOVEVEXCIsZS5VTlNVUFBPUlRFRF9PUEVSQVRJT049XCJVTlNVUFBPUlRFRF9PUEVSQVRJT05cIixlLk5FVFdPUktfRVJST1I9XCJORVRXT1JLX0VSUk9SXCIsZS5TRVJWRVJfRVJST1I9XCJTRVJWRVJfRVJST1JcIixlLlRJTUVPVVQ9XCJUSU1FT1VUXCIsZS5CVUZGRVJfT1ZFUlJVTj1cIkJVRkZFUl9PVkVSUlVOXCIsZS5OVU1FUklDX0ZBVUxUPVwiTlVNRVJJQ19GQVVMVFwiLGUuTUlTU0lOR19ORVc9XCJNSVNTSU5HX05FV1wiLGUuSU5WQUxJRF9BUkdVTUVOVD1cIklOVkFMSURfQVJHVU1FTlRcIixlLk1JU1NJTkdfQVJHVU1FTlQ9XCJNSVNTSU5HX0FSR1VNRU5UXCIsZS5VTkVYUEVDVEVEX0FSR1VNRU5UPVwiVU5FWFBFQ1RFRF9BUkdVTUVOVFwiLGUuQ0FMTF9FWENFUFRJT049XCJDQUxMX0VYQ0VQVElPTlwiLGUuSU5TVUZGSUNJRU5UX0ZVTkRTPVwiSU5TVUZGSUNJRU5UX0ZVTkRTXCIsZS5OT05DRV9FWFBJUkVEPVwiTk9OQ0VfRVhQSVJFRFwiLGUuUkVQTEFDRU1FTlRfVU5ERVJQUklDRUQ9XCJSRVBMQUNFTUVOVF9VTkRFUlBSSUNFRFwiLGUuVU5QUkVESUNUQUJMRV9HQVNfTElNSVQ9XCJVTlBSRURJQ1RBQkxFX0dBU19MSU1JVFwiLGUuVFJBTlNBQ1RJT05fUkVQTEFDRUQ9XCJUUkFOU0FDVElPTl9SRVBMQUNFRFwiLGUuQUNUSU9OX1JFSkVDVEVEPVwiQUNUSU9OX1JFSkVDVEVEXCJ9KShyZXx8KHJlPXt9KSk7Y29uc3Qga249XCIwMTIzNDU2Nzg5YWJjZGVmXCI7Y2xhc3MgTHtjb25zdHJ1Y3Rvcih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInZlcnNpb25cIix7ZW51bWVyYWJsZTohMCx2YWx1ZTp0LHdyaXRhYmxlOiExfSl9X2xvZyh0LHIpe2NvbnN0IGk9dC50b0xvd2VyQ2FzZSgpO0NyW2ldPT1udWxsJiZ0aGlzLnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgbG9nIGxldmVsIG5hbWVcIixcImxvZ0xldmVsXCIsdCksIShUbj5DcltpXSkmJmNvbnNvbGUubG9nLmFwcGx5KGNvbnNvbGUscil9ZGVidWcoLi4udCl7dGhpcy5fbG9nKEwubGV2ZWxzLkRFQlVHLHQpfWluZm8oLi4udCl7dGhpcy5fbG9nKEwubGV2ZWxzLklORk8sdCl9d2FybiguLi50KXt0aGlzLl9sb2coTC5sZXZlbHMuV0FSTklORyx0KX1tYWtlRXJyb3IodCxyLGkpe2lmKEZuKXJldHVybiB0aGlzLm1ha2VFcnJvcihcImNlbnNvcmVkIGVycm9yXCIscix7fSk7cnx8KHI9TC5lcnJvcnMuVU5LTk9XTl9FUlJPUiksaXx8KGk9e30pO2NvbnN0IG49W107T2JqZWN0LmtleXMoaSkuZm9yRWFjaChiPT57Y29uc3QgbT1pW2JdO3RyeXtpZihtIGluc3RhbmNlb2YgVWludDhBcnJheSl7bGV0IHc9XCJcIjtmb3IobGV0IHk9MDt5PG0ubGVuZ3RoO3krKyl3Kz1rblttW3ldPj40XSx3Kz1rblttW3ldJjE1XTtuLnB1c2goYitcIj1VaW50OEFycmF5KDB4XCIrdytcIilcIil9ZWxzZSBuLnB1c2goYitcIj1cIitKU09OLnN0cmluZ2lmeShtKSl9Y2F0Y2h7bi5wdXNoKGIrXCI9XCIrSlNPTi5zdHJpbmdpZnkoaVtiXS50b1N0cmluZygpKSl9fSksbi5wdXNoKGBjb2RlPSR7cn1gKSxuLnB1c2goYHZlcnNpb249JHt0aGlzLnZlcnNpb259YCk7Y29uc3Qgbz10O2xldCBoPVwiXCI7c3dpdGNoKHIpe2Nhc2UgcmUuTlVNRVJJQ19GQVVMVDp7aD1cIk5VTUVSSUNfRkFVTFRcIjtjb25zdCBiPXQ7c3dpdGNoKGIpe2Nhc2VcIm92ZXJmbG93XCI6Y2FzZVwidW5kZXJmbG93XCI6Y2FzZVwiZGl2aXNpb24tYnktemVyb1wiOmgrPVwiLVwiK2I7YnJlYWs7Y2FzZVwibmVnYXRpdmUtcG93ZXJcIjpjYXNlXCJuZWdhdGl2ZS13aWR0aFwiOmgrPVwiLXVuc3VwcG9ydGVkXCI7YnJlYWs7Y2FzZVwidW5ib3VuZC1iaXR3aXNlLXJlc3VsdFwiOmgrPVwiLXVuYm91bmQtcmVzdWx0XCI7YnJlYWt9YnJlYWt9Y2FzZSByZS5DQUxMX0VYQ0VQVElPTjpjYXNlIHJlLklOU1VGRklDSUVOVF9GVU5EUzpjYXNlIHJlLk1JU1NJTkdfTkVXOmNhc2UgcmUuTk9OQ0VfRVhQSVJFRDpjYXNlIHJlLlJFUExBQ0VNRU5UX1VOREVSUFJJQ0VEOmNhc2UgcmUuVFJBTlNBQ1RJT05fUkVQTEFDRUQ6Y2FzZSByZS5VTlBSRURJQ1RBQkxFX0dBU19MSU1JVDpoPXI7YnJlYWt9aCYmKHQrPVwiIFsgU2VlOiBodHRwczovL2xpbmtzLmV0aGVycy5vcmcvdjUtZXJyb3JzLVwiK2grXCIgXVwiKSxuLmxlbmd0aCYmKHQrPVwiIChcIituLmpvaW4oXCIsIFwiKStcIilcIik7Y29uc3QgcD1uZXcgRXJyb3IodCk7cmV0dXJuIHAucmVhc29uPW8scC5jb2RlPXIsT2JqZWN0LmtleXMoaSkuZm9yRWFjaChmdW5jdGlvbihiKXtwW2JdPWlbYl19KSxwfXRocm93RXJyb3IodCxyLGkpe3Rocm93IHRoaXMubWFrZUVycm9yKHQscixpKX10aHJvd0FyZ3VtZW50RXJyb3IodCxyLGkpe3JldHVybiB0aGlzLnRocm93RXJyb3IodCxMLmVycm9ycy5JTlZBTElEX0FSR1VNRU5ULHthcmd1bWVudDpyLHZhbHVlOml9KX1hc3NlcnQodCxyLGksbil7dHx8dGhpcy50aHJvd0Vycm9yKHIsaSxuKX1hc3NlcnRBcmd1bWVudCh0LHIsaSxuKXt0fHx0aGlzLnRocm93QXJndW1lbnRFcnJvcihyLGksbil9Y2hlY2tOb3JtYWxpemUodCl7VW4mJnRoaXMudGhyb3dFcnJvcihcInBsYXRmb3JtIG1pc3NpbmcgU3RyaW5nLnByb3RvdHlwZS5ub3JtYWxpemVcIixMLmVycm9ycy5VTlNVUFBPUlRFRF9PUEVSQVRJT04se29wZXJhdGlvbjpcIlN0cmluZy5wcm90b3R5cGUubm9ybWFsaXplXCIsZm9ybTpVbn0pfWNoZWNrU2FmZVVpbnQ1Myh0LHIpe3R5cGVvZiB0PT1cIm51bWJlclwiJiYocj09bnVsbCYmKHI9XCJ2YWx1ZSBub3Qgc2FmZVwiKSwodDwwfHx0Pj05MDA3MTk5MjU0NzQwOTkxKSYmdGhpcy50aHJvd0Vycm9yKHIsTC5lcnJvcnMuTlVNRVJJQ19GQVVMVCx7b3BlcmF0aW9uOlwiY2hlY2tTYWZlSW50ZWdlclwiLGZhdWx0Olwib3V0LW9mLXNhZmUtcmFuZ2VcIix2YWx1ZTp0fSksdCUxJiZ0aGlzLnRocm93RXJyb3IocixMLmVycm9ycy5OVU1FUklDX0ZBVUxULHtvcGVyYXRpb246XCJjaGVja1NhZmVJbnRlZ2VyXCIsZmF1bHQ6XCJub24taW50ZWdlclwiLHZhbHVlOnR9KSl9Y2hlY2tBcmd1bWVudENvdW50KHQscixpKXtpP2k9XCI6IFwiK2k6aT1cIlwiLHQ8ciYmdGhpcy50aHJvd0Vycm9yKFwibWlzc2luZyBhcmd1bWVudFwiK2ksTC5lcnJvcnMuTUlTU0lOR19BUkdVTUVOVCx7Y291bnQ6dCxleHBlY3RlZENvdW50OnJ9KSx0PnImJnRoaXMudGhyb3dFcnJvcihcInRvbyBtYW55IGFyZ3VtZW50c1wiK2ksTC5lcnJvcnMuVU5FWFBFQ1RFRF9BUkdVTUVOVCx7Y291bnQ6dCxleHBlY3RlZENvdW50OnJ9KX1jaGVja05ldyh0LHIpeyh0PT09T2JqZWN0fHx0PT1udWxsKSYmdGhpcy50aHJvd0Vycm9yKFwibWlzc2luZyBuZXdcIixMLmVycm9ycy5NSVNTSU5HX05FVyx7bmFtZTpyLm5hbWV9KX1jaGVja0Fic3RyYWN0KHQscil7dD09PXI/dGhpcy50aHJvd0Vycm9yKFwiY2Fubm90IGluc3RhbnRpYXRlIGFic3RyYWN0IGNsYXNzIFwiK0pTT04uc3RyaW5naWZ5KHIubmFtZSkrXCIgZGlyZWN0bHk7IHVzZSBhIHN1Yi1jbGFzc1wiLEwuZXJyb3JzLlVOU1VQUE9SVEVEX09QRVJBVElPTix7bmFtZTp0Lm5hbWUsb3BlcmF0aW9uOlwibmV3XCJ9KToodD09PU9iamVjdHx8dD09bnVsbCkmJnRoaXMudGhyb3dFcnJvcihcIm1pc3NpbmcgbmV3XCIsTC5lcnJvcnMuTUlTU0lOR19ORVcse25hbWU6ci5uYW1lfSl9c3RhdGljIGdsb2JhbExvZ2dlcigpe3JldHVybiBnaXx8KGdpPW5ldyBMKHkwKSksZ2l9c3RhdGljIHNldENlbnNvcnNoaXAodCxyKXtpZighdCYmciYmdGhpcy5nbG9iYWxMb2dnZXIoKS50aHJvd0Vycm9yKFwiY2Fubm90IHBlcm1hbmVudGx5IGRpc2FibGUgY2Vuc29yc2hpcFwiLEwuZXJyb3JzLlVOU1VQUE9SVEVEX09QRVJBVElPTix7b3BlcmF0aW9uOlwic2V0Q2Vuc29yc2hpcFwifSksRG4pe2lmKCF0KXJldHVybjt0aGlzLmdsb2JhbExvZ2dlcigpLnRocm93RXJyb3IoXCJlcnJvciBjZW5zb3JzaGlwIHBlcm1hbmVudFwiLEwuZXJyb3JzLlVOU1VQUE9SVEVEX09QRVJBVElPTix7b3BlcmF0aW9uOlwic2V0Q2Vuc29yc2hpcFwifSl9Rm49ISF0LERuPSEhcn1zdGF0aWMgc2V0TG9nTGV2ZWwodCl7Y29uc3Qgcj1Dclt0LnRvTG93ZXJDYXNlKCldO2lmKHI9PW51bGwpe0wuZ2xvYmFsTG9nZ2VyKCkud2FybihcImludmFsaWQgbG9nIGxldmVsIC0gXCIrdCk7cmV0dXJufVRuPXJ9c3RhdGljIGZyb20odCl7cmV0dXJuIG5ldyBMKHQpfX1MLmVycm9ycz1yZSxMLmxldmVscz1BaTtjb25zdCB4MD1cImJ5dGVzLzUuNy4wXCIsRHQ9bmV3IEwoeDApO2Z1bmN0aW9uIHFuKGUpe3JldHVybiEhZS50b0hleFN0cmluZ31mdW5jdGlvbiBycihlKXtyZXR1cm4gZS5zbGljZXx8KGUuc2xpY2U9ZnVuY3Rpb24oKXtjb25zdCB0PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cmV0dXJuIHJyKG5ldyBVaW50OEFycmF5KEFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShlLHQpKSl9KSxlfWZ1bmN0aW9uIE0wKGUpe3JldHVybiBRdChlKSYmIShlLmxlbmd0aCUyKXx8aXIoZSl9ZnVuY3Rpb24gS24oZSl7cmV0dXJuIHR5cGVvZiBlPT1cIm51bWJlclwiJiZlPT1lJiZlJTE9PT0wfWZ1bmN0aW9uIGlyKGUpe2lmKGU9PW51bGwpcmV0dXJuITE7aWYoZS5jb25zdHJ1Y3Rvcj09PVVpbnQ4QXJyYXkpcmV0dXJuITA7aWYodHlwZW9mIGU9PVwic3RyaW5nXCJ8fCFLbihlLmxlbmd0aCl8fGUubGVuZ3RoPDApcmV0dXJuITE7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kyspe2NvbnN0IHI9ZVt0XTtpZighS24ocil8fHI8MHx8cj49MjU2KXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIE90KGUsdCl7aWYodHx8KHQ9e30pLHR5cGVvZiBlPT1cIm51bWJlclwiKXtEdC5jaGVja1NhZmVVaW50NTMoZSxcImludmFsaWQgYXJyYXlpZnkgdmFsdWVcIik7Y29uc3Qgcj1bXTtmb3IoO2U7KXIudW5zaGlmdChlJjI1NSksZT1wYXJzZUludChTdHJpbmcoZS8yNTYpKTtyZXR1cm4gci5sZW5ndGg9PT0wJiZyLnB1c2goMCkscnIobmV3IFVpbnQ4QXJyYXkocikpfWlmKHQuYWxsb3dNaXNzaW5nUHJlZml4JiZ0eXBlb2YgZT09XCJzdHJpbmdcIiYmZS5zdWJzdHJpbmcoMCwyKSE9PVwiMHhcIiYmKGU9XCIweFwiK2UpLHFuKGUpJiYoZT1lLnRvSGV4U3RyaW5nKCkpLFF0KGUpKXtsZXQgcj1lLnN1YnN0cmluZygyKTtyLmxlbmd0aCUyJiYodC5oZXhQYWQ9PT1cImxlZnRcIj9yPVwiMFwiK3I6dC5oZXhQYWQ9PT1cInJpZ2h0XCI/cis9XCIwXCI6RHQudGhyb3dBcmd1bWVudEVycm9yKFwiaGV4IGRhdGEgaXMgb2RkLWxlbmd0aFwiLFwidmFsdWVcIixlKSk7Y29uc3QgaT1bXTtmb3IobGV0IG49MDtuPHIubGVuZ3RoO24rPTIpaS5wdXNoKHBhcnNlSW50KHIuc3Vic3RyaW5nKG4sbisyKSwxNikpO3JldHVybiBycihuZXcgVWludDhBcnJheShpKSl9cmV0dXJuIGlyKGUpP3JyKG5ldyBVaW50OEFycmF5KGUpKTpEdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGFycmF5aWZ5IHZhbHVlXCIsXCJ2YWx1ZVwiLGUpfWZ1bmN0aW9uIEUwKGUpe2NvbnN0IHQ9ZS5tYXAobj0+T3QobikpLHI9dC5yZWR1Y2UoKG4sbyk9Pm4rby5sZW5ndGgsMCksaT1uZXcgVWludDhBcnJheShyKTtyZXR1cm4gdC5yZWR1Y2UoKG4sbyk9PihpLnNldChvLG4pLG4rby5sZW5ndGgpLDApLHJyKGkpfWZ1bmN0aW9uIFMwKGUsdCl7ZT1PdChlKSxlLmxlbmd0aD50JiZEdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJ2YWx1ZSBvdXQgb2YgcmFuZ2VcIixcInZhbHVlXCIsYXJndW1lbnRzWzBdKTtjb25zdCByPW5ldyBVaW50OEFycmF5KHQpO3JldHVybiByLnNldChlLHQtZS5sZW5ndGgpLHJyKHIpfWZ1bmN0aW9uIFF0KGUsdCl7cmV0dXJuISh0eXBlb2YgZSE9XCJzdHJpbmdcInx8IWUubWF0Y2goL14weFswLTlBLUZhLWZdKiQvKXx8dCYmZS5sZW5ndGghPT0yKzIqdCl9Y29uc3QgYmk9XCIwMTIzNDU2Nzg5YWJjZGVmXCI7ZnVuY3Rpb24gS3QoZSx0KXtpZih0fHwodD17fSksdHlwZW9mIGU9PVwibnVtYmVyXCIpe0R0LmNoZWNrU2FmZVVpbnQ1MyhlLFwiaW52YWxpZCBoZXhsaWZ5IHZhbHVlXCIpO2xldCByPVwiXCI7Zm9yKDtlOylyPWJpW2UmMTVdK3IsZT1NYXRoLmZsb29yKGUvMTYpO3JldHVybiByLmxlbmd0aD8oci5sZW5ndGglMiYmKHI9XCIwXCIrciksXCIweFwiK3IpOlwiMHgwMFwifWlmKHR5cGVvZiBlPT1cImJpZ2ludFwiKXJldHVybiBlPWUudG9TdHJpbmcoMTYpLGUubGVuZ3RoJTI/XCIweDBcIitlOlwiMHhcIitlO2lmKHQuYWxsb3dNaXNzaW5nUHJlZml4JiZ0eXBlb2YgZT09XCJzdHJpbmdcIiYmZS5zdWJzdHJpbmcoMCwyKSE9PVwiMHhcIiYmKGU9XCIweFwiK2UpLHFuKGUpKXJldHVybiBlLnRvSGV4U3RyaW5nKCk7aWYoUXQoZSkpcmV0dXJuIGUubGVuZ3RoJTImJih0LmhleFBhZD09PVwibGVmdFwiP2U9XCIweDBcIitlLnN1YnN0cmluZygyKTp0LmhleFBhZD09PVwicmlnaHRcIj9lKz1cIjBcIjpEdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJoZXggZGF0YSBpcyBvZGQtbGVuZ3RoXCIsXCJ2YWx1ZVwiLGUpKSxlLnRvTG93ZXJDYXNlKCk7aWYoaXIoZSkpe2xldCByPVwiMHhcIjtmb3IobGV0IGk9MDtpPGUubGVuZ3RoO2krKyl7bGV0IG49ZVtpXTtyKz1iaVsobiYyNDApPj40XStiaVtuJjE1XX1yZXR1cm4gcn1yZXR1cm4gRHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBoZXhsaWZ5IHZhbHVlXCIsXCJ2YWx1ZVwiLGUpfWZ1bmN0aW9uIE4wKGUpe2lmKHR5cGVvZiBlIT1cInN0cmluZ1wiKWU9S3QoZSk7ZWxzZSBpZighUXQoZSl8fGUubGVuZ3RoJTIpcmV0dXJuIG51bGw7cmV0dXJuKGUubGVuZ3RoLTIpLzJ9ZnVuY3Rpb24gSG4oZSx0LHIpe3JldHVybiB0eXBlb2YgZSE9XCJzdHJpbmdcIj9lPUt0KGUpOighUXQoZSl8fGUubGVuZ3RoJTIpJiZEdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGhleERhdGFcIixcInZhbHVlXCIsZSksdD0yKzIqdCxyIT1udWxsP1wiMHhcIitlLnN1YnN0cmluZyh0LDIrMipyKTpcIjB4XCIrZS5zdWJzdHJpbmcodCl9ZnVuY3Rpb24gb2UoZSx0KXtmb3IodHlwZW9mIGUhPVwic3RyaW5nXCI/ZT1LdChlKTpRdChlKXx8RHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBoZXggc3RyaW5nXCIsXCJ2YWx1ZVwiLGUpLGUubGVuZ3RoPjIqdCsyJiZEdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJ2YWx1ZSBvdXQgb2YgcmFuZ2VcIixcInZhbHVlXCIsYXJndW1lbnRzWzFdKTtlLmxlbmd0aDwyKnQrMjspZT1cIjB4MFwiK2Uuc3Vic3RyaW5nKDIpO3JldHVybiBlfWZ1bmN0aW9uIHpuKGUpe2NvbnN0IHQ9e3I6XCIweFwiLHM6XCIweFwiLF92czpcIjB4XCIscmVjb3ZlcnlQYXJhbTowLHY6MCx5UGFyaXR5QW5kUzpcIjB4XCIsY29tcGFjdDpcIjB4XCJ9O2lmKE0wKGUpKXtsZXQgcj1PdChlKTtyLmxlbmd0aD09PTY0Pyh0LnY9MjcrKHJbMzJdPj43KSxyWzMyXSY9MTI3LHQucj1LdChyLnNsaWNlKDAsMzIpKSx0LnM9S3Qoci5zbGljZSgzMiw2NCkpKTpyLmxlbmd0aD09PTY1Pyh0LnI9S3Qoci5zbGljZSgwLDMyKSksdC5zPUt0KHIuc2xpY2UoMzIsNjQpKSx0LnY9cls2NF0pOkR0LnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgc2lnbmF0dXJlIHN0cmluZ1wiLFwic2lnbmF0dXJlXCIsZSksdC52PDI3JiYodC52PT09MHx8dC52PT09MT90LnYrPTI3OkR0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSBpbnZhbGlkIHYgYnl0ZVwiLFwic2lnbmF0dXJlXCIsZSkpLHQucmVjb3ZlcnlQYXJhbT0xLXQudiUyLHQucmVjb3ZlcnlQYXJhbSYmKHJbMzJdfD0xMjgpLHQuX3ZzPUt0KHIuc2xpY2UoMzIsNjQpKX1lbHNle2lmKHQucj1lLnIsdC5zPWUucyx0LnY9ZS52LHQucmVjb3ZlcnlQYXJhbT1lLnJlY292ZXJ5UGFyYW0sdC5fdnM9ZS5fdnMsdC5fdnMhPW51bGwpe2NvbnN0IG49UzAoT3QodC5fdnMpLDMyKTt0Ll92cz1LdChuKTtjb25zdCBvPW5bMF0+PTEyOD8xOjA7dC5yZWNvdmVyeVBhcmFtPT1udWxsP3QucmVjb3ZlcnlQYXJhbT1vOnQucmVjb3ZlcnlQYXJhbSE9PW8mJkR0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSByZWNvdmVyeVBhcmFtIG1pc21hdGNoIF92c1wiLFwic2lnbmF0dXJlXCIsZSksblswXSY9MTI3O2NvbnN0IGg9S3Qobik7dC5zPT1udWxsP3Qucz1oOnQucyE9PWgmJkR0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSB2IG1pc21hdGNoIF92c1wiLFwic2lnbmF0dXJlXCIsZSl9aWYodC5yZWNvdmVyeVBhcmFtPT1udWxsKXQudj09bnVsbD9EdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJzaWduYXR1cmUgbWlzc2luZyB2IGFuZCByZWNvdmVyeVBhcmFtXCIsXCJzaWduYXR1cmVcIixlKTp0LnY9PT0wfHx0LnY9PT0xP3QucmVjb3ZlcnlQYXJhbT10LnY6dC5yZWNvdmVyeVBhcmFtPTEtdC52JTI7ZWxzZSBpZih0LnY9PW51bGwpdC52PTI3K3QucmVjb3ZlcnlQYXJhbTtlbHNle2NvbnN0IG49dC52PT09MHx8dC52PT09MT90LnY6MS10LnYlMjt0LnJlY292ZXJ5UGFyYW0hPT1uJiZEdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJzaWduYXR1cmUgcmVjb3ZlcnlQYXJhbSBtaXNtYXRjaCB2XCIsXCJzaWduYXR1cmVcIixlKX10LnI9PW51bGx8fCFRdCh0LnIpP0R0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSBtaXNzaW5nIG9yIGludmFsaWQgclwiLFwic2lnbmF0dXJlXCIsZSk6dC5yPW9lKHQuciwzMiksdC5zPT1udWxsfHwhUXQodC5zKT9EdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJzaWduYXR1cmUgbWlzc2luZyBvciBpbnZhbGlkIHNcIixcInNpZ25hdHVyZVwiLGUpOnQucz1vZSh0LnMsMzIpO2NvbnN0IHI9T3QodC5zKTtyWzBdPj0xMjgmJkR0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSBzIG91dCBvZiByYW5nZVwiLFwic2lnbmF0dXJlXCIsZSksdC5yZWNvdmVyeVBhcmFtJiYoclswXXw9MTI4KTtjb25zdCBpPUt0KHIpO3QuX3ZzJiYoUXQodC5fdnMpfHxEdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJzaWduYXR1cmUgaW52YWxpZCBfdnNcIixcInNpZ25hdHVyZVwiLGUpLHQuX3ZzPW9lKHQuX3ZzLDMyKSksdC5fdnM9PW51bGw/dC5fdnM9aTp0Ll92cyE9PWkmJkR0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSBfdnMgbWlzbWF0Y2ggdiBhbmQgc1wiLFwic2lnbmF0dXJlXCIsZSl9cmV0dXJuIHQueVBhcml0eUFuZFM9dC5fdnMsdC5jb21wYWN0PXQucit0LnlQYXJpdHlBbmRTLnN1YnN0cmluZygyKSx0fWZ1bmN0aW9uIHlpKGUpe3JldHVyblwiMHhcIitiMC5rZWNjYWtfMjU2KE90KGUpKX12YXIgTG49e2V4cG9ydHM6e319LEkwPXt9LF8wPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGRlZmF1bHQ6STB9KSxCMD1BMChfMCk7KGZ1bmN0aW9uKGUpeyhmdW5jdGlvbih0LHIpe2Z1bmN0aW9uIGkoQSxmKXtpZighQSl0aHJvdyBuZXcgRXJyb3IoZnx8XCJBc3NlcnRpb24gZmFpbGVkXCIpfWZ1bmN0aW9uIG4oQSxmKXtBLnN1cGVyXz1mO3ZhciBhPWZ1bmN0aW9uKCl7fTthLnByb3RvdHlwZT1mLnByb3RvdHlwZSxBLnByb3RvdHlwZT1uZXcgYSxBLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1BfWZ1bmN0aW9uIG8oQSxmLGEpe2lmKG8uaXNCTihBKSlyZXR1cm4gQTt0aGlzLm5lZ2F0aXZlPTAsdGhpcy53b3Jkcz1udWxsLHRoaXMubGVuZ3RoPTAsdGhpcy5yZWQ9bnVsbCxBIT09bnVsbCYmKChmPT09XCJsZVwifHxmPT09XCJiZVwiKSYmKGE9ZixmPTEwKSx0aGlzLl9pbml0KEF8fDAsZnx8MTAsYXx8XCJiZVwiKSl9dHlwZW9mIHQ9PVwib2JqZWN0XCI/dC5leHBvcnRzPW86ci5CTj1vLG8uQk49byxvLndvcmRTaXplPTI2O3ZhciBoO3RyeXt0eXBlb2Ygd2luZG93PFwidVwiJiZ0eXBlb2Ygd2luZG93LkJ1ZmZlcjxcInVcIj9oPXdpbmRvdy5CdWZmZXI6aD1CMC5CdWZmZXJ9Y2F0Y2h7fW8uaXNCTj1mdW5jdGlvbihmKXtyZXR1cm4gZiBpbnN0YW5jZW9mIG8/ITA6ZiE9PW51bGwmJnR5cGVvZiBmPT1cIm9iamVjdFwiJiZmLmNvbnN0cnVjdG9yLndvcmRTaXplPT09by53b3JkU2l6ZSYmQXJyYXkuaXNBcnJheShmLndvcmRzKX0sby5tYXg9ZnVuY3Rpb24oZixhKXtyZXR1cm4gZi5jbXAoYSk+MD9mOmF9LG8ubWluPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIGYuY21wKGEpPDA/ZjphfSxvLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbihmLGEsYyl7aWYodHlwZW9mIGY9PVwibnVtYmVyXCIpcmV0dXJuIHRoaXMuX2luaXROdW1iZXIoZixhLGMpO2lmKHR5cGVvZiBmPT1cIm9iamVjdFwiKXJldHVybiB0aGlzLl9pbml0QXJyYXkoZixhLGMpO2E9PT1cImhleFwiJiYoYT0xNiksaShhPT09KGF8MCkmJmE+PTImJmE8PTM2KSxmPWYudG9TdHJpbmcoKS5yZXBsYWNlKC9cXHMrL2csXCJcIik7dmFyIGQ9MDtmWzBdPT09XCItXCImJihkKyssdGhpcy5uZWdhdGl2ZT0xKSxkPGYubGVuZ3RoJiYoYT09PTE2P3RoaXMuX3BhcnNlSGV4KGYsZCxjKToodGhpcy5fcGFyc2VCYXNlKGYsYSxkKSxjPT09XCJsZVwiJiZ0aGlzLl9pbml0QXJyYXkodGhpcy50b0FycmF5KCksYSxjKSkpfSxvLnByb3RvdHlwZS5faW5pdE51bWJlcj1mdW5jdGlvbihmLGEsYyl7ZjwwJiYodGhpcy5uZWdhdGl2ZT0xLGY9LWYpLGY8NjcxMDg4NjQ/KHRoaXMud29yZHM9W2YmNjcxMDg4NjNdLHRoaXMubGVuZ3RoPTEpOmY8NDUwMzU5OTYyNzM3MDQ5Nj8odGhpcy53b3Jkcz1bZiY2NzEwODg2MyxmLzY3MTA4ODY0JjY3MTA4ODYzXSx0aGlzLmxlbmd0aD0yKTooaShmPDkwMDcxOTkyNTQ3NDA5OTIpLHRoaXMud29yZHM9W2YmNjcxMDg4NjMsZi82NzEwODg2NCY2NzEwODg2MywxXSx0aGlzLmxlbmd0aD0zKSxjPT09XCJsZVwiJiZ0aGlzLl9pbml0QXJyYXkodGhpcy50b0FycmF5KCksYSxjKX0sby5wcm90b3R5cGUuX2luaXRBcnJheT1mdW5jdGlvbihmLGEsYyl7aWYoaSh0eXBlb2YgZi5sZW5ndGg9PVwibnVtYmVyXCIpLGYubGVuZ3RoPD0wKXJldHVybiB0aGlzLndvcmRzPVswXSx0aGlzLmxlbmd0aD0xLHRoaXM7dGhpcy5sZW5ndGg9TWF0aC5jZWlsKGYubGVuZ3RoLzMpLHRoaXMud29yZHM9bmV3IEFycmF5KHRoaXMubGVuZ3RoKTtmb3IodmFyIGQ9MDtkPHRoaXMubGVuZ3RoO2QrKyl0aGlzLndvcmRzW2RdPTA7dmFyIGcseCxNPTA7aWYoYz09PVwiYmVcIilmb3IoZD1mLmxlbmd0aC0xLGc9MDtkPj0wO2QtPTMpeD1mW2RdfGZbZC0xXTw8OHxmW2QtMl08PDE2LHRoaXMud29yZHNbZ118PXg8PE0mNjcxMDg4NjMsdGhpcy53b3Jkc1tnKzFdPXg+Pj4yNi1NJjY3MTA4ODYzLE0rPTI0LE0+PTI2JiYoTS09MjYsZysrKTtlbHNlIGlmKGM9PT1cImxlXCIpZm9yKGQ9MCxnPTA7ZDxmLmxlbmd0aDtkKz0zKXg9ZltkXXxmW2QrMV08PDh8ZltkKzJdPDwxNix0aGlzLndvcmRzW2ddfD14PDxNJjY3MTA4ODYzLHRoaXMud29yZHNbZysxXT14Pj4+MjYtTSY2NzEwODg2MyxNKz0yNCxNPj0yNiYmKE0tPTI2LGcrKyk7cmV0dXJuIHRoaXMuX3N0cmlwKCl9O2Z1bmN0aW9uIHAoQSxmKXt2YXIgYT1BLmNoYXJDb2RlQXQoZik7aWYoYT49NDgmJmE8PTU3KXJldHVybiBhLTQ4O2lmKGE+PTY1JiZhPD03MClyZXR1cm4gYS01NTtpZihhPj05NyYmYTw9MTAyKXJldHVybiBhLTg3O2koITEsXCJJbnZhbGlkIGNoYXJhY3RlciBpbiBcIitBKX1mdW5jdGlvbiBiKEEsZixhKXt2YXIgYz1wKEEsYSk7cmV0dXJuIGEtMT49ZiYmKGN8PXAoQSxhLTEpPDw0KSxjfW8ucHJvdG90eXBlLl9wYXJzZUhleD1mdW5jdGlvbihmLGEsYyl7dGhpcy5sZW5ndGg9TWF0aC5jZWlsKChmLmxlbmd0aC1hKS82KSx0aGlzLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCk7Zm9yKHZhciBkPTA7ZDx0aGlzLmxlbmd0aDtkKyspdGhpcy53b3Jkc1tkXT0wO3ZhciBnPTAseD0wLE07aWYoYz09PVwiYmVcIilmb3IoZD1mLmxlbmd0aC0xO2Q+PWE7ZC09MilNPWIoZixhLGQpPDxnLHRoaXMud29yZHNbeF18PU0mNjcxMDg4NjMsZz49MTg/KGctPTE4LHgrPTEsdGhpcy53b3Jkc1t4XXw9TT4+PjI2KTpnKz04O2Vsc2V7dmFyIGw9Zi5sZW5ndGgtYTtmb3IoZD1sJTI9PT0wP2ErMTphO2Q8Zi5sZW5ndGg7ZCs9MilNPWIoZixhLGQpPDxnLHRoaXMud29yZHNbeF18PU0mNjcxMDg4NjMsZz49MTg/KGctPTE4LHgrPTEsdGhpcy53b3Jkc1t4XXw9TT4+PjI2KTpnKz04fXRoaXMuX3N0cmlwKCl9O2Z1bmN0aW9uIG0oQSxmLGEsYyl7Zm9yKHZhciBkPTAsZz0wLHg9TWF0aC5taW4oQS5sZW5ndGgsYSksTT1mO008eDtNKyspe3ZhciBsPUEuY2hhckNvZGVBdChNKS00ODtkKj1jLGw+PTQ5P2c9bC00OSsxMDpsPj0xNz9nPWwtMTcrMTA6Zz1sLGkobD49MCYmZzxjLFwiSW52YWxpZCBjaGFyYWN0ZXJcIiksZCs9Z31yZXR1cm4gZH1vLnByb3RvdHlwZS5fcGFyc2VCYXNlPWZ1bmN0aW9uKGYsYSxjKXt0aGlzLndvcmRzPVswXSx0aGlzLmxlbmd0aD0xO2Zvcih2YXIgZD0wLGc9MTtnPD02NzEwODg2MztnKj1hKWQrKztkLS0sZz1nL2F8MDtmb3IodmFyIHg9Zi5sZW5ndGgtYyxNPXglZCxsPU1hdGgubWluKHgseC1NKStjLHM9MCx2PWM7djxsO3YrPWQpcz1tKGYsdix2K2QsYSksdGhpcy5pbXVsbihnKSx0aGlzLndvcmRzWzBdK3M8NjcxMDg4NjQ/dGhpcy53b3Jkc1swXSs9czp0aGlzLl9pYWRkbihzKTtpZihNIT09MCl7dmFyIGs9MTtmb3Iocz1tKGYsdixmLmxlbmd0aCxhKSx2PTA7djxNO3YrKylrKj1hO3RoaXMuaW11bG4oayksdGhpcy53b3Jkc1swXStzPDY3MTA4ODY0P3RoaXMud29yZHNbMF0rPXM6dGhpcy5faWFkZG4ocyl9dGhpcy5fc3RyaXAoKX0sby5wcm90b3R5cGUuY29weT1mdW5jdGlvbihmKXtmLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCk7Zm9yKHZhciBhPTA7YTx0aGlzLmxlbmd0aDthKyspZi53b3Jkc1thXT10aGlzLndvcmRzW2FdO2YubGVuZ3RoPXRoaXMubGVuZ3RoLGYubmVnYXRpdmU9dGhpcy5uZWdhdGl2ZSxmLnJlZD10aGlzLnJlZH07ZnVuY3Rpb24gdyhBLGYpe0Eud29yZHM9Zi53b3JkcyxBLmxlbmd0aD1mLmxlbmd0aCxBLm5lZ2F0aXZlPWYubmVnYXRpdmUsQS5yZWQ9Zi5yZWR9aWYoby5wcm90b3R5cGUuX21vdmU9ZnVuY3Rpb24oZil7dyhmLHRoaXMpfSxvLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciBmPW5ldyBvKG51bGwpO3JldHVybiB0aGlzLmNvcHkoZiksZn0sby5wcm90b3R5cGUuX2V4cGFuZD1mdW5jdGlvbihmKXtmb3IoO3RoaXMubGVuZ3RoPGY7KXRoaXMud29yZHNbdGhpcy5sZW5ndGgrK109MDtyZXR1cm4gdGhpc30sby5wcm90b3R5cGUuX3N0cmlwPWZ1bmN0aW9uKCl7Zm9yKDt0aGlzLmxlbmd0aD4xJiZ0aGlzLndvcmRzW3RoaXMubGVuZ3RoLTFdPT09MDspdGhpcy5sZW5ndGgtLTtyZXR1cm4gdGhpcy5fbm9ybVNpZ24oKX0sby5wcm90b3R5cGUuX25vcm1TaWduPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGVuZ3RoPT09MSYmdGhpcy53b3Jkc1swXT09PTAmJih0aGlzLm5lZ2F0aXZlPTApLHRoaXN9LHR5cGVvZiBTeW1ib2w8XCJ1XCImJnR5cGVvZiBTeW1ib2wuZm9yPT1cImZ1bmN0aW9uXCIpdHJ5e28ucHJvdG90eXBlW1N5bWJvbC5mb3IoXCJub2RlanMudXRpbC5pbnNwZWN0LmN1c3RvbVwiKV09eX1jYXRjaHtvLnByb3RvdHlwZS5pbnNwZWN0PXl9ZWxzZSBvLnByb3RvdHlwZS5pbnNwZWN0PXk7ZnVuY3Rpb24geSgpe3JldHVybih0aGlzLnJlZD9cIjxCTi1SOiBcIjpcIjxCTjogXCIpK3RoaXMudG9TdHJpbmcoMTYpK1wiPlwifXZhciBTPVtcIlwiLFwiMFwiLFwiMDBcIixcIjAwMFwiLFwiMDAwMFwiLFwiMDAwMDBcIixcIjAwMDAwMFwiLFwiMDAwMDAwMFwiLFwiMDAwMDAwMDBcIixcIjAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiXSxJPVswLDAsMjUsMTYsMTIsMTEsMTAsOSw4LDgsNyw3LDcsNyw2LDYsNiw2LDYsNiw2LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDVdLE49WzAsMCwzMzU1NDQzMiw0MzA0NjcyMSwxNjc3NzIxNiw0ODgyODEyNSw2MDQ2NjE3Niw0MDM1MzYwNywxNjc3NzIxNiw0MzA0NjcyMSwxZTcsMTk0ODcxNzEsMzU4MzE4MDgsNjI3NDg1MTcsNzUyOTUzNiwxMTM5MDYyNSwxNjc3NzIxNiwyNDEzNzU2OSwzNDAxMjIyNCw0NzA0NTg4MSw2NGU2LDQwODQxMDEsNTE1MzYzMiw2NDM2MzQzLDc5NjI2MjQsOTc2NTYyNSwxMTg4MTM3NiwxNDM0ODkwNywxNzIxMDM2OCwyMDUxMTE0OSwyNDNlNSwyODYyOTE1MSwzMzU1NDQzMiwzOTEzNTM5Myw0NTQzNTQyNCw1MjUyMTg3NSw2MDQ2NjE3Nl07by5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oZixhKXtmPWZ8fDEwLGE9YXwwfHwxO3ZhciBjO2lmKGY9PT0xNnx8Zj09PVwiaGV4XCIpe2M9XCJcIjtmb3IodmFyIGQ9MCxnPTAseD0wO3g8dGhpcy5sZW5ndGg7eCsrKXt2YXIgTT10aGlzLndvcmRzW3hdLGw9KChNPDxkfGcpJjE2Nzc3MjE1KS50b1N0cmluZygxNik7Zz1NPj4+MjQtZCYxNjc3NzIxNSxkKz0yLGQ+PTI2JiYoZC09MjYseC0tKSxnIT09MHx8eCE9PXRoaXMubGVuZ3RoLTE/Yz1TWzYtbC5sZW5ndGhdK2wrYzpjPWwrY31mb3IoZyE9PTAmJihjPWcudG9TdHJpbmcoMTYpK2MpO2MubGVuZ3RoJWEhPT0wOyljPVwiMFwiK2M7cmV0dXJuIHRoaXMubmVnYXRpdmUhPT0wJiYoYz1cIi1cIitjKSxjfWlmKGY9PT0oZnwwKSYmZj49MiYmZjw9MzYpe3ZhciBzPUlbZl0sdj1OW2ZdO2M9XCJcIjt2YXIgaz10aGlzLmNsb25lKCk7Zm9yKGsubmVnYXRpdmU9MDshay5pc1plcm8oKTspe3ZhciB1PWsubW9kcm4odikudG9TdHJpbmcoZik7az1rLmlkaXZuKHYpLGsuaXNaZXJvKCk/Yz11K2M6Yz1TW3MtdS5sZW5ndGhdK3UrY31mb3IodGhpcy5pc1plcm8oKSYmKGM9XCIwXCIrYyk7Yy5sZW5ndGglYSE9PTA7KWM9XCIwXCIrYztyZXR1cm4gdGhpcy5uZWdhdGl2ZSE9PTAmJihjPVwiLVwiK2MpLGN9aSghMSxcIkJhc2Ugc2hvdWxkIGJlIGJldHdlZW4gMiBhbmQgMzZcIil9LG8ucHJvdG90eXBlLnRvTnVtYmVyPWZ1bmN0aW9uKCl7dmFyIGY9dGhpcy53b3Jkc1swXTtyZXR1cm4gdGhpcy5sZW5ndGg9PT0yP2YrPXRoaXMud29yZHNbMV0qNjcxMDg4NjQ6dGhpcy5sZW5ndGg9PT0zJiZ0aGlzLndvcmRzWzJdPT09MT9mKz00NTAzNTk5NjI3MzcwNDk2K3RoaXMud29yZHNbMV0qNjcxMDg4NjQ6dGhpcy5sZW5ndGg+MiYmaSghMSxcIk51bWJlciBjYW4gb25seSBzYWZlbHkgc3RvcmUgdXAgdG8gNTMgYml0c1wiKSx0aGlzLm5lZ2F0aXZlIT09MD8tZjpmfSxvLnByb3RvdHlwZS50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50b1N0cmluZygxNiwyKX0saCYmKG8ucHJvdG90eXBlLnRvQnVmZmVyPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIHRoaXMudG9BcnJheUxpa2UoaCxmLGEpfSksby5wcm90b3R5cGUudG9BcnJheT1mdW5jdGlvbihmLGEpe3JldHVybiB0aGlzLnRvQXJyYXlMaWtlKEFycmF5LGYsYSl9O3ZhciBDPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIGYuYWxsb2NVbnNhZmU/Zi5hbGxvY1Vuc2FmZShhKTpuZXcgZihhKX07by5wcm90b3R5cGUudG9BcnJheUxpa2U9ZnVuY3Rpb24oZixhLGMpe3RoaXMuX3N0cmlwKCk7dmFyIGQ9dGhpcy5ieXRlTGVuZ3RoKCksZz1jfHxNYXRoLm1heCgxLGQpO2koZDw9ZyxcImJ5dGUgYXJyYXkgbG9uZ2VyIHRoYW4gZGVzaXJlZCBsZW5ndGhcIiksaShnPjAsXCJSZXF1ZXN0ZWQgYXJyYXkgbGVuZ3RoIDw9IDBcIik7dmFyIHg9QyhmLGcpLE09YT09PVwibGVcIj9cIkxFXCI6XCJCRVwiO3JldHVybiB0aGlzW1wiX3RvQXJyYXlMaWtlXCIrTV0oeCxkKSx4fSxvLnByb3RvdHlwZS5fdG9BcnJheUxpa2VMRT1mdW5jdGlvbihmLGEpe2Zvcih2YXIgYz0wLGQ9MCxnPTAseD0wO2c8dGhpcy5sZW5ndGg7ZysrKXt2YXIgTT10aGlzLndvcmRzW2ddPDx4fGQ7ZltjKytdPU0mMjU1LGM8Zi5sZW5ndGgmJihmW2MrK109TT4+OCYyNTUpLGM8Zi5sZW5ndGgmJihmW2MrK109TT4+MTYmMjU1KSx4PT09Nj8oYzxmLmxlbmd0aCYmKGZbYysrXT1NPj4yNCYyNTUpLGQ9MCx4PTApOihkPU0+Pj4yNCx4Kz0yKX1pZihjPGYubGVuZ3RoKWZvcihmW2MrK109ZDtjPGYubGVuZ3RoOylmW2MrK109MH0sby5wcm90b3R5cGUuX3RvQXJyYXlMaWtlQkU9ZnVuY3Rpb24oZixhKXtmb3IodmFyIGM9Zi5sZW5ndGgtMSxkPTAsZz0wLHg9MDtnPHRoaXMubGVuZ3RoO2crKyl7dmFyIE09dGhpcy53b3Jkc1tnXTw8eHxkO2ZbYy0tXT1NJjI1NSxjPj0wJiYoZltjLS1dPU0+PjgmMjU1KSxjPj0wJiYoZltjLS1dPU0+PjE2JjI1NSkseD09PTY/KGM+PTAmJihmW2MtLV09TT4+MjQmMjU1KSxkPTAseD0wKTooZD1NPj4+MjQseCs9Mil9aWYoYz49MClmb3IoZltjLS1dPWQ7Yz49MDspZltjLS1dPTB9LE1hdGguY2x6MzI/by5wcm90b3R5cGUuX2NvdW50Qml0cz1mdW5jdGlvbihmKXtyZXR1cm4gMzItTWF0aC5jbHozMihmKX06by5wcm90b3R5cGUuX2NvdW50Qml0cz1mdW5jdGlvbihmKXt2YXIgYT1mLGM9MDtyZXR1cm4gYT49NDA5NiYmKGMrPTEzLGE+Pj49MTMpLGE+PTY0JiYoYys9NyxhPj4+PTcpLGE+PTgmJihjKz00LGE+Pj49NCksYT49MiYmKGMrPTIsYT4+Pj0yKSxjK2F9LG8ucHJvdG90eXBlLl96ZXJvQml0cz1mdW5jdGlvbihmKXtpZihmPT09MClyZXR1cm4gMjY7dmFyIGE9ZixjPTA7cmV0dXJuIGEmODE5MXx8KGMrPTEzLGE+Pj49MTMpLGEmMTI3fHwoYys9NyxhPj4+PTcpLGEmMTV8fChjKz00LGE+Pj49NCksYSYzfHwoYys9MixhPj4+PTIpLGEmMXx8YysrLGN9LG8ucHJvdG90eXBlLmJpdExlbmd0aD1mdW5jdGlvbigpe3ZhciBmPXRoaXMud29yZHNbdGhpcy5sZW5ndGgtMV0sYT10aGlzLl9jb3VudEJpdHMoZik7cmV0dXJuKHRoaXMubGVuZ3RoLTEpKjI2K2F9O2Z1bmN0aW9uIEYoQSl7Zm9yKHZhciBmPW5ldyBBcnJheShBLmJpdExlbmd0aCgpKSxhPTA7YTxmLmxlbmd0aDthKyspe3ZhciBjPWEvMjZ8MCxkPWElMjY7ZlthXT1BLndvcmRzW2NdPj4+ZCYxfXJldHVybiBmfW8ucHJvdG90eXBlLnplcm9CaXRzPWZ1bmN0aW9uKCl7aWYodGhpcy5pc1plcm8oKSlyZXR1cm4gMDtmb3IodmFyIGY9MCxhPTA7YTx0aGlzLmxlbmd0aDthKyspe3ZhciBjPXRoaXMuX3plcm9CaXRzKHRoaXMud29yZHNbYV0pO2lmKGYrPWMsYyE9PTI2KWJyZWFrfXJldHVybiBmfSxvLnByb3RvdHlwZS5ieXRlTGVuZ3RoPWZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguY2VpbCh0aGlzLmJpdExlbmd0aCgpLzgpfSxvLnByb3RvdHlwZS50b1R3b3M9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMubmVnYXRpdmUhPT0wP3RoaXMuYWJzKCkuaW5vdG4oZikuaWFkZG4oMSk6dGhpcy5jbG9uZSgpfSxvLnByb3RvdHlwZS5mcm9tVHdvcz1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy50ZXN0bihmLTEpP3RoaXMubm90bihmKS5pYWRkbigxKS5pbmVnKCk6dGhpcy5jbG9uZSgpfSxvLnByb3RvdHlwZS5pc05lZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLm5lZ2F0aXZlIT09MH0sby5wcm90b3R5cGUubmVnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pbmVnKCl9LG8ucHJvdG90eXBlLmluZWc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc1plcm8oKXx8KHRoaXMubmVnYXRpdmVePTEpLHRoaXN9LG8ucHJvdG90eXBlLml1b3I9ZnVuY3Rpb24oZil7Zm9yKDt0aGlzLmxlbmd0aDxmLmxlbmd0aDspdGhpcy53b3Jkc1t0aGlzLmxlbmd0aCsrXT0wO2Zvcih2YXIgYT0wO2E8Zi5sZW5ndGg7YSsrKXRoaXMud29yZHNbYV09dGhpcy53b3Jkc1thXXxmLndvcmRzW2FdO3JldHVybiB0aGlzLl9zdHJpcCgpfSxvLnByb3RvdHlwZS5pb3I9ZnVuY3Rpb24oZil7cmV0dXJuIGkoKHRoaXMubmVnYXRpdmV8Zi5uZWdhdGl2ZSk9PT0wKSx0aGlzLml1b3IoZil9LG8ucHJvdG90eXBlLm9yPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmxlbmd0aD5mLmxlbmd0aD90aGlzLmNsb25lKCkuaW9yKGYpOmYuY2xvbmUoKS5pb3IodGhpcyl9LG8ucHJvdG90eXBlLnVvcj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5sZW5ndGg+Zi5sZW5ndGg/dGhpcy5jbG9uZSgpLml1b3IoZik6Zi5jbG9uZSgpLml1b3IodGhpcyl9LG8ucHJvdG90eXBlLml1YW5kPWZ1bmN0aW9uKGYpe3ZhciBhO3RoaXMubGVuZ3RoPmYubGVuZ3RoP2E9ZjphPXRoaXM7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspdGhpcy53b3Jkc1tjXT10aGlzLndvcmRzW2NdJmYud29yZHNbY107cmV0dXJuIHRoaXMubGVuZ3RoPWEubGVuZ3RoLHRoaXMuX3N0cmlwKCl9LG8ucHJvdG90eXBlLmlhbmQ9ZnVuY3Rpb24oZil7cmV0dXJuIGkoKHRoaXMubmVnYXRpdmV8Zi5uZWdhdGl2ZSk9PT0wKSx0aGlzLml1YW5kKGYpfSxvLnByb3RvdHlwZS5hbmQ9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMubGVuZ3RoPmYubGVuZ3RoP3RoaXMuY2xvbmUoKS5pYW5kKGYpOmYuY2xvbmUoKS5pYW5kKHRoaXMpfSxvLnByb3RvdHlwZS51YW5kPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmxlbmd0aD5mLmxlbmd0aD90aGlzLmNsb25lKCkuaXVhbmQoZik6Zi5jbG9uZSgpLml1YW5kKHRoaXMpfSxvLnByb3RvdHlwZS5pdXhvcj1mdW5jdGlvbihmKXt2YXIgYSxjO3RoaXMubGVuZ3RoPmYubGVuZ3RoPyhhPXRoaXMsYz1mKTooYT1mLGM9dGhpcyk7Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspdGhpcy53b3Jkc1tkXT1hLndvcmRzW2RdXmMud29yZHNbZF07aWYodGhpcyE9PWEpZm9yKDtkPGEubGVuZ3RoO2QrKyl0aGlzLndvcmRzW2RdPWEud29yZHNbZF07cmV0dXJuIHRoaXMubGVuZ3RoPWEubGVuZ3RoLHRoaXMuX3N0cmlwKCl9LG8ucHJvdG90eXBlLml4b3I9ZnVuY3Rpb24oZil7cmV0dXJuIGkoKHRoaXMubmVnYXRpdmV8Zi5uZWdhdGl2ZSk9PT0wKSx0aGlzLml1eG9yKGYpfSxvLnByb3RvdHlwZS54b3I9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMubGVuZ3RoPmYubGVuZ3RoP3RoaXMuY2xvbmUoKS5peG9yKGYpOmYuY2xvbmUoKS5peG9yKHRoaXMpfSxvLnByb3RvdHlwZS51eG9yPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmxlbmd0aD5mLmxlbmd0aD90aGlzLmNsb25lKCkuaXV4b3IoZik6Zi5jbG9uZSgpLml1eG9yKHRoaXMpfSxvLnByb3RvdHlwZS5pbm90bj1mdW5jdGlvbihmKXtpKHR5cGVvZiBmPT1cIm51bWJlclwiJiZmPj0wKTt2YXIgYT1NYXRoLmNlaWwoZi8yNil8MCxjPWYlMjY7dGhpcy5fZXhwYW5kKGEpLGM+MCYmYS0tO2Zvcih2YXIgZD0wO2Q8YTtkKyspdGhpcy53b3Jkc1tkXT1+dGhpcy53b3Jkc1tkXSY2NzEwODg2MztyZXR1cm4gYz4wJiYodGhpcy53b3Jkc1tkXT1+dGhpcy53b3Jkc1tkXSY2NzEwODg2Mz4+MjYtYyksdGhpcy5fc3RyaXAoKX0sby5wcm90b3R5cGUubm90bj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmlub3RuKGYpfSxvLnByb3RvdHlwZS5zZXRuPWZ1bmN0aW9uKGYsYSl7aSh0eXBlb2YgZj09XCJudW1iZXJcIiYmZj49MCk7dmFyIGM9Zi8yNnwwLGQ9ZiUyNjtyZXR1cm4gdGhpcy5fZXhwYW5kKGMrMSksYT90aGlzLndvcmRzW2NdPXRoaXMud29yZHNbY118MTw8ZDp0aGlzLndvcmRzW2NdPXRoaXMud29yZHNbY10mfigxPDxkKSx0aGlzLl9zdHJpcCgpfSxvLnByb3RvdHlwZS5pYWRkPWZ1bmN0aW9uKGYpe3ZhciBhO2lmKHRoaXMubmVnYXRpdmUhPT0wJiZmLm5lZ2F0aXZlPT09MClyZXR1cm4gdGhpcy5uZWdhdGl2ZT0wLGE9dGhpcy5pc3ViKGYpLHRoaXMubmVnYXRpdmVePTEsdGhpcy5fbm9ybVNpZ24oKTtpZih0aGlzLm5lZ2F0aXZlPT09MCYmZi5uZWdhdGl2ZSE9PTApcmV0dXJuIGYubmVnYXRpdmU9MCxhPXRoaXMuaXN1YihmKSxmLm5lZ2F0aXZlPTEsYS5fbm9ybVNpZ24oKTt2YXIgYyxkO3RoaXMubGVuZ3RoPmYubGVuZ3RoPyhjPXRoaXMsZD1mKTooYz1mLGQ9dGhpcyk7Zm9yKHZhciBnPTAseD0wO3g8ZC5sZW5ndGg7eCsrKWE9KGMud29yZHNbeF18MCkrKGQud29yZHNbeF18MCkrZyx0aGlzLndvcmRzW3hdPWEmNjcxMDg4NjMsZz1hPj4+MjY7Zm9yKDtnIT09MCYmeDxjLmxlbmd0aDt4KyspYT0oYy53b3Jkc1t4XXwwKStnLHRoaXMud29yZHNbeF09YSY2NzEwODg2MyxnPWE+Pj4yNjtpZih0aGlzLmxlbmd0aD1jLmxlbmd0aCxnIT09MCl0aGlzLndvcmRzW3RoaXMubGVuZ3RoXT1nLHRoaXMubGVuZ3RoKys7ZWxzZSBpZihjIT09dGhpcylmb3IoO3g8Yy5sZW5ndGg7eCsrKXRoaXMud29yZHNbeF09Yy53b3Jkc1t4XTtyZXR1cm4gdGhpc30sby5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGYpe3ZhciBhO3JldHVybiBmLm5lZ2F0aXZlIT09MCYmdGhpcy5uZWdhdGl2ZT09PTA/KGYubmVnYXRpdmU9MCxhPXRoaXMuc3ViKGYpLGYubmVnYXRpdmVePTEsYSk6Zi5uZWdhdGl2ZT09PTAmJnRoaXMubmVnYXRpdmUhPT0wPyh0aGlzLm5lZ2F0aXZlPTAsYT1mLnN1Yih0aGlzKSx0aGlzLm5lZ2F0aXZlPTEsYSk6dGhpcy5sZW5ndGg+Zi5sZW5ndGg/dGhpcy5jbG9uZSgpLmlhZGQoZik6Zi5jbG9uZSgpLmlhZGQodGhpcyl9LG8ucHJvdG90eXBlLmlzdWI9ZnVuY3Rpb24oZil7aWYoZi5uZWdhdGl2ZSE9PTApe2YubmVnYXRpdmU9MDt2YXIgYT10aGlzLmlhZGQoZik7cmV0dXJuIGYubmVnYXRpdmU9MSxhLl9ub3JtU2lnbigpfWVsc2UgaWYodGhpcy5uZWdhdGl2ZSE9PTApcmV0dXJuIHRoaXMubmVnYXRpdmU9MCx0aGlzLmlhZGQoZiksdGhpcy5uZWdhdGl2ZT0xLHRoaXMuX25vcm1TaWduKCk7dmFyIGM9dGhpcy5jbXAoZik7aWYoYz09PTApcmV0dXJuIHRoaXMubmVnYXRpdmU9MCx0aGlzLmxlbmd0aD0xLHRoaXMud29yZHNbMF09MCx0aGlzO3ZhciBkLGc7Yz4wPyhkPXRoaXMsZz1mKTooZD1mLGc9dGhpcyk7Zm9yKHZhciB4PTAsTT0wO008Zy5sZW5ndGg7TSsrKWE9KGQud29yZHNbTV18MCktKGcud29yZHNbTV18MCkreCx4PWE+PjI2LHRoaXMud29yZHNbTV09YSY2NzEwODg2Mztmb3IoO3ghPT0wJiZNPGQubGVuZ3RoO00rKylhPShkLndvcmRzW01dfDApK3gseD1hPj4yNix0aGlzLndvcmRzW01dPWEmNjcxMDg4NjM7aWYoeD09PTAmJk08ZC5sZW5ndGgmJmQhPT10aGlzKWZvcig7TTxkLmxlbmd0aDtNKyspdGhpcy53b3Jkc1tNXT1kLndvcmRzW01dO3JldHVybiB0aGlzLmxlbmd0aD1NYXRoLm1heCh0aGlzLmxlbmd0aCxNKSxkIT09dGhpcyYmKHRoaXMubmVnYXRpdmU9MSksdGhpcy5fc3RyaXAoKX0sby5wcm90b3R5cGUuc3ViPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaXN1YihmKX07ZnVuY3Rpb24gVShBLGYsYSl7YS5uZWdhdGl2ZT1mLm5lZ2F0aXZlXkEubmVnYXRpdmU7dmFyIGM9QS5sZW5ndGgrZi5sZW5ndGh8MDthLmxlbmd0aD1jLGM9Yy0xfDA7dmFyIGQ9QS53b3Jkc1swXXwwLGc9Zi53b3Jkc1swXXwwLHg9ZCpnLE09eCY2NzEwODg2MyxsPXgvNjcxMDg4NjR8MDthLndvcmRzWzBdPU07Zm9yKHZhciBzPTE7czxjO3MrKyl7Zm9yKHZhciB2PWw+Pj4yNixrPWwmNjcxMDg4NjMsdT1NYXRoLm1pbihzLGYubGVuZ3RoLTEpLEU9TWF0aC5tYXgoMCxzLUEubGVuZ3RoKzEpO0U8PXU7RSsrKXt2YXIgXz1zLUV8MDtkPUEud29yZHNbX118MCxnPWYud29yZHNbRV18MCx4PWQqZytrLHYrPXgvNjcxMDg4NjR8MCxrPXgmNjcxMDg4NjN9YS53b3Jkc1tzXT1rfDAsbD12fDB9cmV0dXJuIGwhPT0wP2Eud29yZHNbc109bHwwOmEubGVuZ3RoLS0sYS5fc3RyaXAoKX12YXIgSj1mdW5jdGlvbihmLGEsYyl7dmFyIGQ9Zi53b3JkcyxnPWEud29yZHMseD1jLndvcmRzLE09MCxsLHMsdixrPWRbMF18MCx1PWsmODE5MSxFPWs+Pj4xMyxfPWRbMV18MCxCPV8mODE5MSxSPV8+Pj4xMyxUPWRbMl18MCxQPVQmODE5MSxPPVQ+Pj4xMyxDdD1kWzNdfDAsRD1DdCY4MTkxLHE9Q3Q+Pj4xMyxEZT1kWzRdfDAsWD1EZSY4MTkxLFo9RGU+Pj4xMyxGZT1kWzVdfDAsJD1GZSY4MTkxLHR0PUZlPj4+MTMsVGU9ZFs2XXwwLGV0PVRlJjgxOTEscnQ9VGU+Pj4xMyxVZT1kWzddfDAsaXQ9VWUmODE5MSxudD1VZT4+PjEzLGtlPWRbOF18MCxmdD1rZSY4MTkxLG90PWtlPj4+MTMscWU9ZFs5XXwwLHN0PXFlJjgxOTEsYXQ9cWU+Pj4xMyxLZT1nWzBdfDAsdXQ9S2UmODE5MSxodD1LZT4+PjEzLEhlPWdbMV18MCxjdD1IZSY4MTkxLGx0PUhlPj4+MTMsemU9Z1syXXwwLGR0PXplJjgxOTEscHQ9emU+Pj4xMyxMZT1nWzNdfDAsdnQ9TGUmODE5MSxtdD1MZT4+PjEzLGplPWdbNF18MCxndD1qZSY4MTkxLEF0PWplPj4+MTMsUWU9Z1s1XXwwLGJ0PVFlJjgxOTEseXQ9UWU+Pj4xMyxKZT1nWzZdfDAsd3Q9SmUmODE5MSx4dD1KZT4+PjEzLEdlPWdbN118MCxNdD1HZSY4MTkxLEV0PUdlPj4+MTMsWWU9Z1s4XXwwLFN0PVllJjgxOTEsTnQ9WWU+Pj4xMyxWZT1nWzldfDAsSXQ9VmUmODE5MSxfdD1WZT4+PjEzO2MubmVnYXRpdmU9Zi5uZWdhdGl2ZV5hLm5lZ2F0aXZlLGMubGVuZ3RoPTE5LGw9TWF0aC5pbXVsKHUsdXQpLHM9TWF0aC5pbXVsKHUsaHQpLHM9cytNYXRoLmltdWwoRSx1dCl8MCx2PU1hdGguaW11bChFLGh0KTt2YXIgTWU9KE0rbHwwKSsoKHMmODE5MSk8PDEzKXwwO009KHYrKHM+Pj4xMyl8MCkrKE1lPj4+MjYpfDAsTWUmPTY3MTA4ODYzLGw9TWF0aC5pbXVsKEIsdXQpLHM9TWF0aC5pbXVsKEIsaHQpLHM9cytNYXRoLmltdWwoUix1dCl8MCx2PU1hdGguaW11bChSLGh0KSxsPWwrTWF0aC5pbXVsKHUsY3QpfDAscz1zK01hdGguaW11bCh1LGx0KXwwLHM9cytNYXRoLmltdWwoRSxjdCl8MCx2PXYrTWF0aC5pbXVsKEUsbHQpfDA7dmFyIEVlPShNK2x8MCkrKChzJjgxOTEpPDwxMyl8MDtNPSh2KyhzPj4+MTMpfDApKyhFZT4+PjI2KXwwLEVlJj02NzEwODg2MyxsPU1hdGguaW11bChQLHV0KSxzPU1hdGguaW11bChQLGh0KSxzPXMrTWF0aC5pbXVsKE8sdXQpfDAsdj1NYXRoLmltdWwoTyxodCksbD1sK01hdGguaW11bChCLGN0KXwwLHM9cytNYXRoLmltdWwoQixsdCl8MCxzPXMrTWF0aC5pbXVsKFIsY3QpfDAsdj12K01hdGguaW11bChSLGx0KXwwLGw9bCtNYXRoLmltdWwodSxkdCl8MCxzPXMrTWF0aC5pbXVsKHUscHQpfDAscz1zK01hdGguaW11bChFLGR0KXwwLHY9ditNYXRoLmltdWwoRSxwdCl8MDt2YXIgU2U9KE0rbHwwKSsoKHMmODE5MSk8PDEzKXwwO009KHYrKHM+Pj4xMyl8MCkrKFNlPj4+MjYpfDAsU2UmPTY3MTA4ODYzLGw9TWF0aC5pbXVsKEQsdXQpLHM9TWF0aC5pbXVsKEQsaHQpLHM9cytNYXRoLmltdWwocSx1dCl8MCx2PU1hdGguaW11bChxLGh0KSxsPWwrTWF0aC5pbXVsKFAsY3QpfDAscz1zK01hdGguaW11bChQLGx0KXwwLHM9cytNYXRoLmltdWwoTyxjdCl8MCx2PXYrTWF0aC5pbXVsKE8sbHQpfDAsbD1sK01hdGguaW11bChCLGR0KXwwLHM9cytNYXRoLmltdWwoQixwdCl8MCxzPXMrTWF0aC5pbXVsKFIsZHQpfDAsdj12K01hdGguaW11bChSLHB0KXwwLGw9bCtNYXRoLmltdWwodSx2dCl8MCxzPXMrTWF0aC5pbXVsKHUsbXQpfDAscz1zK01hdGguaW11bChFLHZ0KXwwLHY9ditNYXRoLmltdWwoRSxtdCl8MDt2YXIgTmU9KE0rbHwwKSsoKHMmODE5MSk8PDEzKXwwO009KHYrKHM+Pj4xMyl8MCkrKE5lPj4+MjYpfDAsTmUmPTY3MTA4ODYzLGw9TWF0aC5pbXVsKFgsdXQpLHM9TWF0aC5pbXVsKFgsaHQpLHM9cytNYXRoLmltdWwoWix1dCl8MCx2PU1hdGguaW11bChaLGh0KSxsPWwrTWF0aC5pbXVsKEQsY3QpfDAscz1zK01hdGguaW11bChELGx0KXwwLHM9cytNYXRoLmltdWwocSxjdCl8MCx2PXYrTWF0aC5pbXVsKHEsbHQpfDAsbD1sK01hdGguaW11bChQLGR0KXwwLHM9cytNYXRoLmltdWwoUCxwdCl8MCxzPXMrTWF0aC5pbXVsKE8sZHQpfDAsdj12K01hdGguaW11bChPLHB0KXwwLGw9bCtNYXRoLmltdWwoQix2dCl8MCxzPXMrTWF0aC5pbXVsKEIsbXQpfDAscz1zK01hdGguaW11bChSLHZ0KXwwLHY9ditNYXRoLmltdWwoUixtdCl8MCxsPWwrTWF0aC5pbXVsKHUsZ3QpfDAscz1zK01hdGguaW11bCh1LEF0KXwwLHM9cytNYXRoLmltdWwoRSxndCl8MCx2PXYrTWF0aC5pbXVsKEUsQXQpfDA7dmFyIEllPShNK2x8MCkrKChzJjgxOTEpPDwxMyl8MDtNPSh2KyhzPj4+MTMpfDApKyhJZT4+PjI2KXwwLEllJj02NzEwODg2MyxsPU1hdGguaW11bCgkLHV0KSxzPU1hdGguaW11bCgkLGh0KSxzPXMrTWF0aC5pbXVsKHR0LHV0KXwwLHY9TWF0aC5pbXVsKHR0LGh0KSxsPWwrTWF0aC5pbXVsKFgsY3QpfDAscz1zK01hdGguaW11bChYLGx0KXwwLHM9cytNYXRoLmltdWwoWixjdCl8MCx2PXYrTWF0aC5pbXVsKFosbHQpfDAsbD1sK01hdGguaW11bChELGR0KXwwLHM9cytNYXRoLmltdWwoRCxwdCl8MCxzPXMrTWF0aC5pbXVsKHEsZHQpfDAsdj12K01hdGguaW11bChxLHB0KXwwLGw9bCtNYXRoLmltdWwoUCx2dCl8MCxzPXMrTWF0aC5pbXVsKFAsbXQpfDAscz1zK01hdGguaW11bChPLHZ0KXwwLHY9ditNYXRoLmltdWwoTyxtdCl8MCxsPWwrTWF0aC5pbXVsKEIsZ3QpfDAscz1zK01hdGguaW11bChCLEF0KXwwLHM9cytNYXRoLmltdWwoUixndCl8MCx2PXYrTWF0aC5pbXVsKFIsQXQpfDAsbD1sK01hdGguaW11bCh1LGJ0KXwwLHM9cytNYXRoLmltdWwodSx5dCl8MCxzPXMrTWF0aC5pbXVsKEUsYnQpfDAsdj12K01hdGguaW11bChFLHl0KXwwO3ZhciBXcj0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0odisocz4+PjEzKXwwKSsoV3I+Pj4yNil8MCxXciY9NjcxMDg4NjMsbD1NYXRoLmltdWwoZXQsdXQpLHM9TWF0aC5pbXVsKGV0LGh0KSxzPXMrTWF0aC5pbXVsKHJ0LHV0KXwwLHY9TWF0aC5pbXVsKHJ0LGh0KSxsPWwrTWF0aC5pbXVsKCQsY3QpfDAscz1zK01hdGguaW11bCgkLGx0KXwwLHM9cytNYXRoLmltdWwodHQsY3QpfDAsdj12K01hdGguaW11bCh0dCxsdCl8MCxsPWwrTWF0aC5pbXVsKFgsZHQpfDAscz1zK01hdGguaW11bChYLHB0KXwwLHM9cytNYXRoLmltdWwoWixkdCl8MCx2PXYrTWF0aC5pbXVsKFoscHQpfDAsbD1sK01hdGguaW11bChELHZ0KXwwLHM9cytNYXRoLmltdWwoRCxtdCl8MCxzPXMrTWF0aC5pbXVsKHEsdnQpfDAsdj12K01hdGguaW11bChxLG10KXwwLGw9bCtNYXRoLmltdWwoUCxndCl8MCxzPXMrTWF0aC5pbXVsKFAsQXQpfDAscz1zK01hdGguaW11bChPLGd0KXwwLHY9ditNYXRoLmltdWwoTyxBdCl8MCxsPWwrTWF0aC5pbXVsKEIsYnQpfDAscz1zK01hdGguaW11bChCLHl0KXwwLHM9cytNYXRoLmltdWwoUixidCl8MCx2PXYrTWF0aC5pbXVsKFIseXQpfDAsbD1sK01hdGguaW11bCh1LHd0KXwwLHM9cytNYXRoLmltdWwodSx4dCl8MCxzPXMrTWF0aC5pbXVsKEUsd3QpfDAsdj12K01hdGguaW11bChFLHh0KXwwO3ZhciBYcj0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0odisocz4+PjEzKXwwKSsoWHI+Pj4yNil8MCxYciY9NjcxMDg4NjMsbD1NYXRoLmltdWwoaXQsdXQpLHM9TWF0aC5pbXVsKGl0LGh0KSxzPXMrTWF0aC5pbXVsKG50LHV0KXwwLHY9TWF0aC5pbXVsKG50LGh0KSxsPWwrTWF0aC5pbXVsKGV0LGN0KXwwLHM9cytNYXRoLmltdWwoZXQsbHQpfDAscz1zK01hdGguaW11bChydCxjdCl8MCx2PXYrTWF0aC5pbXVsKHJ0LGx0KXwwLGw9bCtNYXRoLmltdWwoJCxkdCl8MCxzPXMrTWF0aC5pbXVsKCQscHQpfDAscz1zK01hdGguaW11bCh0dCxkdCl8MCx2PXYrTWF0aC5pbXVsKHR0LHB0KXwwLGw9bCtNYXRoLmltdWwoWCx2dCl8MCxzPXMrTWF0aC5pbXVsKFgsbXQpfDAscz1zK01hdGguaW11bChaLHZ0KXwwLHY9ditNYXRoLmltdWwoWixtdCl8MCxsPWwrTWF0aC5pbXVsKEQsZ3QpfDAscz1zK01hdGguaW11bChELEF0KXwwLHM9cytNYXRoLmltdWwocSxndCl8MCx2PXYrTWF0aC5pbXVsKHEsQXQpfDAsbD1sK01hdGguaW11bChQLGJ0KXwwLHM9cytNYXRoLmltdWwoUCx5dCl8MCxzPXMrTWF0aC5pbXVsKE8sYnQpfDAsdj12K01hdGguaW11bChPLHl0KXwwLGw9bCtNYXRoLmltdWwoQix3dCl8MCxzPXMrTWF0aC5pbXVsKEIseHQpfDAscz1zK01hdGguaW11bChSLHd0KXwwLHY9ditNYXRoLmltdWwoUix4dCl8MCxsPWwrTWF0aC5pbXVsKHUsTXQpfDAscz1zK01hdGguaW11bCh1LEV0KXwwLHM9cytNYXRoLmltdWwoRSxNdCl8MCx2PXYrTWF0aC5pbXVsKEUsRXQpfDA7dmFyIFpyPShNK2x8MCkrKChzJjgxOTEpPDwxMyl8MDtNPSh2KyhzPj4+MTMpfDApKyhacj4+PjI2KXwwLFpyJj02NzEwODg2MyxsPU1hdGguaW11bChmdCx1dCkscz1NYXRoLmltdWwoZnQsaHQpLHM9cytNYXRoLmltdWwob3QsdXQpfDAsdj1NYXRoLmltdWwob3QsaHQpLGw9bCtNYXRoLmltdWwoaXQsY3QpfDAscz1zK01hdGguaW11bChpdCxsdCl8MCxzPXMrTWF0aC5pbXVsKG50LGN0KXwwLHY9ditNYXRoLmltdWwobnQsbHQpfDAsbD1sK01hdGguaW11bChldCxkdCl8MCxzPXMrTWF0aC5pbXVsKGV0LHB0KXwwLHM9cytNYXRoLmltdWwocnQsZHQpfDAsdj12K01hdGguaW11bChydCxwdCl8MCxsPWwrTWF0aC5pbXVsKCQsdnQpfDAscz1zK01hdGguaW11bCgkLG10KXwwLHM9cytNYXRoLmltdWwodHQsdnQpfDAsdj12K01hdGguaW11bCh0dCxtdCl8MCxsPWwrTWF0aC5pbXVsKFgsZ3QpfDAscz1zK01hdGguaW11bChYLEF0KXwwLHM9cytNYXRoLmltdWwoWixndCl8MCx2PXYrTWF0aC5pbXVsKFosQXQpfDAsbD1sK01hdGguaW11bChELGJ0KXwwLHM9cytNYXRoLmltdWwoRCx5dCl8MCxzPXMrTWF0aC5pbXVsKHEsYnQpfDAsdj12K01hdGguaW11bChxLHl0KXwwLGw9bCtNYXRoLmltdWwoUCx3dCl8MCxzPXMrTWF0aC5pbXVsKFAseHQpfDAscz1zK01hdGguaW11bChPLHd0KXwwLHY9ditNYXRoLmltdWwoTyx4dCl8MCxsPWwrTWF0aC5pbXVsKEIsTXQpfDAscz1zK01hdGguaW11bChCLEV0KXwwLHM9cytNYXRoLmltdWwoUixNdCl8MCx2PXYrTWF0aC5pbXVsKFIsRXQpfDAsbD1sK01hdGguaW11bCh1LFN0KXwwLHM9cytNYXRoLmltdWwodSxOdCl8MCxzPXMrTWF0aC5pbXVsKEUsU3QpfDAsdj12K01hdGguaW11bChFLE50KXwwO3ZhciAkcj0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0odisocz4+PjEzKXwwKSsoJHI+Pj4yNil8MCwkciY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsdXQpLHM9TWF0aC5pbXVsKHN0LGh0KSxzPXMrTWF0aC5pbXVsKGF0LHV0KXwwLHY9TWF0aC5pbXVsKGF0LGh0KSxsPWwrTWF0aC5pbXVsKGZ0LGN0KXwwLHM9cytNYXRoLmltdWwoZnQsbHQpfDAscz1zK01hdGguaW11bChvdCxjdCl8MCx2PXYrTWF0aC5pbXVsKG90LGx0KXwwLGw9bCtNYXRoLmltdWwoaXQsZHQpfDAscz1zK01hdGguaW11bChpdCxwdCl8MCxzPXMrTWF0aC5pbXVsKG50LGR0KXwwLHY9ditNYXRoLmltdWwobnQscHQpfDAsbD1sK01hdGguaW11bChldCx2dCl8MCxzPXMrTWF0aC5pbXVsKGV0LG10KXwwLHM9cytNYXRoLmltdWwocnQsdnQpfDAsdj12K01hdGguaW11bChydCxtdCl8MCxsPWwrTWF0aC5pbXVsKCQsZ3QpfDAscz1zK01hdGguaW11bCgkLEF0KXwwLHM9cytNYXRoLmltdWwodHQsZ3QpfDAsdj12K01hdGguaW11bCh0dCxBdCl8MCxsPWwrTWF0aC5pbXVsKFgsYnQpfDAscz1zK01hdGguaW11bChYLHl0KXwwLHM9cytNYXRoLmltdWwoWixidCl8MCx2PXYrTWF0aC5pbXVsKFoseXQpfDAsbD1sK01hdGguaW11bChELHd0KXwwLHM9cytNYXRoLmltdWwoRCx4dCl8MCxzPXMrTWF0aC5pbXVsKHEsd3QpfDAsdj12K01hdGguaW11bChxLHh0KXwwLGw9bCtNYXRoLmltdWwoUCxNdCl8MCxzPXMrTWF0aC5pbXVsKFAsRXQpfDAscz1zK01hdGguaW11bChPLE10KXwwLHY9ditNYXRoLmltdWwoTyxFdCl8MCxsPWwrTWF0aC5pbXVsKEIsU3QpfDAscz1zK01hdGguaW11bChCLE50KXwwLHM9cytNYXRoLmltdWwoUixTdCl8MCx2PXYrTWF0aC5pbXVsKFIsTnQpfDAsbD1sK01hdGguaW11bCh1LEl0KXwwLHM9cytNYXRoLmltdWwodSxfdCl8MCxzPXMrTWF0aC5pbXVsKEUsSXQpfDAsdj12K01hdGguaW11bChFLF90KXwwO3ZhciB0aT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0odisocz4+PjEzKXwwKSsodGk+Pj4yNil8MCx0aSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsY3QpLHM9TWF0aC5pbXVsKHN0LGx0KSxzPXMrTWF0aC5pbXVsKGF0LGN0KXwwLHY9TWF0aC5pbXVsKGF0LGx0KSxsPWwrTWF0aC5pbXVsKGZ0LGR0KXwwLHM9cytNYXRoLmltdWwoZnQscHQpfDAscz1zK01hdGguaW11bChvdCxkdCl8MCx2PXYrTWF0aC5pbXVsKG90LHB0KXwwLGw9bCtNYXRoLmltdWwoaXQsdnQpfDAscz1zK01hdGguaW11bChpdCxtdCl8MCxzPXMrTWF0aC5pbXVsKG50LHZ0KXwwLHY9ditNYXRoLmltdWwobnQsbXQpfDAsbD1sK01hdGguaW11bChldCxndCl8MCxzPXMrTWF0aC5pbXVsKGV0LEF0KXwwLHM9cytNYXRoLmltdWwocnQsZ3QpfDAsdj12K01hdGguaW11bChydCxBdCl8MCxsPWwrTWF0aC5pbXVsKCQsYnQpfDAscz1zK01hdGguaW11bCgkLHl0KXwwLHM9cytNYXRoLmltdWwodHQsYnQpfDAsdj12K01hdGguaW11bCh0dCx5dCl8MCxsPWwrTWF0aC5pbXVsKFgsd3QpfDAscz1zK01hdGguaW11bChYLHh0KXwwLHM9cytNYXRoLmltdWwoWix3dCl8MCx2PXYrTWF0aC5pbXVsKFoseHQpfDAsbD1sK01hdGguaW11bChELE10KXwwLHM9cytNYXRoLmltdWwoRCxFdCl8MCxzPXMrTWF0aC5pbXVsKHEsTXQpfDAsdj12K01hdGguaW11bChxLEV0KXwwLGw9bCtNYXRoLmltdWwoUCxTdCl8MCxzPXMrTWF0aC5pbXVsKFAsTnQpfDAscz1zK01hdGguaW11bChPLFN0KXwwLHY9ditNYXRoLmltdWwoTyxOdCl8MCxsPWwrTWF0aC5pbXVsKEIsSXQpfDAscz1zK01hdGguaW11bChCLF90KXwwLHM9cytNYXRoLmltdWwoUixJdCl8MCx2PXYrTWF0aC5pbXVsKFIsX3QpfDA7dmFyIGVpPShNK2x8MCkrKChzJjgxOTEpPDwxMyl8MDtNPSh2KyhzPj4+MTMpfDApKyhlaT4+PjI2KXwwLGVpJj02NzEwODg2MyxsPU1hdGguaW11bChzdCxkdCkscz1NYXRoLmltdWwoc3QscHQpLHM9cytNYXRoLmltdWwoYXQsZHQpfDAsdj1NYXRoLmltdWwoYXQscHQpLGw9bCtNYXRoLmltdWwoZnQsdnQpfDAscz1zK01hdGguaW11bChmdCxtdCl8MCxzPXMrTWF0aC5pbXVsKG90LHZ0KXwwLHY9ditNYXRoLmltdWwob3QsbXQpfDAsbD1sK01hdGguaW11bChpdCxndCl8MCxzPXMrTWF0aC5pbXVsKGl0LEF0KXwwLHM9cytNYXRoLmltdWwobnQsZ3QpfDAsdj12K01hdGguaW11bChudCxBdCl8MCxsPWwrTWF0aC5pbXVsKGV0LGJ0KXwwLHM9cytNYXRoLmltdWwoZXQseXQpfDAscz1zK01hdGguaW11bChydCxidCl8MCx2PXYrTWF0aC5pbXVsKHJ0LHl0KXwwLGw9bCtNYXRoLmltdWwoJCx3dCl8MCxzPXMrTWF0aC5pbXVsKCQseHQpfDAscz1zK01hdGguaW11bCh0dCx3dCl8MCx2PXYrTWF0aC5pbXVsKHR0LHh0KXwwLGw9bCtNYXRoLmltdWwoWCxNdCl8MCxzPXMrTWF0aC5pbXVsKFgsRXQpfDAscz1zK01hdGguaW11bChaLE10KXwwLHY9ditNYXRoLmltdWwoWixFdCl8MCxsPWwrTWF0aC5pbXVsKEQsU3QpfDAscz1zK01hdGguaW11bChELE50KXwwLHM9cytNYXRoLmltdWwocSxTdCl8MCx2PXYrTWF0aC5pbXVsKHEsTnQpfDAsbD1sK01hdGguaW11bChQLEl0KXwwLHM9cytNYXRoLmltdWwoUCxfdCl8MCxzPXMrTWF0aC5pbXVsKE8sSXQpfDAsdj12K01hdGguaW11bChPLF90KXwwO3ZhciByaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0odisocz4+PjEzKXwwKSsocmk+Pj4yNil8MCxyaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsdnQpLHM9TWF0aC5pbXVsKHN0LG10KSxzPXMrTWF0aC5pbXVsKGF0LHZ0KXwwLHY9TWF0aC5pbXVsKGF0LG10KSxsPWwrTWF0aC5pbXVsKGZ0LGd0KXwwLHM9cytNYXRoLmltdWwoZnQsQXQpfDAscz1zK01hdGguaW11bChvdCxndCl8MCx2PXYrTWF0aC5pbXVsKG90LEF0KXwwLGw9bCtNYXRoLmltdWwoaXQsYnQpfDAscz1zK01hdGguaW11bChpdCx5dCl8MCxzPXMrTWF0aC5pbXVsKG50LGJ0KXwwLHY9ditNYXRoLmltdWwobnQseXQpfDAsbD1sK01hdGguaW11bChldCx3dCl8MCxzPXMrTWF0aC5pbXVsKGV0LHh0KXwwLHM9cytNYXRoLmltdWwocnQsd3QpfDAsdj12K01hdGguaW11bChydCx4dCl8MCxsPWwrTWF0aC5pbXVsKCQsTXQpfDAscz1zK01hdGguaW11bCgkLEV0KXwwLHM9cytNYXRoLmltdWwodHQsTXQpfDAsdj12K01hdGguaW11bCh0dCxFdCl8MCxsPWwrTWF0aC5pbXVsKFgsU3QpfDAscz1zK01hdGguaW11bChYLE50KXwwLHM9cytNYXRoLmltdWwoWixTdCl8MCx2PXYrTWF0aC5pbXVsKFosTnQpfDAsbD1sK01hdGguaW11bChELEl0KXwwLHM9cytNYXRoLmltdWwoRCxfdCl8MCxzPXMrTWF0aC5pbXVsKHEsSXQpfDAsdj12K01hdGguaW11bChxLF90KXwwO3ZhciBpaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0odisocz4+PjEzKXwwKSsoaWk+Pj4yNil8MCxpaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsZ3QpLHM9TWF0aC5pbXVsKHN0LEF0KSxzPXMrTWF0aC5pbXVsKGF0LGd0KXwwLHY9TWF0aC5pbXVsKGF0LEF0KSxsPWwrTWF0aC5pbXVsKGZ0LGJ0KXwwLHM9cytNYXRoLmltdWwoZnQseXQpfDAscz1zK01hdGguaW11bChvdCxidCl8MCx2PXYrTWF0aC5pbXVsKG90LHl0KXwwLGw9bCtNYXRoLmltdWwoaXQsd3QpfDAscz1zK01hdGguaW11bChpdCx4dCl8MCxzPXMrTWF0aC5pbXVsKG50LHd0KXwwLHY9ditNYXRoLmltdWwobnQseHQpfDAsbD1sK01hdGguaW11bChldCxNdCl8MCxzPXMrTWF0aC5pbXVsKGV0LEV0KXwwLHM9cytNYXRoLmltdWwocnQsTXQpfDAsdj12K01hdGguaW11bChydCxFdCl8MCxsPWwrTWF0aC5pbXVsKCQsU3QpfDAscz1zK01hdGguaW11bCgkLE50KXwwLHM9cytNYXRoLmltdWwodHQsU3QpfDAsdj12K01hdGguaW11bCh0dCxOdCl8MCxsPWwrTWF0aC5pbXVsKFgsSXQpfDAscz1zK01hdGguaW11bChYLF90KXwwLHM9cytNYXRoLmltdWwoWixJdCl8MCx2PXYrTWF0aC5pbXVsKFosX3QpfDA7dmFyIG5pPShNK2x8MCkrKChzJjgxOTEpPDwxMyl8MDtNPSh2KyhzPj4+MTMpfDApKyhuaT4+PjI2KXwwLG5pJj02NzEwODg2MyxsPU1hdGguaW11bChzdCxidCkscz1NYXRoLmltdWwoc3QseXQpLHM9cytNYXRoLmltdWwoYXQsYnQpfDAsdj1NYXRoLmltdWwoYXQseXQpLGw9bCtNYXRoLmltdWwoZnQsd3QpfDAscz1zK01hdGguaW11bChmdCx4dCl8MCxzPXMrTWF0aC5pbXVsKG90LHd0KXwwLHY9ditNYXRoLmltdWwob3QseHQpfDAsbD1sK01hdGguaW11bChpdCxNdCl8MCxzPXMrTWF0aC5pbXVsKGl0LEV0KXwwLHM9cytNYXRoLmltdWwobnQsTXQpfDAsdj12K01hdGguaW11bChudCxFdCl8MCxsPWwrTWF0aC5pbXVsKGV0LFN0KXwwLHM9cytNYXRoLmltdWwoZXQsTnQpfDAscz1zK01hdGguaW11bChydCxTdCl8MCx2PXYrTWF0aC5pbXVsKHJ0LE50KXwwLGw9bCtNYXRoLmltdWwoJCxJdCl8MCxzPXMrTWF0aC5pbXVsKCQsX3QpfDAscz1zK01hdGguaW11bCh0dCxJdCl8MCx2PXYrTWF0aC5pbXVsKHR0LF90KXwwO3ZhciBmaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0odisocz4+PjEzKXwwKSsoZmk+Pj4yNil8MCxmaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3Qsd3QpLHM9TWF0aC5pbXVsKHN0LHh0KSxzPXMrTWF0aC5pbXVsKGF0LHd0KXwwLHY9TWF0aC5pbXVsKGF0LHh0KSxsPWwrTWF0aC5pbXVsKGZ0LE10KXwwLHM9cytNYXRoLmltdWwoZnQsRXQpfDAscz1zK01hdGguaW11bChvdCxNdCl8MCx2PXYrTWF0aC5pbXVsKG90LEV0KXwwLGw9bCtNYXRoLmltdWwoaXQsU3QpfDAscz1zK01hdGguaW11bChpdCxOdCl8MCxzPXMrTWF0aC5pbXVsKG50LFN0KXwwLHY9ditNYXRoLmltdWwobnQsTnQpfDAsbD1sK01hdGguaW11bChldCxJdCl8MCxzPXMrTWF0aC5pbXVsKGV0LF90KXwwLHM9cytNYXRoLmltdWwocnQsSXQpfDAsdj12K01hdGguaW11bChydCxfdCl8MDt2YXIgb2k9KE0rbHwwKSsoKHMmODE5MSk8PDEzKXwwO009KHYrKHM+Pj4xMyl8MCkrKG9pPj4+MjYpfDAsb2kmPTY3MTA4ODYzLGw9TWF0aC5pbXVsKHN0LE10KSxzPU1hdGguaW11bChzdCxFdCkscz1zK01hdGguaW11bChhdCxNdCl8MCx2PU1hdGguaW11bChhdCxFdCksbD1sK01hdGguaW11bChmdCxTdCl8MCxzPXMrTWF0aC5pbXVsKGZ0LE50KXwwLHM9cytNYXRoLmltdWwob3QsU3QpfDAsdj12K01hdGguaW11bChvdCxOdCl8MCxsPWwrTWF0aC5pbXVsKGl0LEl0KXwwLHM9cytNYXRoLmltdWwoaXQsX3QpfDAscz1zK01hdGguaW11bChudCxJdCl8MCx2PXYrTWF0aC5pbXVsKG50LF90KXwwO3ZhciBzaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0odisocz4+PjEzKXwwKSsoc2k+Pj4yNil8MCxzaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsU3QpLHM9TWF0aC5pbXVsKHN0LE50KSxzPXMrTWF0aC5pbXVsKGF0LFN0KXwwLHY9TWF0aC5pbXVsKGF0LE50KSxsPWwrTWF0aC5pbXVsKGZ0LEl0KXwwLHM9cytNYXRoLmltdWwoZnQsX3QpfDAscz1zK01hdGguaW11bChvdCxJdCl8MCx2PXYrTWF0aC5pbXVsKG90LF90KXwwO3ZhciBhaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0odisocz4+PjEzKXwwKSsoYWk+Pj4yNil8MCxhaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsSXQpLHM9TWF0aC5pbXVsKHN0LF90KSxzPXMrTWF0aC5pbXVsKGF0LEl0KXwwLHY9TWF0aC5pbXVsKGF0LF90KTt2YXIgdWk9KE0rbHwwKSsoKHMmODE5MSk8PDEzKXwwO3JldHVybiBNPSh2KyhzPj4+MTMpfDApKyh1aT4+PjI2KXwwLHVpJj02NzEwODg2Myx4WzBdPU1lLHhbMV09RWUseFsyXT1TZSx4WzNdPU5lLHhbNF09SWUseFs1XT1Xcix4WzZdPVhyLHhbN109WnIseFs4XT0kcix4WzldPXRpLHhbMTBdPWVpLHhbMTFdPXJpLHhbMTJdPWlpLHhbMTNdPW5pLHhbMTRdPWZpLHhbMTVdPW9pLHhbMTZdPXNpLHhbMTddPWFpLHhbMThdPXVpLE0hPT0wJiYoeFsxOV09TSxjLmxlbmd0aCsrKSxjfTtNYXRoLmltdWx8fChKPVUpO2Z1bmN0aW9uIEJ0KEEsZixhKXthLm5lZ2F0aXZlPWYubmVnYXRpdmVeQS5uZWdhdGl2ZSxhLmxlbmd0aD1BLmxlbmd0aCtmLmxlbmd0aDtmb3IodmFyIGM9MCxkPTAsZz0wO2c8YS5sZW5ndGgtMTtnKyspe3ZhciB4PWQ7ZD0wO2Zvcih2YXIgTT1jJjY3MTA4ODYzLGw9TWF0aC5taW4oZyxmLmxlbmd0aC0xKSxzPU1hdGgubWF4KDAsZy1BLmxlbmd0aCsxKTtzPD1sO3MrKyl7dmFyIHY9Zy1zLGs9QS53b3Jkc1t2XXwwLHU9Zi53b3Jkc1tzXXwwLEU9ayp1LF89RSY2NzEwODg2Mzt4PXgrKEUvNjcxMDg4NjR8MCl8MCxfPV8rTXwwLE09XyY2NzEwODg2Myx4PXgrKF8+Pj4yNil8MCxkKz14Pj4+MjYseCY9NjcxMDg4NjN9YS53b3Jkc1tnXT1NLGM9eCx4PWR9cmV0dXJuIGMhPT0wP2Eud29yZHNbZ109YzphLmxlbmd0aC0tLGEuX3N0cmlwKCl9ZnVuY3Rpb24gRyhBLGYsYSl7cmV0dXJuIEJ0KEEsZixhKX1vLnByb3RvdHlwZS5tdWxUbz1mdW5jdGlvbihmLGEpe3ZhciBjLGQ9dGhpcy5sZW5ndGgrZi5sZW5ndGg7cmV0dXJuIHRoaXMubGVuZ3RoPT09MTAmJmYubGVuZ3RoPT09MTA/Yz1KKHRoaXMsZixhKTpkPDYzP2M9VSh0aGlzLGYsYSk6ZDwxMDI0P2M9QnQodGhpcyxmLGEpOmM9Ryh0aGlzLGYsYSksY30sby5wcm90b3R5cGUubXVsPWZ1bmN0aW9uKGYpe3ZhciBhPW5ldyBvKG51bGwpO3JldHVybiBhLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCtmLmxlbmd0aCksdGhpcy5tdWxUbyhmLGEpfSxvLnByb3RvdHlwZS5tdWxmPWZ1bmN0aW9uKGYpe3ZhciBhPW5ldyBvKG51bGwpO3JldHVybiBhLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCtmLmxlbmd0aCksRyh0aGlzLGYsYSl9LG8ucHJvdG90eXBlLmltdWw9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMuY2xvbmUoKS5tdWxUbyhmLHRoaXMpfSxvLnByb3RvdHlwZS5pbXVsbj1mdW5jdGlvbihmKXt2YXIgYT1mPDA7YSYmKGY9LWYpLGkodHlwZW9mIGY9PVwibnVtYmVyXCIpLGkoZjw2NzEwODg2NCk7Zm9yKHZhciBjPTAsZD0wO2Q8dGhpcy5sZW5ndGg7ZCsrKXt2YXIgZz0odGhpcy53b3Jkc1tkXXwwKSpmLHg9KGcmNjcxMDg4NjMpKyhjJjY3MTA4ODYzKTtjPj49MjYsYys9Zy82NzEwODg2NHwwLGMrPXg+Pj4yNix0aGlzLndvcmRzW2RdPXgmNjcxMDg4NjN9cmV0dXJuIGMhPT0wJiYodGhpcy53b3Jkc1tkXT1jLHRoaXMubGVuZ3RoKyspLGE/dGhpcy5pbmVnKCk6dGhpc30sby5wcm90b3R5cGUubXVsbj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmltdWxuKGYpfSxvLnByb3RvdHlwZS5zcXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tdWwodGhpcyl9LG8ucHJvdG90eXBlLmlzcXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbXVsKHRoaXMuY2xvbmUoKSl9LG8ucHJvdG90eXBlLnBvdz1mdW5jdGlvbihmKXt2YXIgYT1GKGYpO2lmKGEubGVuZ3RoPT09MClyZXR1cm4gbmV3IG8oMSk7Zm9yKHZhciBjPXRoaXMsZD0wO2Q8YS5sZW5ndGgmJmFbZF09PT0wO2QrKyxjPWMuc3FyKCkpO2lmKCsrZDxhLmxlbmd0aClmb3IodmFyIGc9Yy5zcXIoKTtkPGEubGVuZ3RoO2QrKyxnPWcuc3FyKCkpYVtkXSE9PTAmJihjPWMubXVsKGcpKTtyZXR1cm4gY30sby5wcm90b3R5cGUuaXVzaGxuPWZ1bmN0aW9uKGYpe2kodHlwZW9mIGY9PVwibnVtYmVyXCImJmY+PTApO3ZhciBhPWYlMjYsYz0oZi1hKS8yNixkPTY3MTA4ODYzPj4+MjYtYTw8MjYtYSxnO2lmKGEhPT0wKXt2YXIgeD0wO2ZvcihnPTA7Zzx0aGlzLmxlbmd0aDtnKyspe3ZhciBNPXRoaXMud29yZHNbZ10mZCxsPSh0aGlzLndvcmRzW2ddfDApLU08PGE7dGhpcy53b3Jkc1tnXT1sfHgseD1NPj4+MjYtYX14JiYodGhpcy53b3Jkc1tnXT14LHRoaXMubGVuZ3RoKyspfWlmKGMhPT0wKXtmb3IoZz10aGlzLmxlbmd0aC0xO2c+PTA7Zy0tKXRoaXMud29yZHNbZytjXT10aGlzLndvcmRzW2ddO2ZvcihnPTA7ZzxjO2crKyl0aGlzLndvcmRzW2ddPTA7dGhpcy5sZW5ndGgrPWN9cmV0dXJuIHRoaXMuX3N0cmlwKCl9LG8ucHJvdG90eXBlLmlzaGxuPWZ1bmN0aW9uKGYpe3JldHVybiBpKHRoaXMubmVnYXRpdmU9PT0wKSx0aGlzLml1c2hsbihmKX0sby5wcm90b3R5cGUuaXVzaHJuPWZ1bmN0aW9uKGYsYSxjKXtpKHR5cGVvZiBmPT1cIm51bWJlclwiJiZmPj0wKTt2YXIgZDthP2Q9KGEtYSUyNikvMjY6ZD0wO3ZhciBnPWYlMjYseD1NYXRoLm1pbigoZi1nKS8yNix0aGlzLmxlbmd0aCksTT02NzEwODg2M142NzEwODg2Mz4+Pmc8PGcsbD1jO2lmKGQtPXgsZD1NYXRoLm1heCgwLGQpLGwpe2Zvcih2YXIgcz0wO3M8eDtzKyspbC53b3Jkc1tzXT10aGlzLndvcmRzW3NdO2wubGVuZ3RoPXh9aWYoeCE9PTApaWYodGhpcy5sZW5ndGg+eClmb3IodGhpcy5sZW5ndGgtPXgscz0wO3M8dGhpcy5sZW5ndGg7cysrKXRoaXMud29yZHNbc109dGhpcy53b3Jkc1tzK3hdO2Vsc2UgdGhpcy53b3Jkc1swXT0wLHRoaXMubGVuZ3RoPTE7dmFyIHY9MDtmb3Iocz10aGlzLmxlbmd0aC0xO3M+PTAmJih2IT09MHx8cz49ZCk7cy0tKXt2YXIgaz10aGlzLndvcmRzW3NdfDA7dGhpcy53b3Jkc1tzXT12PDwyNi1nfGs+Pj5nLHY9ayZNfXJldHVybiBsJiZ2IT09MCYmKGwud29yZHNbbC5sZW5ndGgrK109diksdGhpcy5sZW5ndGg9PT0wJiYodGhpcy53b3Jkc1swXT0wLHRoaXMubGVuZ3RoPTEpLHRoaXMuX3N0cmlwKCl9LG8ucHJvdG90eXBlLmlzaHJuPWZ1bmN0aW9uKGYsYSxjKXtyZXR1cm4gaSh0aGlzLm5lZ2F0aXZlPT09MCksdGhpcy5pdXNocm4oZixhLGMpfSxvLnByb3RvdHlwZS5zaGxuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaXNobG4oZil9LG8ucHJvdG90eXBlLnVzaGxuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaXVzaGxuKGYpfSxvLnByb3RvdHlwZS5zaHJuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaXNocm4oZil9LG8ucHJvdG90eXBlLnVzaHJuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaXVzaHJuKGYpfSxvLnByb3RvdHlwZS50ZXN0bj1mdW5jdGlvbihmKXtpKHR5cGVvZiBmPT1cIm51bWJlclwiJiZmPj0wKTt2YXIgYT1mJTI2LGM9KGYtYSkvMjYsZD0xPDxhO2lmKHRoaXMubGVuZ3RoPD1jKXJldHVybiExO3ZhciBnPXRoaXMud29yZHNbY107cmV0dXJuISEoZyZkKX0sby5wcm90b3R5cGUuaW1hc2tuPWZ1bmN0aW9uKGYpe2kodHlwZW9mIGY9PVwibnVtYmVyXCImJmY+PTApO3ZhciBhPWYlMjYsYz0oZi1hKS8yNjtpZihpKHRoaXMubmVnYXRpdmU9PT0wLFwiaW1hc2tuIHdvcmtzIG9ubHkgd2l0aCBwb3NpdGl2ZSBudW1iZXJzXCIpLHRoaXMubGVuZ3RoPD1jKXJldHVybiB0aGlzO2lmKGEhPT0wJiZjKyssdGhpcy5sZW5ndGg9TWF0aC5taW4oYyx0aGlzLmxlbmd0aCksYSE9PTApe3ZhciBkPTY3MTA4ODYzXjY3MTA4ODYzPj4+YTw8YTt0aGlzLndvcmRzW3RoaXMubGVuZ3RoLTFdJj1kfXJldHVybiB0aGlzLl9zdHJpcCgpfSxvLnByb3RvdHlwZS5tYXNrbj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmltYXNrbihmKX0sby5wcm90b3R5cGUuaWFkZG49ZnVuY3Rpb24oZil7cmV0dXJuIGkodHlwZW9mIGY9PVwibnVtYmVyXCIpLGkoZjw2NzEwODg2NCksZjwwP3RoaXMuaXN1Ym4oLWYpOnRoaXMubmVnYXRpdmUhPT0wP3RoaXMubGVuZ3RoPT09MSYmKHRoaXMud29yZHNbMF18MCk8PWY/KHRoaXMud29yZHNbMF09Zi0odGhpcy53b3Jkc1swXXwwKSx0aGlzLm5lZ2F0aXZlPTAsdGhpcyk6KHRoaXMubmVnYXRpdmU9MCx0aGlzLmlzdWJuKGYpLHRoaXMubmVnYXRpdmU9MSx0aGlzKTp0aGlzLl9pYWRkbihmKX0sby5wcm90b3R5cGUuX2lhZGRuPWZ1bmN0aW9uKGYpe3RoaXMud29yZHNbMF0rPWY7Zm9yKHZhciBhPTA7YTx0aGlzLmxlbmd0aCYmdGhpcy53b3Jkc1thXT49NjcxMDg4NjQ7YSsrKXRoaXMud29yZHNbYV0tPTY3MTA4ODY0LGE9PT10aGlzLmxlbmd0aC0xP3RoaXMud29yZHNbYSsxXT0xOnRoaXMud29yZHNbYSsxXSsrO3JldHVybiB0aGlzLmxlbmd0aD1NYXRoLm1heCh0aGlzLmxlbmd0aCxhKzEpLHRoaXN9LG8ucHJvdG90eXBlLmlzdWJuPWZ1bmN0aW9uKGYpe2lmKGkodHlwZW9mIGY9PVwibnVtYmVyXCIpLGkoZjw2NzEwODg2NCksZjwwKXJldHVybiB0aGlzLmlhZGRuKC1mKTtpZih0aGlzLm5lZ2F0aXZlIT09MClyZXR1cm4gdGhpcy5uZWdhdGl2ZT0wLHRoaXMuaWFkZG4oZiksdGhpcy5uZWdhdGl2ZT0xLHRoaXM7aWYodGhpcy53b3Jkc1swXS09Zix0aGlzLmxlbmd0aD09PTEmJnRoaXMud29yZHNbMF08MCl0aGlzLndvcmRzWzBdPS10aGlzLndvcmRzWzBdLHRoaXMubmVnYXRpdmU9MTtlbHNlIGZvcih2YXIgYT0wO2E8dGhpcy5sZW5ndGgmJnRoaXMud29yZHNbYV08MDthKyspdGhpcy53b3Jkc1thXSs9NjcxMDg4NjQsdGhpcy53b3Jkc1thKzFdLT0xO3JldHVybiB0aGlzLl9zdHJpcCgpfSxvLnByb3RvdHlwZS5hZGRuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaWFkZG4oZil9LG8ucHJvdG90eXBlLnN1Ym49ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMuY2xvbmUoKS5pc3VibihmKX0sby5wcm90b3R5cGUuaWFicz1mdW5jdGlvbigpe3JldHVybiB0aGlzLm5lZ2F0aXZlPTAsdGhpc30sby5wcm90b3R5cGUuYWJzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pYWJzKCl9LG8ucHJvdG90eXBlLl9pc2hsbnN1Ym11bD1mdW5jdGlvbihmLGEsYyl7dmFyIGQ9Zi5sZW5ndGgrYyxnO3RoaXMuX2V4cGFuZChkKTt2YXIgeCxNPTA7Zm9yKGc9MDtnPGYubGVuZ3RoO2crKyl7eD0odGhpcy53b3Jkc1tnK2NdfDApK007dmFyIGw9KGYud29yZHNbZ118MCkqYTt4LT1sJjY3MTA4ODYzLE09KHg+PjI2KS0obC82NzEwODg2NHwwKSx0aGlzLndvcmRzW2crY109eCY2NzEwODg2M31mb3IoO2c8dGhpcy5sZW5ndGgtYztnKyspeD0odGhpcy53b3Jkc1tnK2NdfDApK00sTT14Pj4yNix0aGlzLndvcmRzW2crY109eCY2NzEwODg2MztpZihNPT09MClyZXR1cm4gdGhpcy5fc3RyaXAoKTtmb3IoaShNPT09LTEpLE09MCxnPTA7Zzx0aGlzLmxlbmd0aDtnKyspeD0tKHRoaXMud29yZHNbZ118MCkrTSxNPXg+PjI2LHRoaXMud29yZHNbZ109eCY2NzEwODg2MztyZXR1cm4gdGhpcy5uZWdhdGl2ZT0xLHRoaXMuX3N0cmlwKCl9LG8ucHJvdG90eXBlLl93b3JkRGl2PWZ1bmN0aW9uKGYsYSl7dmFyIGM9dGhpcy5sZW5ndGgtZi5sZW5ndGgsZD10aGlzLmNsb25lKCksZz1mLHg9Zy53b3Jkc1tnLmxlbmd0aC0xXXwwLE09dGhpcy5fY291bnRCaXRzKHgpO2M9MjYtTSxjIT09MCYmKGc9Zy51c2hsbihjKSxkLml1c2hsbihjKSx4PWcud29yZHNbZy5sZW5ndGgtMV18MCk7dmFyIGw9ZC5sZW5ndGgtZy5sZW5ndGgscztpZihhIT09XCJtb2RcIil7cz1uZXcgbyhudWxsKSxzLmxlbmd0aD1sKzEscy53b3Jkcz1uZXcgQXJyYXkocy5sZW5ndGgpO2Zvcih2YXIgdj0wO3Y8cy5sZW5ndGg7disrKXMud29yZHNbdl09MH12YXIgaz1kLmNsb25lKCkuX2lzaGxuc3VibXVsKGcsMSxsKTtrLm5lZ2F0aXZlPT09MCYmKGQ9ayxzJiYocy53b3Jkc1tsXT0xKSk7Zm9yKHZhciB1PWwtMTt1Pj0wO3UtLSl7dmFyIEU9KGQud29yZHNbZy5sZW5ndGgrdV18MCkqNjcxMDg4NjQrKGQud29yZHNbZy5sZW5ndGgrdS0xXXwwKTtmb3IoRT1NYXRoLm1pbihFL3h8MCw2NzEwODg2MyksZC5faXNobG5zdWJtdWwoZyxFLHUpO2QubmVnYXRpdmUhPT0wOylFLS0sZC5uZWdhdGl2ZT0wLGQuX2lzaGxuc3VibXVsKGcsMSx1KSxkLmlzWmVybygpfHwoZC5uZWdhdGl2ZV49MSk7cyYmKHMud29yZHNbdV09RSl9cmV0dXJuIHMmJnMuX3N0cmlwKCksZC5fc3RyaXAoKSxhIT09XCJkaXZcIiYmYyE9PTAmJmQuaXVzaHJuKGMpLHtkaXY6c3x8bnVsbCxtb2Q6ZH19LG8ucHJvdG90eXBlLmRpdm1vZD1mdW5jdGlvbihmLGEsYyl7aWYoaSghZi5pc1plcm8oKSksdGhpcy5pc1plcm8oKSlyZXR1cm57ZGl2Om5ldyBvKDApLG1vZDpuZXcgbygwKX07dmFyIGQsZyx4O3JldHVybiB0aGlzLm5lZ2F0aXZlIT09MCYmZi5uZWdhdGl2ZT09PTA/KHg9dGhpcy5uZWcoKS5kaXZtb2QoZixhKSxhIT09XCJtb2RcIiYmKGQ9eC5kaXYubmVnKCkpLGEhPT1cImRpdlwiJiYoZz14Lm1vZC5uZWcoKSxjJiZnLm5lZ2F0aXZlIT09MCYmZy5pYWRkKGYpKSx7ZGl2OmQsbW9kOmd9KTp0aGlzLm5lZ2F0aXZlPT09MCYmZi5uZWdhdGl2ZSE9PTA/KHg9dGhpcy5kaXZtb2QoZi5uZWcoKSxhKSxhIT09XCJtb2RcIiYmKGQ9eC5kaXYubmVnKCkpLHtkaXY6ZCxtb2Q6eC5tb2R9KTp0aGlzLm5lZ2F0aXZlJmYubmVnYXRpdmU/KHg9dGhpcy5uZWcoKS5kaXZtb2QoZi5uZWcoKSxhKSxhIT09XCJkaXZcIiYmKGc9eC5tb2QubmVnKCksYyYmZy5uZWdhdGl2ZSE9PTAmJmcuaXN1YihmKSkse2Rpdjp4LmRpdixtb2Q6Z30pOmYubGVuZ3RoPnRoaXMubGVuZ3RofHx0aGlzLmNtcChmKTwwP3tkaXY6bmV3IG8oMCksbW9kOnRoaXN9OmYubGVuZ3RoPT09MT9hPT09XCJkaXZcIj97ZGl2OnRoaXMuZGl2bihmLndvcmRzWzBdKSxtb2Q6bnVsbH06YT09PVwibW9kXCI/e2RpdjpudWxsLG1vZDpuZXcgbyh0aGlzLm1vZHJuKGYud29yZHNbMF0pKX06e2Rpdjp0aGlzLmRpdm4oZi53b3Jkc1swXSksbW9kOm5ldyBvKHRoaXMubW9kcm4oZi53b3Jkc1swXSkpfTp0aGlzLl93b3JkRGl2KGYsYSl9LG8ucHJvdG90eXBlLmRpdj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5kaXZtb2QoZixcImRpdlwiLCExKS5kaXZ9LG8ucHJvdG90eXBlLm1vZD1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5kaXZtb2QoZixcIm1vZFwiLCExKS5tb2R9LG8ucHJvdG90eXBlLnVtb2Q9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMuZGl2bW9kKGYsXCJtb2RcIiwhMCkubW9kfSxvLnByb3RvdHlwZS5kaXZSb3VuZD1mdW5jdGlvbihmKXt2YXIgYT10aGlzLmRpdm1vZChmKTtpZihhLm1vZC5pc1plcm8oKSlyZXR1cm4gYS5kaXY7dmFyIGM9YS5kaXYubmVnYXRpdmUhPT0wP2EubW9kLmlzdWIoZik6YS5tb2QsZD1mLnVzaHJuKDEpLGc9Zi5hbmRsbigxKSx4PWMuY21wKGQpO3JldHVybiB4PDB8fGc9PT0xJiZ4PT09MD9hLmRpdjphLmRpdi5uZWdhdGl2ZSE9PTA/YS5kaXYuaXN1Ym4oMSk6YS5kaXYuaWFkZG4oMSl9LG8ucHJvdG90eXBlLm1vZHJuPWZ1bmN0aW9uKGYpe3ZhciBhPWY8MDthJiYoZj0tZiksaShmPD02NzEwODg2Myk7Zm9yKHZhciBjPSgxPDwyNiklZixkPTAsZz10aGlzLmxlbmd0aC0xO2c+PTA7Zy0tKWQ9KGMqZCsodGhpcy53b3Jkc1tnXXwwKSklZjtyZXR1cm4gYT8tZDpkfSxvLnByb3RvdHlwZS5tb2RuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLm1vZHJuKGYpfSxvLnByb3RvdHlwZS5pZGl2bj1mdW5jdGlvbihmKXt2YXIgYT1mPDA7YSYmKGY9LWYpLGkoZjw9NjcxMDg4NjMpO2Zvcih2YXIgYz0wLGQ9dGhpcy5sZW5ndGgtMTtkPj0wO2QtLSl7dmFyIGc9KHRoaXMud29yZHNbZF18MCkrYyo2NzEwODg2NDt0aGlzLndvcmRzW2RdPWcvZnwwLGM9ZyVmfXJldHVybiB0aGlzLl9zdHJpcCgpLGE/dGhpcy5pbmVnKCk6dGhpc30sby5wcm90b3R5cGUuZGl2bj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmlkaXZuKGYpfSxvLnByb3RvdHlwZS5lZ2NkPWZ1bmN0aW9uKGYpe2koZi5uZWdhdGl2ZT09PTApLGkoIWYuaXNaZXJvKCkpO3ZhciBhPXRoaXMsYz1mLmNsb25lKCk7YS5uZWdhdGl2ZSE9PTA/YT1hLnVtb2QoZik6YT1hLmNsb25lKCk7Zm9yKHZhciBkPW5ldyBvKDEpLGc9bmV3IG8oMCkseD1uZXcgbygwKSxNPW5ldyBvKDEpLGw9MDthLmlzRXZlbigpJiZjLmlzRXZlbigpOylhLml1c2hybigxKSxjLml1c2hybigxKSwrK2w7Zm9yKHZhciBzPWMuY2xvbmUoKSx2PWEuY2xvbmUoKTshYS5pc1plcm8oKTspe2Zvcih2YXIgaz0wLHU9MTshKGEud29yZHNbMF0mdSkmJms8MjY7KytrLHU8PD0xKTtpZihrPjApZm9yKGEuaXVzaHJuKGspO2stLSA+MDspKGQuaXNPZGQoKXx8Zy5pc09kZCgpKSYmKGQuaWFkZChzKSxnLmlzdWIodikpLGQuaXVzaHJuKDEpLGcuaXVzaHJuKDEpO2Zvcih2YXIgRT0wLF89MTshKGMud29yZHNbMF0mXykmJkU8MjY7KytFLF88PD0xKTtpZihFPjApZm9yKGMuaXVzaHJuKEUpO0UtLSA+MDspKHguaXNPZGQoKXx8TS5pc09kZCgpKSYmKHguaWFkZChzKSxNLmlzdWIodikpLHguaXVzaHJuKDEpLE0uaXVzaHJuKDEpO2EuY21wKGMpPj0wPyhhLmlzdWIoYyksZC5pc3ViKHgpLGcuaXN1YihNKSk6KGMuaXN1YihhKSx4LmlzdWIoZCksTS5pc3ViKGcpKX1yZXR1cm57YTp4LGI6TSxnY2Q6Yy5pdXNobG4obCl9fSxvLnByb3RvdHlwZS5faW52bXA9ZnVuY3Rpb24oZil7aShmLm5lZ2F0aXZlPT09MCksaSghZi5pc1plcm8oKSk7dmFyIGE9dGhpcyxjPWYuY2xvbmUoKTthLm5lZ2F0aXZlIT09MD9hPWEudW1vZChmKTphPWEuY2xvbmUoKTtmb3IodmFyIGQ9bmV3IG8oMSksZz1uZXcgbygwKSx4PWMuY2xvbmUoKTthLmNtcG4oMSk+MCYmYy5jbXBuKDEpPjA7KXtmb3IodmFyIE09MCxsPTE7IShhLndvcmRzWzBdJmwpJiZNPDI2OysrTSxsPDw9MSk7aWYoTT4wKWZvcihhLml1c2hybihNKTtNLS0gPjA7KWQuaXNPZGQoKSYmZC5pYWRkKHgpLGQuaXVzaHJuKDEpO2Zvcih2YXIgcz0wLHY9MTshKGMud29yZHNbMF0mdikmJnM8MjY7KytzLHY8PD0xKTtpZihzPjApZm9yKGMuaXVzaHJuKHMpO3MtLSA+MDspZy5pc09kZCgpJiZnLmlhZGQoeCksZy5pdXNocm4oMSk7YS5jbXAoYyk+PTA/KGEuaXN1YihjKSxkLmlzdWIoZykpOihjLmlzdWIoYSksZy5pc3ViKGQpKX12YXIgaztyZXR1cm4gYS5jbXBuKDEpPT09MD9rPWQ6az1nLGsuY21wbigwKTwwJiZrLmlhZGQoZiksa30sby5wcm90b3R5cGUuZ2NkPWZ1bmN0aW9uKGYpe2lmKHRoaXMuaXNaZXJvKCkpcmV0dXJuIGYuYWJzKCk7aWYoZi5pc1plcm8oKSlyZXR1cm4gdGhpcy5hYnMoKTt2YXIgYT10aGlzLmNsb25lKCksYz1mLmNsb25lKCk7YS5uZWdhdGl2ZT0wLGMubmVnYXRpdmU9MDtmb3IodmFyIGQ9MDthLmlzRXZlbigpJiZjLmlzRXZlbigpO2QrKylhLml1c2hybigxKSxjLml1c2hybigxKTtkb3tmb3IoO2EuaXNFdmVuKCk7KWEuaXVzaHJuKDEpO2Zvcig7Yy5pc0V2ZW4oKTspYy5pdXNocm4oMSk7dmFyIGc9YS5jbXAoYyk7aWYoZzwwKXt2YXIgeD1hO2E9YyxjPXh9ZWxzZSBpZihnPT09MHx8Yy5jbXBuKDEpPT09MClicmVhazthLmlzdWIoYyl9d2hpbGUoITApO3JldHVybiBjLml1c2hsbihkKX0sby5wcm90b3R5cGUuaW52bT1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5lZ2NkKGYpLmEudW1vZChmKX0sby5wcm90b3R5cGUuaXNFdmVuPWZ1bmN0aW9uKCl7cmV0dXJuKHRoaXMud29yZHNbMF0mMSk9PT0wfSxvLnByb3RvdHlwZS5pc09kZD1mdW5jdGlvbigpe3JldHVybih0aGlzLndvcmRzWzBdJjEpPT09MX0sby5wcm90b3R5cGUuYW5kbG49ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMud29yZHNbMF0mZn0sby5wcm90b3R5cGUuYmluY249ZnVuY3Rpb24oZil7aSh0eXBlb2YgZj09XCJudW1iZXJcIik7dmFyIGE9ZiUyNixjPShmLWEpLzI2LGQ9MTw8YTtpZih0aGlzLmxlbmd0aDw9YylyZXR1cm4gdGhpcy5fZXhwYW5kKGMrMSksdGhpcy53b3Jkc1tjXXw9ZCx0aGlzO2Zvcih2YXIgZz1kLHg9YztnIT09MCYmeDx0aGlzLmxlbmd0aDt4Kyspe3ZhciBNPXRoaXMud29yZHNbeF18MDtNKz1nLGc9TT4+PjI2LE0mPTY3MTA4ODYzLHRoaXMud29yZHNbeF09TX1yZXR1cm4gZyE9PTAmJih0aGlzLndvcmRzW3hdPWcsdGhpcy5sZW5ndGgrKyksdGhpc30sby5wcm90b3R5cGUuaXNaZXJvPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGVuZ3RoPT09MSYmdGhpcy53b3Jkc1swXT09PTB9LG8ucHJvdG90eXBlLmNtcG49ZnVuY3Rpb24oZil7dmFyIGE9ZjwwO2lmKHRoaXMubmVnYXRpdmUhPT0wJiYhYSlyZXR1cm4tMTtpZih0aGlzLm5lZ2F0aXZlPT09MCYmYSlyZXR1cm4gMTt0aGlzLl9zdHJpcCgpO3ZhciBjO2lmKHRoaXMubGVuZ3RoPjEpYz0xO2Vsc2V7YSYmKGY9LWYpLGkoZjw9NjcxMDg4NjMsXCJOdW1iZXIgaXMgdG9vIGJpZ1wiKTt2YXIgZD10aGlzLndvcmRzWzBdfDA7Yz1kPT09Zj8wOmQ8Zj8tMToxfXJldHVybiB0aGlzLm5lZ2F0aXZlIT09MD8tY3wwOmN9LG8ucHJvdG90eXBlLmNtcD1mdW5jdGlvbihmKXtpZih0aGlzLm5lZ2F0aXZlIT09MCYmZi5uZWdhdGl2ZT09PTApcmV0dXJuLTE7aWYodGhpcy5uZWdhdGl2ZT09PTAmJmYubmVnYXRpdmUhPT0wKXJldHVybiAxO3ZhciBhPXRoaXMudWNtcChmKTtyZXR1cm4gdGhpcy5uZWdhdGl2ZSE9PTA/LWF8MDphfSxvLnByb3RvdHlwZS51Y21wPWZ1bmN0aW9uKGYpe2lmKHRoaXMubGVuZ3RoPmYubGVuZ3RoKXJldHVybiAxO2lmKHRoaXMubGVuZ3RoPGYubGVuZ3RoKXJldHVybi0xO2Zvcih2YXIgYT0wLGM9dGhpcy5sZW5ndGgtMTtjPj0wO2MtLSl7dmFyIGQ9dGhpcy53b3Jkc1tjXXwwLGc9Zi53b3Jkc1tjXXwwO2lmKGQhPT1nKXtkPGc/YT0tMTpkPmcmJihhPTEpO2JyZWFrfX1yZXR1cm4gYX0sby5wcm90b3R5cGUuZ3RuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNtcG4oZik9PT0xfSxvLnByb3RvdHlwZS5ndD1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbXAoZik9PT0xfSxvLnByb3RvdHlwZS5ndGVuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNtcG4oZik+PTB9LG8ucHJvdG90eXBlLmd0ZT1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbXAoZik+PTB9LG8ucHJvdG90eXBlLmx0bj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbXBuKGYpPT09LTF9LG8ucHJvdG90eXBlLmx0PWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNtcChmKT09PS0xfSxvLnByb3RvdHlwZS5sdGVuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNtcG4oZik8PTB9LG8ucHJvdG90eXBlLmx0ZT1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbXAoZik8PTB9LG8ucHJvdG90eXBlLmVxbj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbXBuKGYpPT09MH0sby5wcm90b3R5cGUuZXE9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMuY21wKGYpPT09MH0sby5yZWQ9ZnVuY3Rpb24oZil7cmV0dXJuIG5ldyBZKGYpfSxvLnByb3RvdHlwZS50b1JlZD1mdW5jdGlvbihmKXtyZXR1cm4gaSghdGhpcy5yZWQsXCJBbHJlYWR5IGEgbnVtYmVyIGluIHJlZHVjdGlvbiBjb250ZXh0XCIpLGkodGhpcy5uZWdhdGl2ZT09PTAsXCJyZWQgd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlc1wiKSxmLmNvbnZlcnRUbyh0aGlzKS5fZm9yY2VSZWQoZil9LG8ucHJvdG90eXBlLmZyb21SZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gaSh0aGlzLnJlZCxcImZyb21SZWQgd29ya3Mgb25seSB3aXRoIG51bWJlcnMgaW4gcmVkdWN0aW9uIGNvbnRleHRcIiksdGhpcy5yZWQuY29udmVydEZyb20odGhpcyl9LG8ucHJvdG90eXBlLl9mb3JjZVJlZD1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5yZWQ9Zix0aGlzfSxvLnByb3RvdHlwZS5mb3JjZVJlZD1mdW5jdGlvbihmKXtyZXR1cm4gaSghdGhpcy5yZWQsXCJBbHJlYWR5IGEgbnVtYmVyIGluIHJlZHVjdGlvbiBjb250ZXh0XCIpLHRoaXMuX2ZvcmNlUmVkKGYpfSxvLnByb3RvdHlwZS5yZWRBZGQ9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRBZGQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLmFkZCh0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRJQWRkPWZ1bmN0aW9uKGYpe3JldHVybiBpKHRoaXMucmVkLFwicmVkSUFkZCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuaWFkZCh0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRTdWI9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRTdWIgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLnN1Yih0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRJU3ViPWZ1bmN0aW9uKGYpe3JldHVybiBpKHRoaXMucmVkLFwicmVkSVN1YiB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuaXN1Yih0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRTaGw9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRTaGwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLnNobCh0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRNdWw9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRNdWwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLl92ZXJpZnkyKHRoaXMsZiksdGhpcy5yZWQubXVsKHRoaXMsZil9LG8ucHJvdG90eXBlLnJlZElNdWw9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRNdWwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLl92ZXJpZnkyKHRoaXMsZiksdGhpcy5yZWQuaW11bCh0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRTcXI9ZnVuY3Rpb24oKXtyZXR1cm4gaSh0aGlzLnJlZCxcInJlZFNxciB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuX3ZlcmlmeTEodGhpcyksdGhpcy5yZWQuc3FyKHRoaXMpfSxvLnByb3RvdHlwZS5yZWRJU3FyPWZ1bmN0aW9uKCl7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRJU3FyIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKSx0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKSx0aGlzLnJlZC5pc3FyKHRoaXMpfSxvLnByb3RvdHlwZS5yZWRTcXJ0PWZ1bmN0aW9uKCl7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRTcXJ0IHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKSx0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKSx0aGlzLnJlZC5zcXJ0KHRoaXMpfSxvLnByb3RvdHlwZS5yZWRJbnZtPWZ1bmN0aW9uKCl7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRJbnZtIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKSx0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKSx0aGlzLnJlZC5pbnZtKHRoaXMpfSxvLnByb3RvdHlwZS5yZWROZWc9ZnVuY3Rpb24oKXtyZXR1cm4gaSh0aGlzLnJlZCxcInJlZE5lZyB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuX3ZlcmlmeTEodGhpcyksdGhpcy5yZWQubmVnKHRoaXMpfSxvLnByb3RvdHlwZS5yZWRQb3c9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQmJiFmLnJlZCxcInJlZFBvdyhub3JtYWxOdW0pXCIpLHRoaXMucmVkLl92ZXJpZnkxKHRoaXMpLHRoaXMucmVkLnBvdyh0aGlzLGYpfTt2YXIgSD17azI1NjpudWxsLHAyMjQ6bnVsbCxwMTkyOm51bGwscDI1NTE5Om51bGx9O2Z1bmN0aW9uIHooQSxmKXt0aGlzLm5hbWU9QSx0aGlzLnA9bmV3IG8oZiwxNiksdGhpcy5uPXRoaXMucC5iaXRMZW5ndGgoKSx0aGlzLms9bmV3IG8oMSkuaXVzaGxuKHRoaXMubikuaXN1Yih0aGlzLnApLHRoaXMudG1wPXRoaXMuX3RtcCgpfXoucHJvdG90eXBlLl90bXA9ZnVuY3Rpb24oKXt2YXIgZj1uZXcgbyhudWxsKTtyZXR1cm4gZi53b3Jkcz1uZXcgQXJyYXkoTWF0aC5jZWlsKHRoaXMubi8xMykpLGZ9LHoucHJvdG90eXBlLmlyZWR1Y2U9ZnVuY3Rpb24oZil7dmFyIGE9ZixjO2RvIHRoaXMuc3BsaXQoYSx0aGlzLnRtcCksYT10aGlzLmltdWxLKGEpLGE9YS5pYWRkKHRoaXMudG1wKSxjPWEuYml0TGVuZ3RoKCk7d2hpbGUoYz50aGlzLm4pO3ZhciBkPWM8dGhpcy5uPy0xOmEudWNtcCh0aGlzLnApO3JldHVybiBkPT09MD8oYS53b3Jkc1swXT0wLGEubGVuZ3RoPTEpOmQ+MD9hLmlzdWIodGhpcy5wKTphLnN0cmlwIT09dm9pZCAwP2Euc3RyaXAoKTphLl9zdHJpcCgpLGF9LHoucHJvdG90eXBlLnNwbGl0PWZ1bmN0aW9uKGYsYSl7Zi5pdXNocm4odGhpcy5uLDAsYSl9LHoucHJvdG90eXBlLmltdWxLPWZ1bmN0aW9uKGYpe3JldHVybiBmLmltdWwodGhpcy5rKX07ZnVuY3Rpb24gUHQoKXt6LmNhbGwodGhpcyxcImsyNTZcIixcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGZmZmZmYzJmXCIpfW4oUHQseiksUHQucHJvdG90eXBlLnNwbGl0PWZ1bmN0aW9uKGYsYSl7Zm9yKHZhciBjPTQxOTQzMDMsZD1NYXRoLm1pbihmLmxlbmd0aCw5KSxnPTA7ZzxkO2crKylhLndvcmRzW2ddPWYud29yZHNbZ107aWYoYS5sZW5ndGg9ZCxmLmxlbmd0aDw9OSl7Zi53b3Jkc1swXT0wLGYubGVuZ3RoPTE7cmV0dXJufXZhciB4PWYud29yZHNbOV07Zm9yKGEud29yZHNbYS5sZW5ndGgrK109eCZjLGc9MTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBNPWYud29yZHNbZ118MDtmLndvcmRzW2ctMTBdPShNJmMpPDw0fHg+Pj4yMix4PU19eD4+Pj0yMixmLndvcmRzW2ctMTBdPXgseD09PTAmJmYubGVuZ3RoPjEwP2YubGVuZ3RoLT0xMDpmLmxlbmd0aC09OX0sUHQucHJvdG90eXBlLmltdWxLPWZ1bmN0aW9uKGYpe2Yud29yZHNbZi5sZW5ndGhdPTAsZi53b3Jkc1tmLmxlbmd0aCsxXT0wLGYubGVuZ3RoKz0yO2Zvcih2YXIgYT0wLGM9MDtjPGYubGVuZ3RoO2MrKyl7dmFyIGQ9Zi53b3Jkc1tjXXwwO2ErPWQqOTc3LGYud29yZHNbY109YSY2NzEwODg2MyxhPWQqNjQrKGEvNjcxMDg4NjR8MCl9cmV0dXJuIGYud29yZHNbZi5sZW5ndGgtMV09PT0wJiYoZi5sZW5ndGgtLSxmLndvcmRzW2YubGVuZ3RoLTFdPT09MCYmZi5sZW5ndGgtLSksZn07ZnVuY3Rpb24gVygpe3ouY2FsbCh0aGlzLFwicDIyNFwiLFwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDFcIil9bihXLHopO2Z1bmN0aW9uIFJ0KCl7ei5jYWxsKHRoaXMsXCJwMTkyXCIsXCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmZmZiBmZmZmZmZmZlwiKX1uKFJ0LHopO2Z1bmN0aW9uIFl0KCl7ei5jYWxsKHRoaXMsXCIyNTUxOVwiLFwiN2ZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZlZFwiKX1uKFl0LHopLFl0LnByb3RvdHlwZS5pbXVsSz1mdW5jdGlvbihmKXtmb3IodmFyIGE9MCxjPTA7YzxmLmxlbmd0aDtjKyspe3ZhciBkPShmLndvcmRzW2NdfDApKjE5K2EsZz1kJjY3MTA4ODYzO2Q+Pj49MjYsZi53b3Jkc1tjXT1nLGE9ZH1yZXR1cm4gYSE9PTAmJihmLndvcmRzW2YubGVuZ3RoKytdPWEpLGZ9LG8uX3ByaW1lPWZ1bmN0aW9uKGYpe2lmKEhbZl0pcmV0dXJuIEhbZl07dmFyIGE7aWYoZj09PVwiazI1NlwiKWE9bmV3IFB0O2Vsc2UgaWYoZj09PVwicDIyNFwiKWE9bmV3IFc7ZWxzZSBpZihmPT09XCJwMTkyXCIpYT1uZXcgUnQ7ZWxzZSBpZihmPT09XCJwMjU1MTlcIilhPW5ldyBZdDtlbHNlIHRocm93IG5ldyBFcnJvcihcIlVua25vd24gcHJpbWUgXCIrZik7cmV0dXJuIEhbZl09YSxhfTtmdW5jdGlvbiBZKEEpe2lmKHR5cGVvZiBBPT1cInN0cmluZ1wiKXt2YXIgZj1vLl9wcmltZShBKTt0aGlzLm09Zi5wLHRoaXMucHJpbWU9Zn1lbHNlIGkoQS5ndG4oMSksXCJtb2R1bHVzIG11c3QgYmUgZ3JlYXRlciB0aGFuIDFcIiksdGhpcy5tPUEsdGhpcy5wcmltZT1udWxsfVkucHJvdG90eXBlLl92ZXJpZnkxPWZ1bmN0aW9uKGYpe2koZi5uZWdhdGl2ZT09PTAsXCJyZWQgd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlc1wiKSxpKGYucmVkLFwicmVkIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKX0sWS5wcm90b3R5cGUuX3ZlcmlmeTI9ZnVuY3Rpb24oZixhKXtpKChmLm5lZ2F0aXZlfGEubmVnYXRpdmUpPT09MCxcInJlZCB3b3JrcyBvbmx5IHdpdGggcG9zaXRpdmVzXCIpLGkoZi5yZWQmJmYucmVkPT09YS5yZWQsXCJyZWQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpfSxZLnByb3RvdHlwZS5pbW9kPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLnByaW1lP3RoaXMucHJpbWUuaXJlZHVjZShmKS5fZm9yY2VSZWQodGhpcyk6KHcoZixmLnVtb2QodGhpcy5tKS5fZm9yY2VSZWQodGhpcykpLGYpfSxZLnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24oZil7cmV0dXJuIGYuaXNaZXJvKCk/Zi5jbG9uZSgpOnRoaXMubS5zdWIoZikuX2ZvcmNlUmVkKHRoaXMpfSxZLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oZixhKXt0aGlzLl92ZXJpZnkyKGYsYSk7dmFyIGM9Zi5hZGQoYSk7cmV0dXJuIGMuY21wKHRoaXMubSk+PTAmJmMuaXN1Yih0aGlzLm0pLGMuX2ZvcmNlUmVkKHRoaXMpfSxZLnByb3RvdHlwZS5pYWRkPWZ1bmN0aW9uKGYsYSl7dGhpcy5fdmVyaWZ5MihmLGEpO3ZhciBjPWYuaWFkZChhKTtyZXR1cm4gYy5jbXAodGhpcy5tKT49MCYmYy5pc3ViKHRoaXMubSksY30sWS5wcm90b3R5cGUuc3ViPWZ1bmN0aW9uKGYsYSl7dGhpcy5fdmVyaWZ5MihmLGEpO3ZhciBjPWYuc3ViKGEpO3JldHVybiBjLmNtcG4oMCk8MCYmYy5pYWRkKHRoaXMubSksYy5fZm9yY2VSZWQodGhpcyl9LFkucHJvdG90eXBlLmlzdWI9ZnVuY3Rpb24oZixhKXt0aGlzLl92ZXJpZnkyKGYsYSk7dmFyIGM9Zi5pc3ViKGEpO3JldHVybiBjLmNtcG4oMCk8MCYmYy5pYWRkKHRoaXMubSksY30sWS5wcm90b3R5cGUuc2hsPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIHRoaXMuX3ZlcmlmeTEoZiksdGhpcy5pbW9kKGYudXNobG4oYSkpfSxZLnByb3RvdHlwZS5pbXVsPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIHRoaXMuX3ZlcmlmeTIoZixhKSx0aGlzLmltb2QoZi5pbXVsKGEpKX0sWS5wcm90b3R5cGUubXVsPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIHRoaXMuX3ZlcmlmeTIoZixhKSx0aGlzLmltb2QoZi5tdWwoYSkpfSxZLnByb3RvdHlwZS5pc3FyPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmltdWwoZixmLmNsb25lKCkpfSxZLnByb3RvdHlwZS5zcXI9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMubXVsKGYsZil9LFkucHJvdG90eXBlLnNxcnQ9ZnVuY3Rpb24oZil7aWYoZi5pc1plcm8oKSlyZXR1cm4gZi5jbG9uZSgpO3ZhciBhPXRoaXMubS5hbmRsbigzKTtpZihpKGElMj09PTEpLGE9PT0zKXt2YXIgYz10aGlzLm0uYWRkKG5ldyBvKDEpKS5pdXNocm4oMik7cmV0dXJuIHRoaXMucG93KGYsYyl9Zm9yKHZhciBkPXRoaXMubS5zdWJuKDEpLGc9MDshZC5pc1plcm8oKSYmZC5hbmRsbigxKT09PTA7KWcrKyxkLml1c2hybigxKTtpKCFkLmlzWmVybygpKTt2YXIgeD1uZXcgbygxKS50b1JlZCh0aGlzKSxNPXgucmVkTmVnKCksbD10aGlzLm0uc3VibigxKS5pdXNocm4oMSkscz10aGlzLm0uYml0TGVuZ3RoKCk7Zm9yKHM9bmV3IG8oMipzKnMpLnRvUmVkKHRoaXMpO3RoaXMucG93KHMsbCkuY21wKE0pIT09MDspcy5yZWRJQWRkKE0pO2Zvcih2YXIgdj10aGlzLnBvdyhzLGQpLGs9dGhpcy5wb3coZixkLmFkZG4oMSkuaXVzaHJuKDEpKSx1PXRoaXMucG93KGYsZCksRT1nO3UuY21wKHgpIT09MDspe2Zvcih2YXIgXz11LEI9MDtfLmNtcCh4KSE9PTA7QisrKV89Xy5yZWRTcXIoKTtpKEI8RSk7dmFyIFI9dGhpcy5wb3codixuZXcgbygxKS5pdXNobG4oRS1CLTEpKTtrPWsucmVkTXVsKFIpLHY9Ui5yZWRTcXIoKSx1PXUucmVkTXVsKHYpLEU9Qn1yZXR1cm4ga30sWS5wcm90b3R5cGUuaW52bT1mdW5jdGlvbihmKXt2YXIgYT1mLl9pbnZtcCh0aGlzLm0pO3JldHVybiBhLm5lZ2F0aXZlIT09MD8oYS5uZWdhdGl2ZT0wLHRoaXMuaW1vZChhKS5yZWROZWcoKSk6dGhpcy5pbW9kKGEpfSxZLnByb3RvdHlwZS5wb3c9ZnVuY3Rpb24oZixhKXtpZihhLmlzWmVybygpKXJldHVybiBuZXcgbygxKS50b1JlZCh0aGlzKTtpZihhLmNtcG4oMSk9PT0wKXJldHVybiBmLmNsb25lKCk7dmFyIGM9NCxkPW5ldyBBcnJheSgxPDxjKTtkWzBdPW5ldyBvKDEpLnRvUmVkKHRoaXMpLGRbMV09Zjtmb3IodmFyIGc9MjtnPGQubGVuZ3RoO2crKylkW2ddPXRoaXMubXVsKGRbZy0xXSxmKTt2YXIgeD1kWzBdLE09MCxsPTAscz1hLmJpdExlbmd0aCgpJTI2O2ZvcihzPT09MCYmKHM9MjYpLGc9YS5sZW5ndGgtMTtnPj0wO2ctLSl7Zm9yKHZhciB2PWEud29yZHNbZ10saz1zLTE7az49MDtrLS0pe3ZhciB1PXY+PmsmMTtpZih4IT09ZFswXSYmKHg9dGhpcy5zcXIoeCkpLHU9PT0wJiZNPT09MCl7bD0wO2NvbnRpbnVlfU08PD0xLE18PXUsbCsrLCEobCE9PWMmJihnIT09MHx8ayE9PTApKSYmKHg9dGhpcy5tdWwoeCxkW01dKSxsPTAsTT0wKX1zPTI2fXJldHVybiB4fSxZLnByb3RvdHlwZS5jb252ZXJ0VG89ZnVuY3Rpb24oZil7dmFyIGE9Zi51bW9kKHRoaXMubSk7cmV0dXJuIGE9PT1mP2EuY2xvbmUoKTphfSxZLnByb3RvdHlwZS5jb252ZXJ0RnJvbT1mdW5jdGlvbihmKXt2YXIgYT1mLmNsb25lKCk7cmV0dXJuIGEucmVkPW51bGwsYX0sby5tb250PWZ1bmN0aW9uKGYpe3JldHVybiBuZXcgVnQoZil9O2Z1bmN0aW9uIFZ0KEEpe1kuY2FsbCh0aGlzLEEpLHRoaXMuc2hpZnQ9dGhpcy5tLmJpdExlbmd0aCgpLHRoaXMuc2hpZnQlMjYhPT0wJiYodGhpcy5zaGlmdCs9MjYtdGhpcy5zaGlmdCUyNiksdGhpcy5yPW5ldyBvKDEpLml1c2hsbih0aGlzLnNoaWZ0KSx0aGlzLnIyPXRoaXMuaW1vZCh0aGlzLnIuc3FyKCkpLHRoaXMucmludj10aGlzLnIuX2ludm1wKHRoaXMubSksdGhpcy5taW52PXRoaXMucmludi5tdWwodGhpcy5yKS5pc3VibigxKS5kaXYodGhpcy5tKSx0aGlzLm1pbnY9dGhpcy5taW52LnVtb2QodGhpcy5yKSx0aGlzLm1pbnY9dGhpcy5yLnN1Yih0aGlzLm1pbnYpfW4oVnQsWSksVnQucHJvdG90eXBlLmNvbnZlcnRUbz1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5pbW9kKGYudXNobG4odGhpcy5zaGlmdCkpfSxWdC5wcm90b3R5cGUuY29udmVydEZyb209ZnVuY3Rpb24oZil7dmFyIGE9dGhpcy5pbW9kKGYubXVsKHRoaXMucmludikpO3JldHVybiBhLnJlZD1udWxsLGF9LFZ0LnByb3RvdHlwZS5pbXVsPWZ1bmN0aW9uKGYsYSl7aWYoZi5pc1plcm8oKXx8YS5pc1plcm8oKSlyZXR1cm4gZi53b3Jkc1swXT0wLGYubGVuZ3RoPTEsZjt2YXIgYz1mLmltdWwoYSksZD1jLm1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm1pbnYpLmltYXNrbih0aGlzLnNoaWZ0KS5tdWwodGhpcy5tKSxnPWMuaXN1YihkKS5pdXNocm4odGhpcy5zaGlmdCkseD1nO3JldHVybiBnLmNtcCh0aGlzLm0pPj0wP3g9Zy5pc3ViKHRoaXMubSk6Zy5jbXBuKDApPDAmJih4PWcuaWFkZCh0aGlzLm0pKSx4Ll9mb3JjZVJlZCh0aGlzKX0sVnQucHJvdG90eXBlLm11bD1mdW5jdGlvbihmLGEpe2lmKGYuaXNaZXJvKCl8fGEuaXNaZXJvKCkpcmV0dXJuIG5ldyBvKDApLl9mb3JjZVJlZCh0aGlzKTt2YXIgYz1mLm11bChhKSxkPWMubWFza24odGhpcy5zaGlmdCkubXVsKHRoaXMubWludikuaW1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm0pLGc9Yy5pc3ViKGQpLml1c2hybih0aGlzLnNoaWZ0KSx4PWc7cmV0dXJuIGcuY21wKHRoaXMubSk+PTA/eD1nLmlzdWIodGhpcy5tKTpnLmNtcG4oMCk8MCYmKHg9Zy5pYWRkKHRoaXMubSkpLHguX2ZvcmNlUmVkKHRoaXMpfSxWdC5wcm90b3R5cGUuaW52bT1mdW5jdGlvbihmKXt2YXIgYT10aGlzLmltb2QoZi5faW52bXAodGhpcy5tKS5tdWwodGhpcy5yMikpO3JldHVybiBhLl9mb3JjZVJlZCh0aGlzKX19KShlLE9uKX0pKExuKTt2YXIgSz1Mbi5leHBvcnRzO2NvbnN0IGpuPVwiYmlnbnVtYmVyLzUuNy4wXCI7dmFyIFJyPUsuQk47Y29uc3QgQWU9bmV3IEwoam4pLHdpPXt9LFFuPTkwMDcxOTkyNTQ3NDA5OTE7ZnVuY3Rpb24gQzAoZSl7cmV0dXJuIGUhPW51bGwmJihWLmlzQmlnTnVtYmVyKGUpfHx0eXBlb2YgZT09XCJudW1iZXJcIiYmZSUxPT09MHx8dHlwZW9mIGU9PVwic3RyaW5nXCImJiEhZS5tYXRjaCgvXi0/WzAtOV0rJC8pfHxRdChlKXx8dHlwZW9mIGU9PVwiYmlnaW50XCJ8fGlyKGUpKX1sZXQgSm49ITE7Y2xhc3MgVntjb25zdHJ1Y3Rvcih0LHIpe3QhPT13aSYmQWUudGhyb3dFcnJvcihcImNhbm5vdCBjYWxsIGNvbnN0cnVjdG9yIGRpcmVjdGx5OyB1c2UgQmlnTnVtYmVyLmZyb21cIixMLmVycm9ycy5VTlNVUFBPUlRFRF9PUEVSQVRJT04se29wZXJhdGlvbjpcIm5ldyAoQmlnTnVtYmVyKVwifSksdGhpcy5faGV4PXIsdGhpcy5faXNCaWdOdW1iZXI9ITAsT2JqZWN0LmZyZWV6ZSh0aGlzKX1mcm9tVHdvcyh0KXtyZXR1cm4gTHQoaih0aGlzKS5mcm9tVHdvcyh0KSl9dG9Ud29zKHQpe3JldHVybiBMdChqKHRoaXMpLnRvVHdvcyh0KSl9YWJzKCl7cmV0dXJuIHRoaXMuX2hleFswXT09PVwiLVwiP1YuZnJvbSh0aGlzLl9oZXguc3Vic3RyaW5nKDEpKTp0aGlzfWFkZCh0KXtyZXR1cm4gTHQoaih0aGlzKS5hZGQoaih0KSkpfXN1Yih0KXtyZXR1cm4gTHQoaih0aGlzKS5zdWIoaih0KSkpfWRpdih0KXtyZXR1cm4gVi5mcm9tKHQpLmlzWmVybygpJiZXdChcImRpdmlzaW9uLWJ5LXplcm9cIixcImRpdlwiKSxMdChqKHRoaXMpLmRpdihqKHQpKSl9bXVsKHQpe3JldHVybiBMdChqKHRoaXMpLm11bChqKHQpKSl9bW9kKHQpe2NvbnN0IHI9aih0KTtyZXR1cm4gci5pc05lZygpJiZXdChcImRpdmlzaW9uLWJ5LXplcm9cIixcIm1vZFwiKSxMdChqKHRoaXMpLnVtb2QocikpfXBvdyh0KXtjb25zdCByPWoodCk7cmV0dXJuIHIuaXNOZWcoKSYmV3QoXCJuZWdhdGl2ZS1wb3dlclwiLFwicG93XCIpLEx0KGoodGhpcykucG93KHIpKX1hbmQodCl7Y29uc3Qgcj1qKHQpO3JldHVybih0aGlzLmlzTmVnYXRpdmUoKXx8ci5pc05lZygpKSYmV3QoXCJ1bmJvdW5kLWJpdHdpc2UtcmVzdWx0XCIsXCJhbmRcIiksTHQoaih0aGlzKS5hbmQocikpfW9yKHQpe2NvbnN0IHI9aih0KTtyZXR1cm4odGhpcy5pc05lZ2F0aXZlKCl8fHIuaXNOZWcoKSkmJld0KFwidW5ib3VuZC1iaXR3aXNlLXJlc3VsdFwiLFwib3JcIiksTHQoaih0aGlzKS5vcihyKSl9eG9yKHQpe2NvbnN0IHI9aih0KTtyZXR1cm4odGhpcy5pc05lZ2F0aXZlKCl8fHIuaXNOZWcoKSkmJld0KFwidW5ib3VuZC1iaXR3aXNlLXJlc3VsdFwiLFwieG9yXCIpLEx0KGoodGhpcykueG9yKHIpKX1tYXNrKHQpe3JldHVybih0aGlzLmlzTmVnYXRpdmUoKXx8dDwwKSYmV3QoXCJuZWdhdGl2ZS13aWR0aFwiLFwibWFza1wiKSxMdChqKHRoaXMpLm1hc2tuKHQpKX1zaGwodCl7cmV0dXJuKHRoaXMuaXNOZWdhdGl2ZSgpfHx0PDApJiZXdChcIm5lZ2F0aXZlLXdpZHRoXCIsXCJzaGxcIiksTHQoaih0aGlzKS5zaGxuKHQpKX1zaHIodCl7cmV0dXJuKHRoaXMuaXNOZWdhdGl2ZSgpfHx0PDApJiZXdChcIm5lZ2F0aXZlLXdpZHRoXCIsXCJzaHJcIiksTHQoaih0aGlzKS5zaHJuKHQpKX1lcSh0KXtyZXR1cm4gaih0aGlzKS5lcShqKHQpKX1sdCh0KXtyZXR1cm4gaih0aGlzKS5sdChqKHQpKX1sdGUodCl7cmV0dXJuIGoodGhpcykubHRlKGoodCkpfWd0KHQpe3JldHVybiBqKHRoaXMpLmd0KGoodCkpfWd0ZSh0KXtyZXR1cm4gaih0aGlzKS5ndGUoaih0KSl9aXNOZWdhdGl2ZSgpe3JldHVybiB0aGlzLl9oZXhbMF09PT1cIi1cIn1pc1plcm8oKXtyZXR1cm4gaih0aGlzKS5pc1plcm8oKX10b051bWJlcigpe3RyeXtyZXR1cm4gaih0aGlzKS50b051bWJlcigpfWNhdGNoe1d0KFwib3ZlcmZsb3dcIixcInRvTnVtYmVyXCIsdGhpcy50b1N0cmluZygpKX1yZXR1cm4gbnVsbH10b0JpZ0ludCgpe3RyeXtyZXR1cm4gQmlnSW50KHRoaXMudG9TdHJpbmcoKSl9Y2F0Y2h7fXJldHVybiBBZS50aHJvd0Vycm9yKFwidGhpcyBwbGF0Zm9ybSBkb2VzIG5vdCBzdXBwb3J0IEJpZ0ludFwiLEwuZXJyb3JzLlVOU1VQUE9SVEVEX09QRVJBVElPTix7dmFsdWU6dGhpcy50b1N0cmluZygpfSl9dG9TdHJpbmcoKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4wJiYoYXJndW1lbnRzWzBdPT09MTA/Sm58fChKbj0hMCxBZS53YXJuKFwiQmlnTnVtYmVyLnRvU3RyaW5nIGRvZXMgbm90IGFjY2VwdCBhbnkgcGFyYW1ldGVyczsgYmFzZS0xMCBpcyBhc3N1bWVkXCIpKTphcmd1bWVudHNbMF09PT0xNj9BZS50aHJvd0Vycm9yKFwiQmlnTnVtYmVyLnRvU3RyaW5nIGRvZXMgbm90IGFjY2VwdCBhbnkgcGFyYW1ldGVyczsgdXNlIGJpZ051bWJlci50b0hleFN0cmluZygpXCIsTC5lcnJvcnMuVU5FWFBFQ1RFRF9BUkdVTUVOVCx7fSk6QWUudGhyb3dFcnJvcihcIkJpZ051bWJlci50b1N0cmluZyBkb2VzIG5vdCBhY2NlcHQgcGFyYW1ldGVyc1wiLEwuZXJyb3JzLlVORVhQRUNURURfQVJHVU1FTlQse30pKSxqKHRoaXMpLnRvU3RyaW5nKDEwKX10b0hleFN0cmluZygpe3JldHVybiB0aGlzLl9oZXh9dG9KU09OKHQpe3JldHVybnt0eXBlOlwiQmlnTnVtYmVyXCIsaGV4OnRoaXMudG9IZXhTdHJpbmcoKX19c3RhdGljIGZyb20odCl7aWYodCBpbnN0YW5jZW9mIFYpcmV0dXJuIHQ7aWYodHlwZW9mIHQ9PVwic3RyaW5nXCIpcmV0dXJuIHQubWF0Y2goL14tPzB4WzAtOWEtZl0rJC9pKT9uZXcgVih3aSx2cih0KSk6dC5tYXRjaCgvXi0/WzAtOV0rJC8pP25ldyBWKHdpLHZyKG5ldyBScih0KSkpOkFlLnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgQmlnTnVtYmVyIHN0cmluZ1wiLFwidmFsdWVcIix0KTtpZih0eXBlb2YgdD09XCJudW1iZXJcIilyZXR1cm4gdCUxJiZXdChcInVuZGVyZmxvd1wiLFwiQmlnTnVtYmVyLmZyb21cIix0KSwodD49UW58fHQ8PS1RbikmJld0KFwib3ZlcmZsb3dcIixcIkJpZ051bWJlci5mcm9tXCIsdCksVi5mcm9tKFN0cmluZyh0KSk7Y29uc3Qgcj10O2lmKHR5cGVvZiByPT1cImJpZ2ludFwiKXJldHVybiBWLmZyb20oci50b1N0cmluZygpKTtpZihpcihyKSlyZXR1cm4gVi5mcm9tKEt0KHIpKTtpZihyKWlmKHIudG9IZXhTdHJpbmcpe2NvbnN0IGk9ci50b0hleFN0cmluZygpO2lmKHR5cGVvZiBpPT1cInN0cmluZ1wiKXJldHVybiBWLmZyb20oaSl9ZWxzZXtsZXQgaT1yLl9oZXg7aWYoaT09bnVsbCYmci50eXBlPT09XCJCaWdOdW1iZXJcIiYmKGk9ci5oZXgpLHR5cGVvZiBpPT1cInN0cmluZ1wiJiYoUXQoaSl8fGlbMF09PT1cIi1cIiYmUXQoaS5zdWJzdHJpbmcoMSkpKSlyZXR1cm4gVi5mcm9tKGkpfXJldHVybiBBZS50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIEJpZ051bWJlciB2YWx1ZVwiLFwidmFsdWVcIix0KX1zdGF0aWMgaXNCaWdOdW1iZXIodCl7cmV0dXJuISEodCYmdC5faXNCaWdOdW1iZXIpfX1mdW5jdGlvbiB2cihlKXtpZih0eXBlb2YgZSE9XCJzdHJpbmdcIilyZXR1cm4gdnIoZS50b1N0cmluZygxNikpO2lmKGVbMF09PT1cIi1cIilyZXR1cm4gZT1lLnN1YnN0cmluZygxKSxlWzBdPT09XCItXCImJkFlLnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgaGV4XCIsXCJ2YWx1ZVwiLGUpLGU9dnIoZSksZT09PVwiMHgwMFwiP2U6XCItXCIrZTtpZihlLnN1YnN0cmluZygwLDIpIT09XCIweFwiJiYoZT1cIjB4XCIrZSksZT09PVwiMHhcIilyZXR1cm5cIjB4MDBcIjtmb3IoZS5sZW5ndGglMiYmKGU9XCIweDBcIitlLnN1YnN0cmluZygyKSk7ZS5sZW5ndGg+NCYmZS5zdWJzdHJpbmcoMCw0KT09PVwiMHgwMFwiOyllPVwiMHhcIitlLnN1YnN0cmluZyg0KTtyZXR1cm4gZX1mdW5jdGlvbiBMdChlKXtyZXR1cm4gVi5mcm9tKHZyKGUpKX1mdW5jdGlvbiBqKGUpe2NvbnN0IHQ9Vi5mcm9tKGUpLnRvSGV4U3RyaW5nKCk7cmV0dXJuIHRbMF09PT1cIi1cIj9uZXcgUnIoXCItXCIrdC5zdWJzdHJpbmcoMyksMTYpOm5ldyBScih0LnN1YnN0cmluZygyKSwxNil9ZnVuY3Rpb24gV3QoZSx0LHIpe2NvbnN0IGk9e2ZhdWx0OmUsb3BlcmF0aW9uOnR9O3JldHVybiByIT1udWxsJiYoaS52YWx1ZT1yKSxBZS50aHJvd0Vycm9yKGUsTC5lcnJvcnMuTlVNRVJJQ19GQVVMVCxpKX1mdW5jdGlvbiBSMChlKXtyZXR1cm4gbmV3IFJyKGUsMzYpLnRvU3RyaW5nKDE2KX1jb25zdCBIdD1uZXcgTChqbiksbXI9e30sR249Vi5mcm9tKDApLFluPVYuZnJvbSgtMSk7ZnVuY3Rpb24gVm4oZSx0LHIsaSl7Y29uc3Qgbj17ZmF1bHQ6dCxvcGVyYXRpb246cn07cmV0dXJuIGkhPT12b2lkIDAmJihuLnZhbHVlPWkpLEh0LnRocm93RXJyb3IoZSxMLmVycm9ycy5OVU1FUklDX0ZBVUxULG4pfWxldCBncj1cIjBcIjtmb3IoO2dyLmxlbmd0aDwyNTY7KWdyKz1ncjtmdW5jdGlvbiB4aShlKXtpZih0eXBlb2YgZSE9XCJudW1iZXJcIil0cnl7ZT1WLmZyb20oZSkudG9OdW1iZXIoKX1jYXRjaHt9cmV0dXJuIHR5cGVvZiBlPT1cIm51bWJlclwiJiZlPj0wJiZlPD0yNTYmJiEoZSUxKT9cIjFcIitnci5zdWJzdHJpbmcoMCxlKTpIdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGRlY2ltYWwgc2l6ZVwiLFwiZGVjaW1hbHNcIixlKX1mdW5jdGlvbiBNaShlLHQpe3Q9PW51bGwmJih0PTApO2NvbnN0IHI9eGkodCk7ZT1WLmZyb20oZSk7Y29uc3QgaT1lLmx0KEduKTtpJiYoZT1lLm11bChZbikpO2xldCBuPWUubW9kKHIpLnRvU3RyaW5nKCk7Zm9yKDtuLmxlbmd0aDxyLmxlbmd0aC0xOyluPVwiMFwiK247bj1uLm1hdGNoKC9eKFswLTldKlsxLTldfDApKDAqKS8pWzFdO2NvbnN0IG89ZS5kaXYocikudG9TdHJpbmcoKTtyZXR1cm4gci5sZW5ndGg9PT0xP2U9bzplPW8rXCIuXCIrbixpJiYoZT1cIi1cIitlKSxlfWZ1bmN0aW9uIGJlKGUsdCl7dD09bnVsbCYmKHQ9MCk7Y29uc3Qgcj14aSh0KTsodHlwZW9mIGUhPVwic3RyaW5nXCJ8fCFlLm1hdGNoKC9eLT9bMC05Ll0rJC8pKSYmSHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBkZWNpbWFsIHZhbHVlXCIsXCJ2YWx1ZVwiLGUpO2NvbnN0IGk9ZS5zdWJzdHJpbmcoMCwxKT09PVwiLVwiO2kmJihlPWUuc3Vic3RyaW5nKDEpKSxlPT09XCIuXCImJkh0LnRocm93QXJndW1lbnRFcnJvcihcIm1pc3NpbmcgdmFsdWVcIixcInZhbHVlXCIsZSk7Y29uc3Qgbj1lLnNwbGl0KFwiLlwiKTtuLmxlbmd0aD4yJiZIdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJ0b28gbWFueSBkZWNpbWFsIHBvaW50c1wiLFwidmFsdWVcIixlKTtsZXQgbz1uWzBdLGg9blsxXTtmb3Iob3x8KG89XCIwXCIpLGh8fChoPVwiMFwiKTtoW2gubGVuZ3RoLTFdPT09XCIwXCI7KWg9aC5zdWJzdHJpbmcoMCxoLmxlbmd0aC0xKTtmb3IoaC5sZW5ndGg+ci5sZW5ndGgtMSYmVm4oXCJmcmFjdGlvbmFsIGNvbXBvbmVudCBleGNlZWRzIGRlY2ltYWxzXCIsXCJ1bmRlcmZsb3dcIixcInBhcnNlRml4ZWRcIiksaD09PVwiXCImJihoPVwiMFwiKTtoLmxlbmd0aDxyLmxlbmd0aC0xOyloKz1cIjBcIjtjb25zdCBwPVYuZnJvbShvKSxiPVYuZnJvbShoKTtsZXQgbT1wLm11bChyKS5hZGQoYik7cmV0dXJuIGkmJihtPW0ubXVsKFluKSksbX1jbGFzcyBkcntjb25zdHJ1Y3Rvcih0LHIsaSxuKXt0IT09bXImJkh0LnRocm93RXJyb3IoXCJjYW5ub3QgdXNlIEZpeGVkRm9ybWF0IGNvbnN0cnVjdG9yOyB1c2UgRml4ZWRGb3JtYXQuZnJvbVwiLEwuZXJyb3JzLlVOU1VQUE9SVEVEX09QRVJBVElPTix7b3BlcmF0aW9uOlwibmV3IEZpeGVkRm9ybWF0XCJ9KSx0aGlzLnNpZ25lZD1yLHRoaXMud2lkdGg9aSx0aGlzLmRlY2ltYWxzPW4sdGhpcy5uYW1lPShyP1wiXCI6XCJ1XCIpK1wiZml4ZWRcIitTdHJpbmcoaSkrXCJ4XCIrU3RyaW5nKG4pLHRoaXMuX211bHRpcGxpZXI9eGkobiksT2JqZWN0LmZyZWV6ZSh0aGlzKX1zdGF0aWMgZnJvbSh0KXtpZih0IGluc3RhbmNlb2YgZHIpcmV0dXJuIHQ7dHlwZW9mIHQ9PVwibnVtYmVyXCImJih0PWBmaXhlZDEyOHgke3R9YCk7bGV0IHI9ITAsaT0xMjgsbj0xODtpZih0eXBlb2YgdD09XCJzdHJpbmdcIil7aWYodCE9PVwiZml4ZWRcIilpZih0PT09XCJ1Zml4ZWRcIilyPSExO2Vsc2V7Y29uc3Qgbz10Lm1hdGNoKC9eKHU/KWZpeGVkKFswLTldKyl4KFswLTldKykkLyk7b3x8SHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBmaXhlZCBmb3JtYXRcIixcImZvcm1hdFwiLHQpLHI9b1sxXSE9PVwidVwiLGk9cGFyc2VJbnQob1syXSksbj1wYXJzZUludChvWzNdKX19ZWxzZSBpZih0KXtjb25zdCBvPShoLHAsYik9PnRbaF09PW51bGw/YjoodHlwZW9mIHRbaF0hPT1wJiZIdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGZpeGVkIGZvcm1hdCAoXCIraCtcIiBub3QgXCIrcCtcIilcIixcImZvcm1hdC5cIitoLHRbaF0pLHRbaF0pO3I9byhcInNpZ25lZFwiLFwiYm9vbGVhblwiLHIpLGk9byhcIndpZHRoXCIsXCJudW1iZXJcIixpKSxuPW8oXCJkZWNpbWFsc1wiLFwibnVtYmVyXCIsbil9cmV0dXJuIGklOCYmSHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBmaXhlZCBmb3JtYXQgd2lkdGggKG5vdCBieXRlIGFsaWduZWQpXCIsXCJmb3JtYXQud2lkdGhcIixpKSxuPjgwJiZIdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGZpeGVkIGZvcm1hdCAoZGVjaW1hbHMgdG9vIGxhcmdlKVwiLFwiZm9ybWF0LmRlY2ltYWxzXCIsbiksbmV3IGRyKG1yLHIsaSxuKX19Y2xhc3MgVXR7Y29uc3RydWN0b3IodCxyLGksbil7dCE9PW1yJiZIdC50aHJvd0Vycm9yKFwiY2Fubm90IHVzZSBGaXhlZE51bWJlciBjb25zdHJ1Y3RvcjsgdXNlIEZpeGVkTnVtYmVyLmZyb21cIixMLmVycm9ycy5VTlNVUFBPUlRFRF9PUEVSQVRJT04se29wZXJhdGlvbjpcIm5ldyBGaXhlZEZvcm1hdFwifSksdGhpcy5mb3JtYXQ9bix0aGlzLl9oZXg9cix0aGlzLl92YWx1ZT1pLHRoaXMuX2lzRml4ZWROdW1iZXI9ITAsT2JqZWN0LmZyZWV6ZSh0aGlzKX1fY2hlY2tGb3JtYXQodCl7dGhpcy5mb3JtYXQubmFtZSE9PXQuZm9ybWF0Lm5hbWUmJkh0LnRocm93QXJndW1lbnRFcnJvcihcImluY29tcGF0aWJsZSBmb3JtYXQ7IHVzZSBmaXhlZE51bWJlci50b0Zvcm1hdFwiLFwib3RoZXJcIix0KX1hZGRVbnNhZmUodCl7dGhpcy5fY2hlY2tGb3JtYXQodCk7Y29uc3Qgcj1iZSh0aGlzLl92YWx1ZSx0aGlzLmZvcm1hdC5kZWNpbWFscyksaT1iZSh0Ll92YWx1ZSx0LmZvcm1hdC5kZWNpbWFscyk7cmV0dXJuIFV0LmZyb21WYWx1ZShyLmFkZChpKSx0aGlzLmZvcm1hdC5kZWNpbWFscyx0aGlzLmZvcm1hdCl9c3ViVW5zYWZlKHQpe3RoaXMuX2NoZWNrRm9ybWF0KHQpO2NvbnN0IHI9YmUodGhpcy5fdmFsdWUsdGhpcy5mb3JtYXQuZGVjaW1hbHMpLGk9YmUodC5fdmFsdWUsdC5mb3JtYXQuZGVjaW1hbHMpO3JldHVybiBVdC5mcm9tVmFsdWUoci5zdWIoaSksdGhpcy5mb3JtYXQuZGVjaW1hbHMsdGhpcy5mb3JtYXQpfW11bFVuc2FmZSh0KXt0aGlzLl9jaGVja0Zvcm1hdCh0KTtjb25zdCByPWJlKHRoaXMuX3ZhbHVlLHRoaXMuZm9ybWF0LmRlY2ltYWxzKSxpPWJlKHQuX3ZhbHVlLHQuZm9ybWF0LmRlY2ltYWxzKTtyZXR1cm4gVXQuZnJvbVZhbHVlKHIubXVsKGkpLmRpdih0aGlzLmZvcm1hdC5fbXVsdGlwbGllciksdGhpcy5mb3JtYXQuZGVjaW1hbHMsdGhpcy5mb3JtYXQpfWRpdlVuc2FmZSh0KXt0aGlzLl9jaGVja0Zvcm1hdCh0KTtjb25zdCByPWJlKHRoaXMuX3ZhbHVlLHRoaXMuZm9ybWF0LmRlY2ltYWxzKSxpPWJlKHQuX3ZhbHVlLHQuZm9ybWF0LmRlY2ltYWxzKTtyZXR1cm4gVXQuZnJvbVZhbHVlKHIubXVsKHRoaXMuZm9ybWF0Ll9tdWx0aXBsaWVyKS5kaXYoaSksdGhpcy5mb3JtYXQuZGVjaW1hbHMsdGhpcy5mb3JtYXQpfWZsb29yKCl7Y29uc3QgdD10aGlzLnRvU3RyaW5nKCkuc3BsaXQoXCIuXCIpO3QubGVuZ3RoPT09MSYmdC5wdXNoKFwiMFwiKTtsZXQgcj1VdC5mcm9tKHRbMF0sdGhpcy5mb3JtYXQpO2NvbnN0IGk9IXRbMV0ubWF0Y2goL14oMCopJC8pO3JldHVybiB0aGlzLmlzTmVnYXRpdmUoKSYmaSYmKHI9ci5zdWJVbnNhZmUoV24udG9Gb3JtYXQoci5mb3JtYXQpKSkscn1jZWlsaW5nKCl7Y29uc3QgdD10aGlzLnRvU3RyaW5nKCkuc3BsaXQoXCIuXCIpO3QubGVuZ3RoPT09MSYmdC5wdXNoKFwiMFwiKTtsZXQgcj1VdC5mcm9tKHRbMF0sdGhpcy5mb3JtYXQpO2NvbnN0IGk9IXRbMV0ubWF0Y2goL14oMCopJC8pO3JldHVybiF0aGlzLmlzTmVnYXRpdmUoKSYmaSYmKHI9ci5hZGRVbnNhZmUoV24udG9Gb3JtYXQoci5mb3JtYXQpKSkscn1yb3VuZCh0KXt0PT1udWxsJiYodD0wKTtjb25zdCByPXRoaXMudG9TdHJpbmcoKS5zcGxpdChcIi5cIik7aWYoci5sZW5ndGg9PT0xJiZyLnB1c2goXCIwXCIpLCh0PDB8fHQ+ODB8fHQlMSkmJkh0LnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgZGVjaW1hbCBjb3VudFwiLFwiZGVjaW1hbHNcIix0KSxyWzFdLmxlbmd0aDw9dClyZXR1cm4gdGhpcztjb25zdCBpPVV0LmZyb20oXCIxXCIrZ3Iuc3Vic3RyaW5nKDAsdCksdGhpcy5mb3JtYXQpLG49TzAudG9Gb3JtYXQodGhpcy5mb3JtYXQpO3JldHVybiB0aGlzLm11bFVuc2FmZShpKS5hZGRVbnNhZmUobikuZmxvb3IoKS5kaXZVbnNhZmUoaSl9aXNaZXJvKCl7cmV0dXJuIHRoaXMuX3ZhbHVlPT09XCIwLjBcInx8dGhpcy5fdmFsdWU9PT1cIjBcIn1pc05lZ2F0aXZlKCl7cmV0dXJuIHRoaXMuX3ZhbHVlWzBdPT09XCItXCJ9dG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5fdmFsdWV9dG9IZXhTdHJpbmcodCl7aWYodD09bnVsbClyZXR1cm4gdGhpcy5faGV4O3QlOCYmSHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBieXRlIHdpZHRoXCIsXCJ3aWR0aFwiLHQpO2NvbnN0IHI9Vi5mcm9tKHRoaXMuX2hleCkuZnJvbVR3b3ModGhpcy5mb3JtYXQud2lkdGgpLnRvVHdvcyh0KS50b0hleFN0cmluZygpO3JldHVybiBvZShyLHQvOCl9dG9VbnNhZmVGbG9hdCgpe3JldHVybiBwYXJzZUZsb2F0KHRoaXMudG9TdHJpbmcoKSl9dG9Gb3JtYXQodCl7cmV0dXJuIFV0LmZyb21TdHJpbmcodGhpcy5fdmFsdWUsdCl9c3RhdGljIGZyb21WYWx1ZSh0LHIsaSl7cmV0dXJuIGk9PW51bGwmJnIhPW51bGwmJiFDMChyKSYmKGk9cixyPW51bGwpLHI9PW51bGwmJihyPTApLGk9PW51bGwmJihpPVwiZml4ZWRcIiksVXQuZnJvbVN0cmluZyhNaSh0LHIpLGRyLmZyb20oaSkpfXN0YXRpYyBmcm9tU3RyaW5nKHQscil7cj09bnVsbCYmKHI9XCJmaXhlZFwiKTtjb25zdCBpPWRyLmZyb20ociksbj1iZSh0LGkuZGVjaW1hbHMpOyFpLnNpZ25lZCYmbi5sdChHbikmJlZuKFwidW5zaWduZWQgdmFsdWUgY2Fubm90IGJlIG5lZ2F0aXZlXCIsXCJvdmVyZmxvd1wiLFwidmFsdWVcIix0KTtsZXQgbz1udWxsO2kuc2lnbmVkP289bi50b1R3b3MoaS53aWR0aCkudG9IZXhTdHJpbmcoKToobz1uLnRvSGV4U3RyaW5nKCksbz1vZShvLGkud2lkdGgvOCkpO2NvbnN0IGg9TWkobixpLmRlY2ltYWxzKTtyZXR1cm4gbmV3IFV0KG1yLG8saCxpKX1zdGF0aWMgZnJvbUJ5dGVzKHQscil7cj09bnVsbCYmKHI9XCJmaXhlZFwiKTtjb25zdCBpPWRyLmZyb20ocik7aWYoT3QodCkubGVuZ3RoPmkud2lkdGgvOCl0aHJvdyBuZXcgRXJyb3IoXCJvdmVyZmxvd1wiKTtsZXQgbj1WLmZyb20odCk7aS5zaWduZWQmJihuPW4uZnJvbVR3b3MoaS53aWR0aCkpO2NvbnN0IG89bi50b1R3b3MoKGkuc2lnbmVkPzA6MSkraS53aWR0aCkudG9IZXhTdHJpbmcoKSxoPU1pKG4saS5kZWNpbWFscyk7cmV0dXJuIG5ldyBVdChtcixvLGgsaSl9c3RhdGljIGZyb20odCxyKXtpZih0eXBlb2YgdD09XCJzdHJpbmdcIilyZXR1cm4gVXQuZnJvbVN0cmluZyh0LHIpO2lmKGlyKHQpKXJldHVybiBVdC5mcm9tQnl0ZXModCxyKTt0cnl7cmV0dXJuIFV0LmZyb21WYWx1ZSh0LDAscil9Y2F0Y2goaSl7aWYoaS5jb2RlIT09TC5lcnJvcnMuSU5WQUxJRF9BUkdVTUVOVCl0aHJvdyBpfXJldHVybiBIdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIEZpeGVkTnVtYmVyIHZhbHVlXCIsXCJ2YWx1ZVwiLHQpfXN0YXRpYyBpc0ZpeGVkTnVtYmVyKHQpe3JldHVybiEhKHQmJnQuX2lzRml4ZWROdW1iZXIpfX1jb25zdCBXbj1VdC5mcm9tKDEpLE8wPVV0LmZyb20oXCIwLjVcIiksUDA9XCJzdHJpbmdzLzUuNy4wXCIsWG49bmV3IEwoUDApO3ZhciBPcjsoZnVuY3Rpb24oZSl7ZS5jdXJyZW50PVwiXCIsZS5ORkM9XCJORkNcIixlLk5GRD1cIk5GRFwiLGUuTkZLQz1cIk5GS0NcIixlLk5GS0Q9XCJORktEXCJ9KShPcnx8KE9yPXt9KSk7dmFyIG5yOyhmdW5jdGlvbihlKXtlLlVORVhQRUNURURfQ09OVElOVUU9XCJ1bmV4cGVjdGVkIGNvbnRpbnVhdGlvbiBieXRlXCIsZS5CQURfUFJFRklYPVwiYmFkIGNvZGVwb2ludCBwcmVmaXhcIixlLk9WRVJSVU49XCJzdHJpbmcgb3ZlcnJ1blwiLGUuTUlTU0lOR19DT05USU5VRT1cIm1pc3NpbmcgY29udGludWF0aW9uIGJ5dGVcIixlLk9VVF9PRl9SQU5HRT1cIm91dCBvZiBVVEYtOCByYW5nZVwiLGUuVVRGMTZfU1VSUk9HQVRFPVwiVVRGLTE2IHN1cnJvZ2F0ZVwiLGUuT1ZFUkxPTkc9XCJvdmVybG9uZyByZXByZXNlbnRhdGlvblwifSkobnJ8fChucj17fSkpO2Z1bmN0aW9uIEQwKGUsdCxyLGksbil7cmV0dXJuIFhuLnRocm93QXJndW1lbnRFcnJvcihgaW52YWxpZCBjb2RlcG9pbnQgYXQgb2Zmc2V0ICR7dH07ICR7ZX1gLFwiYnl0ZXNcIixyKX1mdW5jdGlvbiBabihlLHQscixpLG4pe2lmKGU9PT1uci5CQURfUFJFRklYfHxlPT09bnIuVU5FWFBFQ1RFRF9DT05USU5VRSl7bGV0IG89MDtmb3IobGV0IGg9dCsxO2g8ci5sZW5ndGgmJnJbaF0+PjY9PT0yO2grKylvKys7cmV0dXJuIG99cmV0dXJuIGU9PT1uci5PVkVSUlVOP3IubGVuZ3RoLXQtMTowfWZ1bmN0aW9uIEYwKGUsdCxyLGksbil7cmV0dXJuIGU9PT1uci5PVkVSTE9ORz8oaS5wdXNoKG4pLDApOihpLnB1c2goNjU1MzMpLFpuKGUsdCxyKSl9T2JqZWN0LmZyZWV6ZSh7ZXJyb3I6RDAsaWdub3JlOlpuLHJlcGxhY2U6RjB9KTtmdW5jdGlvbiBFaShlLHQ9T3IuY3VycmVudCl7dCE9T3IuY3VycmVudCYmKFhuLmNoZWNrTm9ybWFsaXplKCksZT1lLm5vcm1hbGl6ZSh0KSk7bGV0IHI9W107Zm9yKGxldCBpPTA7aTxlLmxlbmd0aDtpKyspe2NvbnN0IG49ZS5jaGFyQ29kZUF0KGkpO2lmKG48MTI4KXIucHVzaChuKTtlbHNlIGlmKG48MjA0OClyLnB1c2gobj4+NnwxOTIpLHIucHVzaChuJjYzfDEyOCk7ZWxzZSBpZigobiY2NDUxMik9PTU1Mjk2KXtpKys7Y29uc3Qgbz1lLmNoYXJDb2RlQXQoaSk7aWYoaT49ZS5sZW5ndGh8fChvJjY0NTEyKSE9PTU2MzIwKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgdXRmLTggc3RyaW5nXCIpO2NvbnN0IGg9NjU1MzYrKChuJjEwMjMpPDwxMCkrKG8mMTAyMyk7ci5wdXNoKGg+PjE4fDI0MCksci5wdXNoKGg+PjEyJjYzfDEyOCksci5wdXNoKGg+PjYmNjN8MTI4KSxyLnB1c2goaCY2M3wxMjgpfWVsc2Ugci5wdXNoKG4+PjEyfDIyNCksci5wdXNoKG4+PjYmNjN8MTI4KSxyLnB1c2gobiY2M3wxMjgpfXJldHVybiBPdChyKX1mdW5jdGlvbiBUMChlKXtpZihlLmxlbmd0aCU0IT09MCl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgZGF0YVwiKTtsZXQgdD1bXTtmb3IobGV0IHI9MDtyPGUubGVuZ3RoO3IrPTQpdC5wdXNoKHBhcnNlSW50KGUuc3Vic3RyaW5nKHIscis0KSwxNikpO3JldHVybiB0fWZ1bmN0aW9uIFNpKGUsdCl7dHx8KHQ9ZnVuY3Rpb24obil7cmV0dXJuW3BhcnNlSW50KG4sMTYpXX0pO2xldCByPTAsaT17fTtyZXR1cm4gZS5zcGxpdChcIixcIikuZm9yRWFjaChuPT57bGV0IG89bi5zcGxpdChcIjpcIik7cis9cGFyc2VJbnQob1swXSwxNiksaVtyXT10KG9bMV0pfSksaX1mdW5jdGlvbiAkbihlKXtsZXQgdD0wO3JldHVybiBlLnNwbGl0KFwiLFwiKS5tYXAocj0+e2xldCBpPXIuc3BsaXQoXCItXCIpO2kubGVuZ3RoPT09MT9pWzFdPVwiMFwiOmlbMV09PT1cIlwiJiYoaVsxXT1cIjFcIik7bGV0IG49dCtwYXJzZUludChpWzBdLDE2KTtyZXR1cm4gdD1wYXJzZUludChpWzFdLDE2KSx7bDpuLGg6dH19KX0kbihcIjIyMSwxMy0xYiw1Zi0sNDAtMTAsNTEtZiwxMS0zLDMtMywyLTIsMi00LDgsMiwxNSwyZCwyOC04LDg4LDQ4LDI3LSwzLTUsMTEtMjAsMjctLDgsMjgsMy01LDEyLDE4LGItYSwxYy00LDYtMTYsMi1kLDItMiwyLDFiLTQsMTctOSw4Zi0sMTAsZiwxZi0yLDFjLTM0LDMzLTE0ZSw0LDM2LSwxMy0sNi0yLDFhLWYsNCw5LSwzLSwxNyw4LDItMiw1LSwyLDgtLDMtLDQtOCwyLTMsMyw2LSwxNi02LDItLDctMywzLSwxNyw4LDMsMywzLSwyLDYtMywzLSw0LWEsNSwyLTYsMTAtYiw0LDgsMiw0LDE3LDgsMyw2LSxiLDQsNC0sMi1lLDItNCxiLTEwLDQsOS0sMy0sMTcsOCwzLSw1LSw5LTIsMy0sNC03LDMtMywzLDQtMyxjLTEwLDMsNy0yLDQsNS0yLDMsMiwzLTIsMy0yLDQtMiw5LDQtMyw2LTIsNCw1LTgsMi1lLGQtZCw0LDksNCwxOCxiLDYtMyw4LDQsNS02LDMtOCwzLTMsYi0xMSwzLDksNCwxOCxiLDYtMyw4LDQsNS02LDMtNiwyLDMtMyxiLTExLDMsOSw0LDE4LDExLTMsNy0sNCw1LTgsMi03LDMtMyxiLTExLDMsMTMtMiwxOSxhLDItLDgtMiwyLTMsNywyLDktMTEsNC1iLDNiLTMsMWUtMjQsMywyLSwzLDItLDItNSw1LDgsNCwyLDItLDMsZSw0LSw2LDIsNy0sYi0sMy0yMSw0OSwyMy01LDFjLTMsOSwyNSwxMC0sMi0yZiwyMyw2LDMsOC0yLDUtNSwxYi00NSwyNy05LDJhLSwyLTMsNWItNCw0NS00LDUzLTUsOCw0MCwyLDUtLDgsMiw1LSwyOCwyLDUtLDIwLDIsNS0sOCwyLDUtLDgsOCwxOCwyMCwyLDUtLDgsMjgsMTQtNSwxZC0yMiw1Ni1iLDI3Ny04LDFlLTIsNTItZSxlLDgtYSwxOC04LDE1LWIsZSw0LDMtYiw1ZS0yLGItMTUsMTAsYi01LDU5LTcsMmItNTU1LDlkLTMsNWItNSwxNy0sNy0sMjctLDctLDksMiwyLDIsMjAtLDM2LDEwLGYtLDcsMTQtLDQsYSw1NC0zLDItNiw2LTUsOS0sMWMtMTAsMTMtMWQsMWMtMTQsM2MtLDEwLTYsMzItYiwyNDAtMzAsMjgtMTgsYy0xNCxhMCwxMTUtLDMsNjYtLGItNzYsNSw1LSwxZCwyNCwyLDUtMiwyLDgtLDM1LTIsMTksZi0xMCwxZC0zLDMxMS0zN2YsMWIsNWEtYixkNy0xOSxkLTMsNDEsNTctLDY4LTQsMjktMyw1ZiwyOS0zNywyZS0yLDI1LWMsMmMtMiw0ZS0zLDMwLDc4LTMsNjQtLDIwLDE5YjctNDksNTFhNy01OSw0OGUtMiwzOC03MzgsMmJhNS01YiwyMjJmLSwzYy05NCw4LWIsNi00LDFiLDYsMiwzLDMsNmQtMjAsMTZlLWYsNDEtLDM3LTcsMmUtMiwxMS1mLDUtYiwxOC0sYiwxNCw1LTMsNiw4OC0sMixiZi0yLDctLDctLDctLDQtMiw4LDgtOSw4LTJmZiwyMCw1LWIsMWMtYjQsMjctLDI3LWNiYjEsZjctOSwyOC0yLGI1LTIyMSw1Niw0OCwzLSwyLSwzLSw1LGQsMiw1LDMsNDIsNS0sOSw4LDFkLDUsNiwyLTIsOCwxNTMtMywxMjMtMywzMy0yN2ZkLGE2ZGEtNTEyOCwyMWYtNWRmLDMtZmZmZCwzLWZmZmQsMy1mZmZkLDMtZmZmZCwzLWZmZmQsMy1mZmZkLDMtZmZmZCwzLWZmZmQsMy1mZmZkLDMtZmZmZCwzLWZmZmQsMywyLTFkLDYxLWZmN2RcIiksXCJhZCwzNGYsMTgwNiwxODBiLDE4MGMsMTgwZCwyMDBiLDIwMGMsMjAwZCwyMDYwLGZlZmZcIi5zcGxpdChcIixcIikubWFwKGU9PnBhcnNlSW50KGUsMTYpKSxTaShcImI1OjNiYyxjMzpmZiw3OjczLDI6MjUzLDU6MjU0LDM6MjU2LDE6MjU3LDU6MjU5LDE6MjViLDM6MjYwLDE6MjYzLDI6MjY5LDE6MjY4LDU6MjZmLDE6MjcyLDI6Mjc1LDc6MjgwLDM6MjgzLDU6Mjg4LDM6MjhhLDE6MjhiLDU6MjkyLDNmOjE5NSwxOjFiZiwyOToxOWUsMTI1OjNiOSw4YjozYjIsMTozYjgsMTozYzUsMzozYzYsMTozYzAsMWE6M2JhLDE6M2MxLDE6M2MzLDI6M2I4LDE6M2I1LDFiYzk6M2I5LDFjOjFmNzYsMToxZjc3LGY6MWY3YSwxOjFmN2IsZDoxZjc4LDE6MWY3OSwxOjFmN2MsMToxZjdkLDEwNzo2Myw1OjI1Yiw0OjY4LDE6NjgsMTo2OCwzOjY5LDE6NjksMTo2YywzOjZlLDQ6NzAsMTo3MSwxOjcyLDE6NzIsMTo3Miw3OjdhLDI6M2M5LDI6N2EsMjo2YiwxOmU1LDE6NjIsMTo2MywzOjY1LDE6NjYsMjo2ZCxiOjNiMywxOjNjMCw2OjY0LDFiNTc0OjNiOCwxYTozYzMsMjA6M2I4LDFhOjNjMywyMDozYjgsMWE6M2MzLDIwOjNiOCwxYTozYzMsMjA6M2I4LDFhOjNjM1wiKSxTaShcIjE3OToxLDI6MSwyOjEsNToxLDI6MSxhOjRmLGE6MSw4OjEsMjoxLDI6MSwzOjEsNToxLDM6MSw0OjEsMjoxLDM6MSw0OjEsODoyLDE6MSwyOjIsMToxLDI6MiwyNzoyLDE5NToyNiwyOjI1LDE6MjUsMToyNSwyOjQwLDI6M2YsMTozZiwzMzoxLDExOi02LDE6LTksMWFjNzotM2EsNmQ6LTgsMTotOCwxOi04LDE6LTgsMTotOCwxOi04LDE6LTgsMTotOCw5Oi04LDE6LTgsMTotOCwxOi04LDE6LTgsMTotOCxiOi04LDE6LTgsMTotOCwxOi04LDE6LTgsMTotOCwxOi04LDE6LTgsOTotOCwxOi04LDE6LTgsMTotOCwxOi04LDE6LTgsMTotOCwxOi04LDk6LTgsMTotOCwxOi04LDE6LTgsMTotOCwxOi04LGM6LTgsMjotOCwyOi04LDI6LTgsOTotOCwxOi04LDE6LTgsMTotOCwxOi04LDE6LTgsMTotOCwxOi04LDQ5Oi04LDE6LTgsMTotNGEsMTotNGEsZDotNTYsMTotNTYsMTotNTYsMTotNTYsZDotOCwxOi04LGY6LTgsMTotOCwzOi03XCIpLFNpKFwiZGY6MDA3MzAwNzMsNTE6MDA2OTAzMDcsMTk6MDJCQzAwNkUsYTc6MDA2QTAzMEMsMThhOjAwMjAwM0I5LDE2OjAzQjkwMzA4MDMwMSwyMDowM0M1MDMwODAzMDEsMWQ3OjA1NjUwNTgyLDE5MGY6MDA2ODAzMzEsMTowMDc0MDMwOCwxOjAwNzcwMzBBLDE6MDA3OTAzMEEsMTowMDYxMDJCRSxiNjowM0M1MDMxMywyOjAzQzUwMzEzMDMwMCwyOjAzQzUwMzEzMDMwMSwyOjAzQzUwMzEzMDM0MiwyYToxRjAwMDNCOSwxOjFGMDEwM0I5LDE6MUYwMjAzQjksMToxRjAzMDNCOSwxOjFGMDQwM0I5LDE6MUYwNTAzQjksMToxRjA2MDNCOSwxOjFGMDcwM0I5LDE6MUYwMDAzQjksMToxRjAxMDNCOSwxOjFGMDIwM0I5LDE6MUYwMzAzQjksMToxRjA0MDNCOSwxOjFGMDUwM0I5LDE6MUYwNjAzQjksMToxRjA3MDNCOSwxOjFGMjAwM0I5LDE6MUYyMTAzQjksMToxRjIyMDNCOSwxOjFGMjMwM0I5LDE6MUYyNDAzQjksMToxRjI1MDNCOSwxOjFGMjYwM0I5LDE6MUYyNzAzQjksMToxRjIwMDNCOSwxOjFGMjEwM0I5LDE6MUYyMjAzQjksMToxRjIzMDNCOSwxOjFGMjQwM0I5LDE6MUYyNTAzQjksMToxRjI2MDNCOSwxOjFGMjcwM0I5LDE6MUY2MDAzQjksMToxRjYxMDNCOSwxOjFGNjIwM0I5LDE6MUY2MzAzQjksMToxRjY0MDNCOSwxOjFGNjUwM0I5LDE6MUY2NjAzQjksMToxRjY3MDNCOSwxOjFGNjAwM0I5LDE6MUY2MTAzQjksMToxRjYyMDNCOSwxOjFGNjMwM0I5LDE6MUY2NDAzQjksMToxRjY1MDNCOSwxOjFGNjYwM0I5LDE6MUY2NzAzQjksMzoxRjcwMDNCOSwxOjAzQjEwM0I5LDE6MDNBQzAzQjksMjowM0IxMDM0MiwxOjAzQjEwMzQyMDNCOSw1OjAzQjEwM0I5LDY6MUY3NDAzQjksMTowM0I3MDNCOSwxOjAzQUUwM0I5LDI6MDNCNzAzNDIsMTowM0I3MDM0MjAzQjksNTowM0I3MDNCOSw2OjAzQjkwMzA4MDMwMCwxOjAzQjkwMzA4MDMwMSwzOjAzQjkwMzQyLDE6MDNCOTAzMDgwMzQyLGI6MDNDNTAzMDgwMzAwLDE6MDNDNTAzMDgwMzAxLDE6MDNDMTAzMTMsMjowM0M1MDM0MiwxOjAzQzUwMzA4MDM0MixiOjFGN0MwM0I5LDE6MDNDOTAzQjksMTowM0NFMDNCOSwyOjAzQzkwMzQyLDE6MDNDOTAzNDIwM0I5LDU6MDNDOTAzQjksYWM6MDA3MjAwNzMsNWI6MDBCMDAwNjMsNjowMEIwMDA2NixkOjAwNkUwMDZGLGE6MDA3MzAwNkQsMTowMDc0MDA2NTAwNkMsMTowMDc0MDA2RCwxMjRmOjAwNjgwMDcwMDA2MSwyOjAwNjEwMDc1LDI6MDA2RjAwNzYsYjowMDcwMDA2MSwxOjAwNkUwMDYxLDE6MDNCQzAwNjEsMTowMDZEMDA2MSwxOjAwNkIwMDYxLDE6MDA2QjAwNjIsMTowMDZEMDA2MiwxOjAwNjcwMDYyLDM6MDA3MDAwNjYsMTowMDZFMDA2NiwxOjAzQkMwMDY2LDQ6MDA2ODAwN0EsMTowMDZCMDA2ODAwN0EsMTowMDZEMDA2ODAwN0EsMTowMDY3MDA2ODAwN0EsMTowMDc0MDA2ODAwN0EsMTU6MDA3MDAwNjEsMTowMDZCMDA3MDAwNjEsMTowMDZEMDA3MDAwNjEsMTowMDY3MDA3MDAwNjEsODowMDcwMDA3NiwxOjAwNkUwMDc2LDE6MDNCQzAwNzYsMTowMDZEMDA3NiwxOjAwNkIwMDc2LDE6MDA2RDAwNzYsMTowMDcwMDA3NywxOjAwNkUwMDc3LDE6MDNCQzAwNzcsMTowMDZEMDA3NywxOjAwNkIwMDc3LDE6MDA2RDAwNzcsMTowMDZCMDNDOSwxOjAwNkQwM0M5LDI6MDA2MjAwNzEsMzowMDYzMjIxNTAwNkIwMDY3LDE6MDA2MzAwNkYwMDJFLDE6MDA2NDAwNjIsMTowMDY3MDA3OSwyOjAwNjgwMDcwLDI6MDA2QjAwNkIsMTowMDZCMDA2RCw5OjAwNzAwMDY4LDI6MDA3MDAwNzAwMDZELDE6MDA3MDAwNzIsMjowMDczMDA3NiwxOjAwNzcwMDYyLGM3MjM6MDA2NjAwNjYsMTowMDY2MDA2OSwxOjAwNjYwMDZDLDE6MDA2NjAwNjYwMDY5LDE6MDA2NjAwNjYwMDZDLDE6MDA3MzAwNzQsMTowMDczMDA3NCxkOjA1NzQwNTc2LDE6MDU3NDA1NjUsMTowNTc0MDU2QiwxOjA1N0UwNTc2LDE6MDU3NDA1NkRcIixUMCksJG4oXCI4MC0yMCwyYTAtLDM5YywzMixmNzEsMThlLDdmMi1mLDE5LTcsMzAtNCw3LTUsZjgxLWIsNSxhODAwLTIwZmYsNGQxLTFmLDExMCxmYS02LGQxNzQtNywyZTg0LSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSwyLDFmLTVmLGZmN2YtMjAwMDFcIik7Y29uc3QgdGY9XCJoYXNoLzUuNy4wXCI7ZnVuY3Rpb24gVTAoZSl7ZT1hdG9iKGUpO2NvbnN0IHQ9W107Zm9yKGxldCByPTA7cjxlLmxlbmd0aDtyKyspdC5wdXNoKGUuY2hhckNvZGVBdChyKSk7cmV0dXJuIE90KHQpfWZ1bmN0aW9uIGVmKGUsdCl7dD09bnVsbCYmKHQ9MSk7Y29uc3Qgcj1bXSxpPXIuZm9yRWFjaCxuPWZ1bmN0aW9uKG8saCl7aS5jYWxsKG8sZnVuY3Rpb24ocCl7aD4wJiZBcnJheS5pc0FycmF5KHApP24ocCxoLTEpOnIucHVzaChwKX0pfTtyZXR1cm4gbihlLHQpLHJ9ZnVuY3Rpb24gazAoZSl7Y29uc3QgdD17fTtmb3IobGV0IHI9MDtyPGUubGVuZ3RoO3IrKyl7Y29uc3QgaT1lW3JdO3RbaVswXV09aVsxXX1yZXR1cm4gdH1mdW5jdGlvbiBxMChlKXtsZXQgdD0wO2Z1bmN0aW9uIHIoKXtyZXR1cm4gZVt0KytdPDw4fGVbdCsrXX1sZXQgaT1yKCksbj0xLG89WzAsMV07Zm9yKGxldCBIPTE7SDxpO0grKylvLnB1c2gobis9cigpKTtsZXQgaD1yKCkscD10O3QrPWg7bGV0IGI9MCxtPTA7ZnVuY3Rpb24gdygpe3JldHVybiBiPT0wJiYobT1tPDw4fGVbdCsrXSxiPTgpLG0+Pi0tYiYxfWNvbnN0IHk9MzEsUz1NYXRoLnBvdygyLHkpLEk9Uz4+PjEsTj1JPj4xLEM9Uy0xO2xldCBGPTA7Zm9yKGxldCBIPTA7SDx5O0grKylGPUY8PDF8dygpO2xldCBVPVtdLEo9MCxCdD1TO2Zvcig7Oyl7bGV0IEg9TWF0aC5mbG9vcigoKEYtSisxKSpuLTEpL0J0KSx6PTAsUHQ9aTtmb3IoO1B0LXo+MTspe2xldCBZdD16K1B0Pj4+MTtIPG9bWXRdP1B0PVl0Ono9WXR9aWYoej09MClicmVhaztVLnB1c2goeik7bGV0IFc9SitNYXRoLmZsb29yKEJ0Km9bel0vbiksUnQ9SitNYXRoLmZsb29yKEJ0Km9beisxXS9uKS0xO2Zvcig7ISgoV15SdCkmSSk7KUY9Rjw8MSZDfHcoKSxXPVc8PDEmQyxSdD1SdDw8MSZDfDE7Zm9yKDtXJn5SdCZOOylGPUYmSXxGPDwxJkM+Pj4xfHcoKSxXPVc8PDFeSSxSdD0oUnReSSk8PDF8SXwxO0o9VyxCdD0xK1J0LVd9bGV0IEc9aS00O3JldHVybiBVLm1hcChIPT57c3dpdGNoKEgtRyl7Y2FzZSAzOnJldHVybiBHKzY1NzkyKyhlW3ArK108PDE2fGVbcCsrXTw8OHxlW3ArK10pO2Nhc2UgMjpyZXR1cm4gRysyNTYrKGVbcCsrXTw8OHxlW3ArK10pO2Nhc2UgMTpyZXR1cm4gRytlW3ArK107ZGVmYXVsdDpyZXR1cm4gSC0xfX0pfWZ1bmN0aW9uIEswKGUpe2xldCB0PTA7cmV0dXJuKCk9PmVbdCsrXX1mdW5jdGlvbiBIMChlKXtyZXR1cm4gSzAocTAoZSkpfWZ1bmN0aW9uIHowKGUpe3JldHVybiBlJjE/fmU+PjE6ZT4+MX1mdW5jdGlvbiBMMChlLHQpe2xldCByPUFycmF5KGUpO2ZvcihsZXQgaT0wO2k8ZTtpKyspcltpXT0xK3QoKTtyZXR1cm4gcn1mdW5jdGlvbiByZihlLHQpe2xldCByPUFycmF5KGUpO2ZvcihsZXQgaT0wLG49LTE7aTxlO2krKylyW2ldPW4rPTErdCgpO3JldHVybiByfWZ1bmN0aW9uIGowKGUsdCl7bGV0IHI9QXJyYXkoZSk7Zm9yKGxldCBpPTAsbj0wO2k8ZTtpKyspcltpXT1uKz16MCh0KCkpO3JldHVybiByfWZ1bmN0aW9uIFByKGUsdCl7bGV0IHI9cmYoZSgpLGUpLGk9ZSgpLG49cmYoaSxlKSxvPUwwKGksZSk7Zm9yKGxldCBoPTA7aDxpO2grKylmb3IobGV0IHA9MDtwPG9baF07cCsrKXIucHVzaChuW2hdK3ApO3JldHVybiB0P3IubWFwKGg9PnRbaF0pOnJ9ZnVuY3Rpb24gUTAoZSl7bGV0IHQ9W107Zm9yKDs7KXtsZXQgcj1lKCk7aWYocj09MClicmVhazt0LnB1c2goRzAocixlKSl9Zm9yKDs7KXtsZXQgcj1lKCktMTtpZihyPDApYnJlYWs7dC5wdXNoKFkwKHIsZSkpfXJldHVybiBrMChlZih0KSl9ZnVuY3Rpb24gSjAoZSl7bGV0IHQ9W107Zm9yKDs7KXtsZXQgcj1lKCk7aWYocj09MClicmVhazt0LnB1c2gocil9cmV0dXJuIHR9ZnVuY3Rpb24gbmYoZSx0LHIpe2xldCBpPUFycmF5KGUpLmZpbGwodm9pZCAwKS5tYXAoKCk9PltdKTtmb3IobGV0IG49MDtuPHQ7bisrKWowKGUscikuZm9yRWFjaCgobyxoKT0+aVtoXS5wdXNoKG8pKTtyZXR1cm4gaX1mdW5jdGlvbiBHMChlLHQpe2xldCByPTErdCgpLGk9dCgpLG49SjAodCksbz1uZihuLmxlbmd0aCwxK2UsdCk7cmV0dXJuIGVmKG8ubWFwKChoLHApPT57Y29uc3QgYj1oWzBdLG09aC5zbGljZSgxKTtyZXR1cm4gQXJyYXkobltwXSkuZmlsbCh2b2lkIDApLm1hcCgodyx5KT0+e2xldCBTPXkqaTtyZXR1cm5bYit5KnIsbS5tYXAoST0+SStTKV19KX0pKX1mdW5jdGlvbiBZMChlLHQpe2xldCByPTErdCgpO3JldHVybiBuZihyLDErZSx0KS5tYXAobj0+W25bMF0sbi5zbGljZSgxKV0pfWZ1bmN0aW9uIFYwKGUpe2xldCB0PVByKGUpLnNvcnQoKGksbik9Pmktbik7cmV0dXJuIHIoKTtmdW5jdGlvbiByKCl7bGV0IGk9W107Zm9yKDs7KXtsZXQgbT1QcihlLHQpO2lmKG0ubGVuZ3RoPT0wKWJyZWFrO2kucHVzaCh7c2V0Om5ldyBTZXQobSksbm9kZTpyKCl9KX1pLnNvcnQoKG0sdyk9Pncuc2V0LnNpemUtbS5zZXQuc2l6ZSk7bGV0IG49ZSgpLG89biUzO249bi8zfDA7bGV0IGg9ISEobiYxKTtuPj49MTtsZXQgcD1uPT0xLGI9bj09MjtyZXR1cm57YnJhbmNoZXM6aSx2YWxpZDpvLGZlMGY6aCxzYXZlOnAsY2hlY2s6Yn19fWZ1bmN0aW9uIFcwKCl7cmV0dXJuIEgwKFUwKFwiQUVRRjJBTzJERXNBMndJckFHc0JSQUJ4QU44QVp3Q2NBRXdBcWdBMEFHd0FVZ0J5QURjQVRBQVZBRllBSVFBeUFDRUFLQUFZQUZnQUd3QWpBQlFBTUFBbUFESUFGQUFmQUJRQUt3QVRBQ29BRGdBYkFBOEFIUUFZQUJvQUdRQXhBRGdBTEFBb0FEd0FFd0E5QUJNQUdnQVJBQTRBRHdBV0FCTUFGZ0FJQUE4QUhnUVhCWU1BNUJISkFTOEp0QVlvQWU0QUV4b3ppMFVBSDIxdEFhTW5CVDhDcm5JeWhyTURoUmdEeWdJQlVBRUhjb0ZIVVBlOEFYQmpBZXdDamdEUVI4SUlDSWNFY1FMd0FUWENEZ3p2SHdCbUJvSE5BcXNCZEJjVUF5a2dEaEFNU2hza01nbzhBWThqcUFRZkFVQWZIdzhCRHc4N01pb0dsQ0lQQndaQ2E0RUxhdE1BQU1zcEpWZ3NEbDhBSWhja1NnOFhBSGR2VHdCY0lRRWlEVDRPUGhVcWJ5RUNBRW9BUzM0QWVqOFlieDgzSmdUL1h3OGdIeFovN3c4UklDeFBIQTl2QncrUGZ3OFBId0FQRnYrZkFzQXZDYzh2RXI4aXZ3RC9FUThCb2w4T0VCYS9BNzhocndBUENVOHZFU052dndXZkh3TmZBVm9ESHIrWkFBRUQzNFlhQWRKUEFLN1BMd1NFZ0RMSEFHbzFQejhQdng5ZlV3TXJwYjhPLzU4VlR6QVBJQm9YSXlRSk5GOGhwd0lWQVQ4WUdBVUFERE5CYVgzUkFNb21KQ2c5RWhVZUEyOU1BQnNaQlRNTkppcGpPaGMxOWdjSURSOGJCd1FIRWdnQ1dpNkRJZ0x1QVFZQStCQUZDaGEzQTVYaUFFc3FNN1VGRmdGTGhBTWpGVE1ZRTFLbG53NzRuUlZCRy9BU0NtMEJZUk4vQnJzVTNWb1d5K1MwdlY4TFF4K3ZOOGdGMkFDMkFLNUVBV3dBcGdZREttQUFyb1EwTkRRMEFUK09DZzd3QUFJSFJBYnBOZ1ZjQlYwQVBUQTVCZmJQRmdNTHpjWUwvUXFxQTgyZUJBTEtDalFDanFZQ2h0MC9rMitPQXNYUUFvUDNBU1RLRGdEdzZBQ0tBVVlDTXBJS0pwUmFBRTRBNXdvbUFCelp2czBSRUVLaUFDSVFBZDVRZEFFQ0FqNFl3Zy93R3FZMkFWZ0FZQURZdkFvQ0dBRXViQTBndkFZMkFMQUFicGJ2cXB5RUFHQUVwZ1FBSmdBRzdnQWdBRUFDbWdoVUZ3Q3FBTXBBSU5RSXdDNER0aFJBQVBjeWNLZ0Fwb0lkQUJ3QmZDaXNBQm9BVHdCcUFTSUF2aG5TQlA4YUgvRUNlQUtYQXE0ME5qZ0RCVHdGWVFVNkFYczNvQUJnQUQ0WE5nbWNDWTFlQ2w1dElGWmVVcUdneW9OSEFCZ0FFUUFhQUJOd1dRQW1BQk1BVFBNYTNUMzRBRGxkeXBybU0xTTJYb2NpVVFnTHp2d0FYVDN4QUJnQUVRQWFBQk53SUdGQW5BREQ4QUFnQUQ0QkJKV3phQ2NJQUlFQkZNQVd3S29BQWRxOUJXQUY1d0xRcEFMRXRRQUtVU0drYWhSNEduSk0rZ3NBd0NnZUZBaVVBRUNRMEJRdUw4QUFJQUFBQURLZUloZWNsdkZxUUFBRVRyNGlBTXhJQVJNZ0FNSW9IaFFJQW4wRTBwRFFGQzRIaHpub0FBQUFJQUkyQzAvNGx2RnFRQUFFVGdCSkp3WUNBeTRBQmdZQUZBQThNQktZRUg0ZVJoVGtBalllRmNnQUNBWUFlQUJzT3F5UTVnUndEYXlxdWdFZ2FJSUF0Z29BQ2dEbUVBQm1CQVdHbWU1T0JKSkEybTRjRGVvQW1JVFdBWHdyTWdPZ0FHd0JDaDZDQlhZRjFUemcxd0tBQUZkaXVBQlJBRndBWFFCc0FHOEFkZ0JyQUhZQWJ3Q0VBSEV3ZnhRQlZFNVRFUUFEVkZoVEJ3QkRBTklMQXFjQ3pnTFRBcFFDclFMNnZBQU1BTDhBUExoTkJLa0U2Z2xHS1RBVTREcjROMkVZRXdCQ2tBQktrOHJIQWJZQm13SW9BaVU0QWpmL0FxNENvd0NBQU5JQ2h6Z2FOQnNDc1RnZU9EY0ZYcmdDbFFLZEFxUUJpUUdZQXFzQ3NqVHNOSHNmTlBBMGl4c0FXVFdpT0FNRlBEUVNOQ2syQkRaSE5vdzJUVFpVTmhrMjhKazlWekkzUWtFb0FvSUNvUUt3QXFjQVFBQXhCVjRGWGJTOUJXNDdZa0lYUDFjaVVxczA1RFMvRndBQlV3SlcxMWU2bkh1WVptU2gvUkFZQThvTUt2WjhLQVNvVUFKWVdBSjZJTEFzQVpTb3FqcGdBMG9jQklobURnRFdBQWF3UkRRb0FBY3VBajVpQUhBQlppUjJBSWdpSGdDYUFVNjhBQ3h1SEFHMHlnTThNaVpJQWxnQmRGNEdhZ0pxQVBaT0hBTXVCZ29BVGtZQXNBQmlBSGdBTUxvR0RQajBIcEtFQkFBT0pnQXVBTGdnVEFIV0FlQU1FRGJkMjBVZWdlMEFEd0FXQURrQVFnQTlPSGQrMk1VUVpCQmhCZ05ORGt4eFB4VVFBckVQcXd2cUVSb00xaXJRMDkwQU5LNEg4QU5ZQi9BRFdBTllCL0FIOEFOWUIvQURXQU5ZQTFnRFdCd1A4Qi9ZeFJCa0QwMEVjZ1dUQlpBRTJ3aUlKazRSaGdjdENOZFVFblFqSEV3RFNnRUJJeXBKSVR1WU14QWxSMHdSVFFnSUFUWkhiS3g5UFFOTU1iQlUrcENuQTlBeVZEbHhCZ01lZGhLbEFDOFBlQ0UxdWs2RGVreHhwUXBRVDdOWDl3QkZCZ0FTcXdBUzVnQkpEU2dBVUN3R1BRQkk0elRZQUJOR0FFMmJBRTNLQUV4ZEdBQkthQWJnQUZCWEFGQ09BRkJKQUJJMlNXZE9iQUxET3EwLy9Rb21DWmh2d0hkVEJrSVFIQ2VtRVBnTU5BRzJBVHdON2t2WkJQSUdQQVRLSDM0WkdnL09sWjBJcGkzZURPNG01QzZpZ0ZzajlpcUVCZTVMOVR6ZUMwNVJhUTlhQzJZSjVEcGtnVThESWdFT0lvd0szZzA2Q0c0UTlBcktiQTNtRVVZSE9nUFdTWnNBcGdjQ0N4SWROaFcySmhGaXJRc0tPWGdHL0JyM0M1QW1zQk1xZXYwRjFCb2lCazRCS2hzQUFOQXU2SVd4V2pKY0hVOWdCZ1FMSmlQSUZLbFFJUTBtUUxoNFNSb2NCeFlscWdLU1EzRktpRkUzSHBRaDl6dytEV2N1RkZGOUIvWThCaGxRQzRJOG4wYXNSUThSMHo2T1BVa2lTa3d0QkRhQUxEQW5qQW5RRDRZTXVueHpBVm9KSWdteURISVRNaEVZTjhZSU9nY2FMcGNsSnhZSUlrYVdZSnNFK0tBRDlCUFNBd3dGUUFsQ0J4UUR0aHd1RXk4VktnVU9nU1hZQXZRMjFpNjBBcEJXZ1FFWUJjd1BKaC9nRUZGSDRRN3FDSndDWmdPRUpld0FMaFVpQUJnaW5BaEVaQUJnajlsVEJpN01DTWhxYlNOMUEyZ1U2R0lSZEFlU0RsZ0hxQncwRmNBYzRuREpYZ3lHQ1Npa3NBbGNBWFlKbWdGZ0JPUUlDalZjaktFZ1FtZFVpMWtZbkNCaVFVQmQvUUl5REdZVm9FUytoM2tDakE5c0Vod0JOZ0YwQnpvTkFnSjRFZTRSYkJDV0NPeUdCVFcyTS9rNkpnUlFJWVFnRWdvb0ExQnN6d3NvSnZvTStXb0JwQkpqQXcwMFBuZnZaNnhndHlVWC9nY2FNc1pCWVNIeUM1TlB6Z3lkR3NJWVExUXZHZVVId0FQMEd2UW42MEZZQmdBRHBBUVVPazR6N3dTK0Myb0lqQWxBQUVvT3BCZ0gyQmhyQ25LTTBRRXlqQUc0bWdOWWtvUUNjSkFHT0FjTUFHZ01pQVY2NWdBZUFxZ0lwQUFHQU5BRFdBQTZBcTRIbmdBYUFJWkNBVDRES0RBQkl1WUNrQU9VQ0RMTUFaWXdBZlFxQkJ6RURCWUErRGh1U3dMRHNnS0FhMmFqQmQ1WkFvOENTallCVGlZRUJrOUlVZ093Y3VJQTNBQk1CaFRnU0FFV3JFdk1HK1JFQWVCd0xBRElBUHdBQmpZSEJrSUJ6Z0gwYmdDNEFXQUxNZ21qdExZQlR1b3FBSVFBRm13QjJBS0tBTjRBTmdDQThnRlVBRTRGV3ZvRjFBSlFTZ0VTTWhrc1dHSUJ2QU1nQVRRQkRnQjZCc3lPcHNvSUlBUnVCOVFDRUJ3VjRnTHZMd2UyQWdNaTRCUE9Rc1lDdmQ5V0FESVhVdTVlWndxb0NxZGVhQUMwWVRRSE1uTTlVUUFQSDZrK3lBZHkvQlpJaVFJbVN3QlE1Z0JRUXpTYU5URldTVFlCcHdHcUtRSzM4QUZ0cXdCSS93SzM3Z0szclFLM3NBSzYyODBDMGdLMzNBSzN6eEFBVUVJQVVEOVNrbEtEQXJla0FydzVBRVFBekFIQ08xNDdXVHRlTzFrN1hqdFpPMTQ3V1R0ZU8xa0RtQ2hZSTAzQVZVMG9KcWtLYlY5R1lld01wdzNWUk1rNlNoUGNZRkpnTXhQSkxiZ1V3aFhQSlZjWlBocTlKd1lsNVZVS0R3VXQxR1l4Q0MwMGRoZTlBRUFwYVlOQ1k0Y2VNUXBNSE9oVGtsVDVMUndBc2t1ak03QU5yUnNXUkVFRlNIWHVZaXNXRHdvakFtU0NBbUpEWEU2d1hEY2hBcUg0QW1pWkFtWUtBcCtGT0J3TUFtWThBbVluQkc4RWdBTi9GQU4ra3prSE9YZ1lPWU02SkNRQ2JCNENNamM0Q3dKdHlBSnRyL0NMQURSb1Jpd0JhQURmQU9JQVN3WUhtUXlPQVA4TXd3QU90Z0ozTUFKMm8wQUNlVXhFQW5pN0hsM2NSYTlHOUFKOFFBSjZ5UUo5Q2dKODhVZ0JTSDVrSlFBc0ZrbFpTbHdXR0VyTkF0RUNBdEROU3lnRGlGQURoK2RFeHBFekF2S2lYUVFEQTY5THowd3VKZ1RRVFUxTnNBS0xRQUtLMmNJY0NCNUVhQWE0QW80NEFvNWRRWmlDQW83YUFvNWRlVkcxVXpZTFV0VlVoZ0tUL0FLVERRRHFBQjFWSDFXd1ZkRUhMQndwbG9jeTRuaG5SVHc2QXBlZ0F1K3pXQ0twQUZvbUFwYVFBcFo5blFDcVdhMWFDb0pPQUR3Q2xyWUNsazljUlZ6U0Fwbk1BcGxsWE10ZENCb0NuSnc1d3pxZUFwd1hBcCtjQXA2NWl3QWVFRElyRUFLZDhnS2Vrd0MyUG1FMVlmQUNudFFDb0c4QnFnS2VvQ0FDbmsrbVk4bGtLQ1lzQWlld0FpWi9BcUQ4QXFCTjJBS21NQUtsendLb0FBQitBcWZ6YUgxb3NnQUVTbW9kYXRJQ3JPUUNySzhDcldnQ3JRTUNWeDRDVmQwQ3NlTFlBeDlQYkpnQ3NyNE9BckxwR0d6aGJXUnRTV0FESmM0Q3RsMDhRRzZSQXlsR0FyaGZBcmxJRmdLNUszaHdOM0RpQXIwYUF5MnpBeklTQXI2SmNnTURNM0lDdmh0ekkzTlFBc1BNQXNNRmM0TjBURFpHZE9FRFBLZ0RQSnNEUGNBQ3hYMEN4a2dDeGhHS0FzaHFVZ0xJUlFMSlVBTEpMd0prbmdMZDAzaDZZbml2ZVNaTDBRTVlwR2NEQW1IMUdmU1ZKWHNNWHBOZXZCSUN6MndDejIwd1RGVFQ5QlNnQU1ldUFzOTBBU3JyQTA0VGZrd0dBdHdvQXR1TEF0SlFBMUpkQTFOZ0FRSURWWTJBaWtBQnpCZnVZVVoyQUlMUGc0NEMyc2dDMmQrRUVZUktwejBEaHFZQU1BTmtENFp5V3ZvQVZnTGZaZ0xldVhSNEF1SXc3UlVCOHpFb0FmU2NBZkxUaUFMcjlBTHBjWG9BQXVyNkF1cmxBUHBJQWJvQzdvb0M2NTJXcTVjRUF1NUFBNFhobUhwdzRYR2lBdk1FQUdvRGpoZVpsQUwzRkFPUmJ3T1NpQUwzbVFMNTJnTDRaNW9kbXF5OE9Kc2ZBNTJFQXY3N0FSd0FPcDhkbjdRREJZNERwbXNEcHRvQTBzWURCbXVoaWFJR0NnTU1TZ0ZnQVNBQ3RnTkdBSndFZ0xwb0JnQzhCR3pBRW93Y2dnQ0VEQzZrZGpvQUpBTTBDNUlLUm9BQlpDZ2lBSXp3M0FZQkxBQ2tmbmc5b2dpZ2tnTm1XQU42QUVRQ3Zya0VWcVRHQXdDc0JSYkFBKzRpUWtNQ0hSMDcyakkyUFRiVU5zazJSalk1TnZBMjNUWktOaVUzRURjWk41SStSVHhEUlRCQ0prSzVWQllLRmhaZndRQ1d5Z1UzQUpCUkhwdStPeXRnTnhhNjFBNDBHTXNZanNuN0JWd0ZYUVZjQlYwRmFBVmRCVndGWFFWY0JWMEZYQVZkQlZ3RlhVc2FDTnlLQUs0QUFRVUhCd0tVN29JQ29XMWU3akFFemdQeEErWUR3Z0NrQkZEQXdBREFCS3pBQU94RkxoaXRBMVVGVERleVBrTStiajUxUWtSQ3V3VFFXV1E4WCswQVdCWXpzQUNOQTh4d3pBR203RVovUWlzb0NUQWJMRHM2Zm5MZmI4SDJHY2NzYmdGdzEzTTFIQVZrQlcvSnhzbTlDTlJPOEU4RkREMEZCUXc5RmtjQ2xPWUNvTUZlZ3BEZkFEZ2NNaUEyQUpRQUNCOEFzaWdLQUl6SUVBSktlQklBcFk1eVBaUUlBS1FpSGI0ZnZqNUJLU1JQUXJaQ096MG9YeXhnT3l3ZktBbkdiZ01DbFFhQ0FrSUxYZ2RlQ0Q5SUlHVWdRajVmUG9ZK2RUNTJBbzVDTTBkQVg5QlRWRzlTRHpGd1dUUUFieEJ6SkYvbE9FSVFRZ2xDQ2tLSklBbHM1QWNDbFFJQ29LUE1PREVGeGhpNktTQWJpeWZJUnJNanRDZ2RXQ0FrUGxGQklpdENzRUpSekFiTUFWL09FeVF6RGcwT0FRUUVKMzZpMzI4L01rOUF5YkRKc1FscTN0RFJBcFVLQWtGelhmMWQvajl1QUxZUDZoQ29GZ0NUR0Q4a1BzRktRaW9icm0wK3pqMEtTRDhrUG5WQ1JCd01EeUpSVEhGZ01USmE1cndYUWlRMllmSS9KRDdCTUVKRUhHSU5UdzRUT0ZsSVJ6d0pPMGljTVFweVB5USt3ekpDUkJ2NkRWZ25LQjAxTmdVS2oyYndZek1xQ29Ca3puQmdFRit6WURJb2N3UklYK05nSGo0SElDTmZoMkM0Q3dkd0ZXcFRHL2xnVWhZR0F3UmZ2MlRzOG1BYVh6VmdtbC9YWUlKZnVXQzRISTFnVUY5cFlKWmdNUjZpbFFITUFPd0xBbERSZWZDMGluNEFYQUVKQTZQakN3YzBJYW1PQU5NTUNBRUNSUURGTlJUWkJnZCtDd1FsUkErcjYrZ0xCREVGQm53VUJYZ0tBVElBcndBR1JBQUhBM2NEZEFOMkEza0Rkd045QTNvRGRRTjdBMzBEZkFONEEzb0RmUUFZRUFBbEF0WUFTd01BVUFGc0FIY0tBSGNBbWdCM0FIVUFkUUIyQUhWdThVZ0F5Z0RBQUhjQWRRQjFBSFlBZFFBTENnQjNBQXNBbWdCM0FBc0NPd0IzQUF0dThVZ0F5Z0RBQUhnS0FKb0Fkd0IzQUhVQWRRQjJBSFVBZUFCMUFIVUFkZ0IxYnZGSUFNb0F3QUFMQ2dDYUFIY0FDd0IzQUFzQ093QjNBQXR1OFVnQXlnREFBSDRBQ3dHZ0FMY0Jwd0M2QWFoZEF1MENPd0x0YnZGSUFNb0F3QUFMQ2dDYUF1MEFDd0x0QUFzQ093THRBQXR1OFVnQXlnREFBMjRBQ3dOdkFBdTBWc1FBQXpzQUFCQ2tqVUlwQUFzQVVJdXNPZ2dXY2dNZUJ4VnNHd0w2N1UvMkhsem1XT0VlT2dBTEFTdnVBQXNlQWZwS1VwbnBHZ1lKRENJWk02WXlBUlVFOVRocUFENWlYUWduQUpZSlBuT3p3MFpBRVp4RUtzSUFrQTREaEFIblRBSUR4eFVESzBseENRbFBZZ0l2SVFWWUpRQlZxRTFHYWtVQUtHWWlEVG9TQkExRXRBWUFYUUpZQUlGOEdnTUhSeUFBSUFqT2U5WW5jZWtSQUEwS0FDVXJqd0U3QXljNkFBWVdBcWFpS0c0TWNFY3FBTm9OMytNZzlUd0NCaElrdUNueStKd1VRMjlMMDA4Smx1Unh1M0srb0FkcWlIT3FGSDBBRzVTVUlmVUo1U3hDR2Z4ZGlwUnpxVG1UNFY1WmIrcjFVbzRWbStOcVNTRWwybU52UjJKaElhOFNwWU82bnRkd0ZYSENXVENLOGYyK0h4bzd1aUczZHJEeWNBdUtJTVA1YmhpMDZBQ25xQXJIMXJ6NFJxZy8vbG02U2dKR0VWYkY5eEpISVNhUjZIeHF4U25rdzZzaERuZWxIS05FZkdVWFNKUkoxR2NzbXRKdzI1eHJaTURLOWdYU20xL1lNa2RYNC82TktZT2R0ay9OUTMvTm5EQVNqVGMzZlBqSWpXLzVzVmZWT2JYMm9URFdrcjFkRjlmM2t4QnNEMy8zYVFPOGhQZlJ6K2UwdUVpSnF0MTE2MWdyaXU3Z3o4aEREd3RweStGK0JXdGVmbktIWlBBeGNab1dibnpuaEpweTBlODQyajM2YmNOekduSUV1c2dHWDBhOFp4c25qY1NzUERaMDl5WjM2ZkNRYnJpSGVRNzJKUk1JTE5sNmVQUGYySFdvVndnV0FtMWZiM1Yyc0FZMCtCNnJBWHFTd1BCZ3NlVm1vcXNCVFNybTkxK1hhc01ZWXlTSThlZVJ4SDNadkhrTXozQlE1YUozaVVWYllQTk0zLzdlbVJ0amxzTWd2LzlWeVRzeXQvbUsrOGZnV2VUNlNvRmFjbFhxbjQyZEFJc3ZBYXJGNXZOTldIektTa0tRLzhIZms1WldLN3I5eWxpT3Nvb3lCalJoZmtIUDRRMkRrV1hRaTZGRy85ci9Jd2Jta1Y1VDdKU29wSEtuMXBKd205dGI1T3Qwb3lOMVoybVBwS1hIVHh4Mm5sSzA4ZktrMWhFWUE4V2dWVldMNWxneDBpVHYrS2RvakplVTIzWkRqbWl1YlhPeFZYSktLaTJXanVoMkhMWk9GTGlTQzdUbHM1U01oNGYrUGo2eFVTck5qRnFMR2VoUk5COGxDMFFTTE5ta0pKeC93U0czTW5qRTlUMUNrUHdKSTB3SDJsZnp3RVRJaVZxVXhnMGRmdTVxMzlHdCtod2RjeGtoaE52UTRUeXJCY2VvZjNNaHMvSXhGY2kxSG1IcjRGTVpnWEVFY3pQaUdDeDBIUnd6QXFEcTJqOUFWbTFrd04wbVJWTFdMeWxndG9QTmFwRjVjWTRZMXdKaC9lMEJCd1pqNDRZZ1pyRE5xdkQvOUh2N0dGWWRVUWVESnVRM0VXSTRIYUtxYXZVMVhqQy9uNDFrVDRMNzlrcUdxMGtMaGRUWnZnUDNUQTNmUzBvelZ6KzVwaVpzb090SXZCVUZvTUtiTmNtQkw2WXh4YVVBdXNIQjM4WHJTOGRRTW5Rd0pmVVVrcFJvR3I1QVVlV2ljdkJUenlLOWc3Nyt5Q2tmNVBBeXNMN3IvSmpjWmdyYnZScE1XOWl5YXhadktPNmNlWk4yRXdJeEt3VkZQdXZGdWlFUEdDb2FnYk1vK1NweWRMclhxQnpOQ0RHRkNyTy9ya2N3YTJ4aG9rUVo1Q2RaMEFzVTNKZlNxSjZuNUkxNFlBK1AvdUFnZmhQVTg0VGx3N2NFRmZwN0FFRThleTRzUDEyUFR0NENvZHMxR1JnRE9CNXh2eWlSNW0rQng4TzVuQkNOY3RVOEJldmZWNUEwOHg2UkhkNWpjd1BUTURTWkpPZWRJWjFjR1E3MDRseGJBenFaT1AwNVp4YU9naHpTZHZGQkhZcW9tQVRBUnlBQURLNGVsUDhMeTNJclVaS2ZXaDIzWHkyMHVCVW1MUzRQZmFndTkrb3lWYTJpUGdxUlAzRjJDVFVzdko3K1JZbk44ZkZaYlUvSFZ2eHZjRkZES2tpVHFWNVVCWjNHejU0SkFLQnlpOWhrS01aSnZ1R2djU1lYRm13MDhVeW9ReVZkZlREMS9kTWtDSFhjVEdBS2VST2dBcnN2bVJyUVRMVU9YaW9PSEdLMlFrakh1b1lGZ1hjaVpvVEpkNkZzNXExUVgxRytwL2UyNmhZc0VmN1FaRDFubkl5bC9TRmtOdFlZbW1CaHBCcnhsOVdiWTBZcEhXUnV3MkxsL3RqOW1EOFA0c25WekpsNEY5SisxYXJWZVRiOUU1cjJJTEgwNHFTdGp4UU53bjNtNFlOcXhtYU5iTEFxVzJUTjZMaWR3dUpScVMrTlhidHF4b2VEWHB4ZUdXbXh6U2tXeGpreUNrWDROUVJtZTZxNVNBY0MrTTcrOUVUZkEvRXdyelFhaktha0N3WXlldW5QNlpGbHhVMm9NRW4xUHozMXplU3RXNzRHNDA2WkpGQ2wxd0FYSW9VS2tXb3RZRXBPdVhCMXVWTnhKNjNkcEpFcWZ4QmVwdHdJSE5yUHo4QmxsWm9JY0JvWHdnZkorOFZBVW5WUHZSdmV4bncwTWEvV2lHWXVKTzV5OFFUdkVZQmlnRm1oVXhZNVJxekU4T2N5d04vOG00VVlybGFuaUpPNzVYUTZLU285K3RXSGx1K2hNaTBVVmRpS1FwN05lbG5vWlV6TmFJeUJQVmVPd0s2R05wK0ZmSHVQT295aGFXdU52VFlGa3Z4c2NNUVdEaCt6ZUZDRmtnd2JYZnRpVjIzeXdKNCt1d1JxbWc5azNLendJUXB6cHB0OERCQk9NYnJxd1FNNUdiMDVzRXdkS3pNaUFxT2xvYUEvbHIwS0ErMXByMC8rSGlXb2lJakhBL3dpcjJuSXVTM1BlVS9qaTNPNlp3b3hjUjFTWjlGaHRMQzVTMEZJekZoYkJXY0dWUC9LcHhPUFNpVW9BZFdVcHFLSCsrNlNjejUwN2lDY3hZSTZyZE1CSUNQSlplYTdPY21lRnc1bU9iSlNpcXBqZzJVb1dOSXMrY0ZoeURTdDZnZVY1cWdpM0Z1bm13d0RvR1NNZ2VyRk9aR1gxbTBkTUNZbzVYT3J1eE8wNjNkd0VOSzlEYm5WTTl3WUZSRXpoNHZ5VTFXWVlKL0xSUnA2b3hnanFQL1g1YTgvNEFmNnA2TldrUWZlcnpCbVhtZTB6WS80bndNSm0vd2QxdElxU3dHeitFM3hQRUFPb1psSml0M1hkZEQ3L0JUMXBsbHpPeCs4Ym1RdEFOUS9TNmZaZXhjNnFpM1crUTJ4Y21YVFVodVM1bXBIUVJ2Y3haVU4wUzUrUEw5bFhXVUFhUlpoRUg4aFRkQWN1Tk1NQ3VWTktURUd0U1VLTmkzTzZLaFNhVHpjazhjc1oydldSWitkN21XOGM0SUt3WElZZDI1Uy96SWZ0UGt3UHp1ZmpFdk9IV1ZEMW0rRmpwRFZVVFYwREdEdUhqNlFuYUV3THUvZEVnZExRT2c5RTFTcm85WEhKOHlrTEF3dFB1K3B4cUtEdUZleHFPTjFzS1FtN3J3YkUxRTY4VUNmQS9lcm92clRDRytEQlNOZzBsNGdvRFF2Wk42dU5sYnlMcGNaQXdqMlVjbHljdkxwSVpNZ3Y0eVJscGIzWXVNZnRvem9yYmNHVkh0L1ZlRFYzK0ZkZjFUUDBpdWFDc1BpMkc0WGVHaHN5RjF1YlZEeGtvSmhtbmlRMC9qU2cvZVlNTDlLTGZuQ0ZnSVNXa3A5MWVhdVIzSVF2RUQwbkFQWEsrNmhQQ1lzK24zK2hDWmJpc2ttVk1HMmRhKzBFc1pQb25VZUlZOEViZnVzUVhqc0svZUZEYW9zYlBqRWZRUzBSS0c3eWo1R0c2OU03TWVPMUhtaVVZb2NneWdKSEw2TTFxelVERHdVU21yOTlWN1NkcjJGM0pqUUFKWStGMHlIMzNJdjMrQzlNMzhlTUw3Z1RnbU51L3IyYlVNaVB2cFliWjZ2MS9JYUVTaXJCSE5hN21QS240ZEVtWWc3di8rSFFnUE4xRzc5akJRMStzb3lkZkRDMnIraDJCbC9LSWM1S2pNSzdPSDZuYjFqTHNOZjBFSFZlMktCaUU1MW94NjM2dXlHNkxobzB0M0ozNEw1UVkvaWxFM21pa2FGNEhLWEcxbUcxckNldlQxVnY2R2F2bHR4b1FlL2JNcnBadlJnZ25CeFNFUEVlRXprRWRPeFRuUFhIVmpVWWR3OEpZdmpCL283RWVnYzNNYStOVXhMTG5zSzBrSmxpblBtVUh6SEd0cms1K0NBYlZ6Rk9CcXB5eTNRVlVuelREZkMvMFhEOTQvb2tIK09CK2k3Zzlsb2xoV0lqU25mSWIrRXE0M1pYT1dtd3ZqeVYvcXFEK3QwZSs3bVRFTTc0cVAvT3p0OG5tQzdtUnB5dTYzT0I0S25VekZjMDc0U3FveVBVQWdNKy9USkdGbzZUNDRFSG5RVTRYNHo2cWFublZxZ3cvVTd6Q3B3Y21YVjFBdWJJcnZPbWtLSGF6SkFSNTVlUGpwNXRMQnNOOHZBcXMzTkFIZGNFSE9SMnhRMGxzTkFGelNVdXhGUUNGWXZYTFpKZE9qOXA0Zk5xNnAwSEJHVWlrMll6YUk0eHlTeTkxS3poUTArcTFoanh2SW1Sd1BSZjc2dENobFJraFJDaTc0TlhaOXFVTmVJd1ArczVwKzNtNW53UGROT0hnU0xENzluN085bTFuMXVESGlNbnRxNG5rWXdWNU9aMUVOYlh4RmQ0UGdybHZhdlpzeVVPNE1xWWxxcW4xTzhXL0kxZEVacTVkWGhyYkVUTGFaSWJDMktqL0FhL1FNK2ZxVU9IZGYwdFhBUTFodVozY21XRUNXU1h5LzQzajM1K012cTl4d3M3SktzZXJpWjFwRVdLYzhxbHpOckdQVUdjVmdPYTljUEpZSUpzR25KVEFVc0VjRE9FVlVMTzV4MHJYQmlqYzFsZ1hFelFRS2hST2Y4eklWODJ3OGVzd2M3OFlYMTFLWUxXUVJjZ0hOSkVsQnhmWHI3MmxTMlJCU2wwN3FUS29yTzJ1VURacjNzRmhZc3ZuaExabjBBOTRLUnpKLzdERUdJQWhXNVpXRnBMOGdFd3UxYUxBOU11V1p6TndsOE96ZTlZK2JYK3Y5Z3l3UlZub0I1SS84a1hUWFUzMTQxeVJMWXJJT096NlNPbnlITnk0U2llcXprQlhoYXJqZmpxcTFxNnRrbGFFYkE4UWZtMkRhSVBzN09UcS9udkpCaktmTzJIOWJIMmNDTWgxKzVnc3BmeWN1OGYvY3V1Um10RGp5cVo3dUNJTXlqZFYzYStwM2ZxbVhzUng0QzhsdWpleklGSG5RaVZUWExYdUkxWHJ3TjMrc2lZWWoySEhUdkVTVXg4RGxPVFhwYWs5cUZSSytMM21nSjFXc0Q3RjRjdTFhSm9Gb1lRbnUrd0dETU9qSk0za2lCUVdIQ2N2aEovSFJkeG9kT1FwNDVZWmFPVEEyMk5iNFhLQ1Z4cWtid01ZRmh6WVFZSUFuQ1c4RlcxNHVmOThqaFVHMnpyS2hRUTBxMENFcTB0NW5YeXZVeXZSOER2RDY5TFUrZzNpK0hGV1FNUThQcVp1SEQrc05LQVYwK002RUpDMHN6cTdyRXI3QjViUThCY05IenZETWM5ZXFCNVpDUWRUZjgwT2JuNHV6andwWVU3U0lTZHRWMFFHYTlEM1dyaDJCRFF0cEJLeGFORlYrL0N5MlAvU3YrOHM3VWQwRmQ3NFg0K28vVE56dFdnRVRVYXB5K21hak5RNjhMcTNlZTBaTzQ4VkViVFpZaUgxQ280T2xmV2VmODJSV2V5VVhvN3dvTTAzUHlhcEdmaWtUblFpbm9OcTV6NXZlTHBlTVYzSENBTVRhWm1BMW9HTEFuN1hTM1hZc3orWEs3Vk1Rc2M0WEtybURYT0xVL3BTWFZOVXE4ZElxVGJhLy8vM3g2TGlMUzZ4czF4dUNBWVNmY1EzK3JRZ211N3V2ZjNUSEt0NU9vbzk3VHFjYlJxeHg3RUFTaXphUUNCUWxsRy9yWXhWYXBNTGd0TGJaUzY0dzFNREJNWFgrUFFwQktOd3FVS09mMkREUkRVWFFmOUVoT1MwUWo0blRtbEE4ZHpTTHovRzFkK1VkOE1UeS82Z2hoZGlMcGVlckdZL1VsRE9maXVxRnNNVVU1L1VZbFArQkFtZ1JMdU5wdnJVYUxsVmtycURpZXZOVkVBd0YrNENvTTFNWlRtanhqSk1zS0pxK3U4WmQ3dE5DVUZ5NkxpeVlYUkpRNFZ5dkVRRkZhQ0dLc3hJd1FrazdFelo2TFRKcTJoVXVQaHZBVytnUW5TRzZKK01zekMrN1FDUkhjbnFEZHlOUko2VDl4eVM4N0E2TUR1dGJ6S0d2R2t0cGJYcXR6V3RYYjlIc2ZLMmNCTW9tak45YTR5K1RhSkxuWHhBZVgvSFd6bWY0Y1I0dkFMdC9QNHc0cWdLWTA0bWw0WmRMT2luRllTNmN1cDNHLzFpZTQrdDFlT25wQk5scUdxczc1aWx6a1Q0K0RzWlF4TnZhU0tKLy82ekliYmsvTTdMT2hGbVJjLzFSK2tCdHo3SkZHZFptL0NPb3RJZHZRb1hwVHFQLzF1cUVVbUNiL1FXb0dMTXdPNUFOY0h6eGRZNDhJR1A1K0orektPVEJGWjRQaWQrR1RNK1dxMTJNVi9IODZ4RUpwdEJhNlQrcDNrZ3B3TGVkTWFuQkhDMkdnTnJGcG9OMnhuck16OVdGV1gvOC95Z1NCa2F2cTJVdjdGZENzTEVZTHU5TExJdkFVMGJOUkR0ellsKy92WG1qcEl2dUpGWWptSTBpbTZRRVlxbkllTXNOalhHNHZJdXRJR0hpamVBRy85RURCb3pLVjVjbGRrSGJMeEhoMjV2VCtaRXpiaFhscXZwektKd2NFZ2ZOd0xBS0ZlbzAvcHZFRTEwWERCK0VYUlRYdFN6Sm96UUtGRkFKaE14WWtWYUNXK0U5QUw3dE1lVThhY3hpZEhxemI2bFg0NjkxVXNEcHkvTExSbVQrZXBnVzU2KzVDdzh0QjRrTVV2NnM5bGgzZVJLYnlHcytILzRtUU1hWXpQVGYyT09kb2tFbit6emd2b0QzRnFOS2s4UXFHQVhWc3FjR2RYclQ2MmZTUGtSMnZST0ZpNjhBNnNlODZVeFJVazRjYWpmUHlDQzRHNXdEaEQrek5xNGpvZFE0dTRuL20zN0xyMzZuNExJQUFzVnIwMmRGaTlBaXdBODFNWXMycm00ZURsRE5tZE1SdkVLUkhmQndXNURkTU5wMGpQRlpNZUFScUYvd0w0WEJmZCtFTUxCZk16cEg1R0g2TmFXKzF2cnZNZGcrVnhEemF0azNNWGdPM3JvM1AvRHBjQzYrTW80TXlTSmhLSmhTUjAxU0dHR3A1aFBXbXJyVWdydjNsRG5QK0hoY0kzbnQzWXFCb1ZBVlRCQVFUNWl1aFRnOG52UHRkOFplWWo2dzF4NlJxR1VCclNrdTcrTjErQmFhc1p2alRrNjRSb0lEbEw4YnJwRWNKeDNPbVk3akxvWnNzd2R0bWhmQy9HMjFsbFhoSVRPd212UkREZVRUUGJ5QVNPYTE2Y0Y1L0ExZlpBaWRKcHFqdTN3WUF5OWF2UFIxeWE2ZU5wOUs4WFlycnR1eGxxaStiREt3bGZyWWRSMFJSaUtSVlRMT0g4NStaWTdYU216UnBmWkJKamFUYTgxVkRjSkhwWm5ablNRTEFTR1lXOWw1MVpWL2g3ZVZ6VGkzSHY2aFVzZ2MvNTFBcUpSVGtwYkZWTFhYc3pvQkw4bkJYMHUvMGpCTFQ4bkgrZkplUGJyd1VSVDU4T1krVWllUmpkMXZzMDR3MFZHNVZOMlU2TW9HWmtRektOL3B0ejBRMzY2ZHhvVEdtajdpMU5RR0hpOUdnbnF1WEZZZHJDZlpCbWViN3MwVDZ5cmRsWkg1Y1p1d0hGeUlKL2tBdEdzVGcweEg1dGFBQXE0NEJBazFDUGs5S1ZWYnFRenJDVWlGZEYvNmd0bFBROGJISGMxRzFXOTJNWEdaNUhFSGZ0eUxZczhtYkQvOXhZUlVXa0htbE0wekMyaWxKbG5OZ1Y0YmZBTHBRZ2h4T1VvWkw3VlRxdENISWFRU1htK1lVTW5wa1h5Ym5WK0E2eGxtMkNWeThmbjBYbG0yWFJhMCt6ek9hMjFKV1dtaXhmaVBNU0NaN3FBNHJTOTNWTjNwa3BGMXM1VG9uUWppc0hmN2lVOVpHdlVQT0FLWmNSMXBiZVZmL1VsN09oZXBHQ2FJZDl3T3RxbzdwSjd5TGNCWjBwRmtPRjI4eTR6RUkva2NVTm11dEJIYVFwQmROTTh2akNTNkhaUm9ra2VvODhUQkFqR3lHN1NSKzZ2VWdUY3lLOUltYWxqMGt1eHowd21LK2J5UVUxMUFpSkZrL3lhNWROZHVSQ2xjblU2NHlHdS9pZVdTZU9vczF0M2VwK1JQSVdRMnB5VFlWYlpsdFRic2I3Tml3U2kzQVYrOEtMV2s3THhDbmZaVWV0RU04VGhuc1NvR0gzOC9ueUF3Rmd1SnA4Rmp2bEh0Y1dadVU0aFB2YTBySGZyMFVoT09KL0Y2dlM2MkZXN0t6a21SbGwySEVjN29VcTRmeWk1VDcwVmw3WVZJZnNQSFVDZEhlc2Y5TGs3V05WV083NUpEa1liTUk4VE9XOEpLVnRMWTlkNlVKUklUTzhvS28weFMrbzk5WXkwNGluaUdIQWFHajg4a0VXZ3d2ME9ySGRZL25yNzZET0dOUzU5aFhDR1h6VEtVdkRsOWlLcExTV1lOMWx4SWV5eXdkTnBUa2hheTc0dzJqRlQ2TlM4cWtqbzVDeEExeWZTWXdwNkFKSVpOS0llRUs1UEpBVzdPUmdXZ3dwMFZnellwcW92TXJXeGJ1K0RHWjZMaGllMVJBcXB6bThWVXpLSk9IM21Deld1VE9Mc04zVlQvZHYyZWVZZTlVamJSOFlUQnNMejdxNjBWTjFzVTUxayt1bTFmOEp4RDVwUGhiaFNDOHJSYUI0NTR0bWg2WVVXckpJMytHV1kwcWVXaW9qL3Ria1lJVE9rSmFldUd0NEpySnZIQStsMEd1N2tZN1hPYWEwNWFsTW5SV1ZDWHFGZ0xJd1NZNHVGNTlVZTVTVTRRS3VjL0hhbUR4YnIweDZjc0NldFhHb1A3UW4xQmsvSjlEc3luTy9VRDZpWjFIeXJ6K2ppdDBoREN3aS9FOU9qZ0tUYkIzWlFLUS8wWk92ZXZmTkhHME5LNEFqM0NwN05wUmswN1JUMWkvUzBFTDkzQWc4R1JnS0k5Q2ZwYWpLeUs2K0pqL1BJMUtPNS84NVZBd3oyQXd6UDhGVEJiMDc1SXhDWHY2VDlSVnZXVDJ0VWFxeERTOTJ6ckdVYld6VVlrOW1TczgycEVDSCtma3FzRHQ5M1ZXKys0WXNSL2RIQ1ljUVNZVE8vS2FCTURqOUxTRC9KLyt6MjBLcThYdlpVQUlIdG05aFJQUDNJdGJ1QXUySG01bGtQczkycGQ3a0N4Z1JzMHhPVkJuWjEzY2NkQTBhdW5yd3Y5U2RxRWxKUkMzZytvQ3Urblh5Q2dtWFVzOXlNalRNQUlIZnhaVithUEtjWmVVQld0MDU3WG84NUtzMUlyNWd6RUhDV3FaRWhyTFpNdUYxMXppR3RGUVVkcy9FRVNhamhhZ3pjS3N4YW1jU1p4R3RoNFVJSSthZFBoUWtVbngyV3lOKzRZV1IrcjNmOE1ua3lHRnVSNHpqenhKUzhXc1FZUjVQVHlSYUQ5aXhhNk1oNzQxbkJIYnpmalhIc2tHRHExNzl4YVJOckNJQjF6MXhSZldmanF3MnBIYzF6azl4bFBwTDhzUVdBSXVFVFpaaGJubUw1NHJjZVhWTlJ2VWlLcnJxSWtlb2dzbDBYWGIxN3lsTmIwZjRHQTlXZDQ0dmZmRUc4RlNaR0hFTDJmYmFUR1JjU2lDZUE4UG1BL2Y2SHo4SENTNzZmWFVId2d3a3pTd2xJNzFla1o3RmFwbWxrL0tDK0hzOGhVY3czTjJMTjVMaGtWWXlpellGbC91UGVWUDVsc29KSGhoZld2dlNXcnVDVVcxWmNKT2V1VGJyRGd5d0ovcUcwN2daSnBsblR2TGNZZE5hSDBLTVlPWU1HWCtyQjROR1BGbVFzTmFJd2xXcmZDZXp4cmU4elhCcnNNVCtlZFZMYkxxTjFCcUI3NkpINEJ2WlRxVUlNZkd3UEdFbitFbm1UVjg2ZlBCYVliRkwzREZFaGpCNDVDZXdrWEVBdEp4azQvTXMycFBYbmFScWRreTBIT1lkY1VjRTJ6Y1hxNHZhSXZXMi92MG5IRkpIMlhYZTIydWVEbXEvMThYR3RFTFNxODVqOVg4cTB0Y05TU0tKSVg4RlR1SkYvUGY4ajVQaHFHMnUrb3N2c0x4WXJ2dmZlVkpMKzR0a2NYY3I5SlY3djBFUm1qL1g2Zk0zTkM0ajZkUzErOVVtcjJvUGF2cWlBeWRUWlBMTU5SR1kyM0xPOXpBVkRseTdqRCs3MEc1VFBQTGRoUklsNFd4Y1lqTG5NK1NOY0oyNkZPcmtySVNVdFBPYkl6NVpiM0FHNjEya3JucHkxNVJNVysxY1FqbG5XRkk2NTM4cWt5OWF4ZDJvSm1ISUhQMDhLeVAwdWJHTytUUU5PWXV2MnVoMTd5Q0l2UjhWY1N0dzdvMWcwTk02MHNrKzhUcTdZZklCSnJ0cDUzR2t2elhIN09BMHA4L24vdTFzYXRmL1ZKaHRSMWw4V2E2R21hdWc3aGFTcGFDYVlRYXg2dGEwbWt1dGxiK2VBT1NHMWFvYk04MUQ5QTRpUzFSUmx6QkJvVlg2dFUxUzZXRTJOOU9SWTZEZmVMUkM0bDlSdnI1aDk1WERXQjJtUjFkNFdGdWRwc2dWWXdpVHdUMzFsanNrRDhaeURPbG01RGtHaDlOL1VCLzBBSTVYdmI4WkJtYWkyaFE0QldNcUZ3WW56eHdCMjZZSFNPdjlXZ1kzSlhudm9OKzJSNHJxR1ZoL0xMRE10cEZQK1NwTUdKTld2YklsNVNPb2RiQ2N6VzJSS2xla3NQb1VlR0V6cmp0S0hWZHRaQStrZnFPK3JWeC9pY2xDcXdvb3BlcHZKcFNURGpUK2I5R1d5bEdSRjhFRGJHbHc2ZVV6bUpNOTVPdm96K2t3TFgzYzJmVGpGZVlFc0U3dlVabTNtcWRHSnVLaDJ3OS9RR1NhcVJIczk5YVNjR09kRHFrRmNBQ29xZGJCb1FxcWphbWhINlE5bmczOUpDZzNsckdKd2Q1MFFrOW92bnFCVHI4TU1FN1BzMndpVmZ5Z1VtUG9VQkpKZkpXWDVOZGEwbnVuY2JGa0E9PVwiKSl9Y29uc3QgRHI9VzAoKTtuZXcgU2V0KFByKERyKSksbmV3IFNldChQcihEcikpLFEwKERyKSxWMChEciksbmV3IEwodGYpO2NvbnN0IFgwPW5ldyBVaW50OEFycmF5KDMyKTtYMC5maWxsKDApO2NvbnN0IFowPWBcdTAwMTlFdGhlcmV1bSBTaWduZWQgTWVzc2FnZTpcbmA7ZnVuY3Rpb24gZmYoZSl7cmV0dXJuIHR5cGVvZiBlPT1cInN0cmluZ1wiJiYoZT1FaShlKSkseWkoRTAoW0VpKFowKSxFaShTdHJpbmcoZS5sZW5ndGgpKSxlXSkpfWNvbnN0ICQwPVwicmxwLzUuNy4wXCI7bmV3IEwoJDApO2NvbnN0IHRzPVwiYWRkcmVzcy81LjcuMFwiLEFyPW5ldyBMKHRzKTtmdW5jdGlvbiBvZihlKXtRdChlLDIwKXx8QXIudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBhZGRyZXNzXCIsXCJhZGRyZXNzXCIsZSksZT1lLnRvTG93ZXJDYXNlKCk7Y29uc3QgdD1lLnN1YnN0cmluZygyKS5zcGxpdChcIlwiKSxyPW5ldyBVaW50OEFycmF5KDQwKTtmb3IobGV0IG49MDtuPDQwO24rKylyW25dPXRbbl0uY2hhckNvZGVBdCgwKTtjb25zdCBpPU90KHlpKHIpKTtmb3IobGV0IG49MDtuPDQwO24rPTIpaVtuPj4xXT4+ND49OCYmKHRbbl09dFtuXS50b1VwcGVyQ2FzZSgpKSwoaVtuPj4xXSYxNSk+PTgmJih0W24rMV09dFtuKzFdLnRvVXBwZXJDYXNlKCkpO3JldHVyblwiMHhcIit0LmpvaW4oXCJcIil9Y29uc3QgZXM9OTAwNzE5OTI1NDc0MDk5MTtmdW5jdGlvbiBycyhlKXtyZXR1cm4gTWF0aC5sb2cxMD9NYXRoLmxvZzEwKGUpOk1hdGgubG9nKGUpL01hdGguTE4xMH1jb25zdCBOaT17fTtmb3IobGV0IGU9MDtlPDEwO2UrKylOaVtTdHJpbmcoZSldPVN0cmluZyhlKTtmb3IobGV0IGU9MDtlPDI2O2UrKylOaVtTdHJpbmcuZnJvbUNoYXJDb2RlKDY1K2UpXT1TdHJpbmcoMTArZSk7Y29uc3Qgc2Y9TWF0aC5mbG9vcihycyhlcykpO2Z1bmN0aW9uIGlzKGUpe2U9ZS50b1VwcGVyQ2FzZSgpLGU9ZS5zdWJzdHJpbmcoNCkrZS5zdWJzdHJpbmcoMCwyKStcIjAwXCI7bGV0IHQ9ZS5zcGxpdChcIlwiKS5tYXAoaT0+TmlbaV0pLmpvaW4oXCJcIik7Zm9yKDt0Lmxlbmd0aD49c2Y7KXtsZXQgaT10LnN1YnN0cmluZygwLHNmKTt0PXBhcnNlSW50KGksMTApJTk3K3Quc3Vic3RyaW5nKGkubGVuZ3RoKX1sZXQgcj1TdHJpbmcoOTgtcGFyc2VJbnQodCwxMCklOTcpO2Zvcig7ci5sZW5ndGg8Mjspcj1cIjBcIityO3JldHVybiByfWZ1bmN0aW9uIG5zKGUpe2xldCB0PW51bGw7aWYodHlwZW9mIGUhPVwic3RyaW5nXCImJkFyLnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgYWRkcmVzc1wiLFwiYWRkcmVzc1wiLGUpLGUubWF0Y2goL14oMHgpP1swLTlhLWZBLUZdezQwfSQvKSllLnN1YnN0cmluZygwLDIpIT09XCIweFwiJiYoZT1cIjB4XCIrZSksdD1vZihlKSxlLm1hdGNoKC8oW0EtRl0uKlthLWZdKXwoW2EtZl0uKltBLUZdKS8pJiZ0IT09ZSYmQXIudGhyb3dBcmd1bWVudEVycm9yKFwiYmFkIGFkZHJlc3MgY2hlY2tzdW1cIixcImFkZHJlc3NcIixlKTtlbHNlIGlmKGUubWF0Y2goL15YRVswLTldezJ9WzAtOUEtWmEtel17MzAsMzF9JC8pKXtmb3IoZS5zdWJzdHJpbmcoMiw0KSE9PWlzKGUpJiZBci50aHJvd0FyZ3VtZW50RXJyb3IoXCJiYWQgaWNhcCBjaGVja3N1bVwiLFwiYWRkcmVzc1wiLGUpLHQ9UjAoZS5zdWJzdHJpbmcoNCkpO3QubGVuZ3RoPDQwOyl0PVwiMFwiK3Q7dD1vZihcIjB4XCIrdCl9ZWxzZSBBci50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGFkZHJlc3NcIixcImFkZHJlc3NcIixlKTtyZXR1cm4gdH1jb25zdCBmcz1cInByb3BlcnRpZXMvNS43LjBcIjtuZXcgTChmcyk7ZnVuY3Rpb24gYnIoZSx0LHIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse2VudW1lcmFibGU6ITAsdmFsdWU6cix3cml0YWJsZTohMX0pfW5ldyBMKHRmKTtjb25zdCBvcz1uZXcgVWludDhBcnJheSgzMik7b3MuZmlsbCgwKSxWLmZyb20oLTEpO2NvbnN0IHNzPVYuZnJvbSgwKSxhcz1WLmZyb20oMSk7Vi5mcm9tKFwiMHhmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmXCIpLG9lKGFzLnRvSGV4U3RyaW5nKCksMzIpLG9lKHNzLnRvSGV4U3RyaW5nKCksMzIpO3ZhciBzZT17fSxRPXt9LHlyPWFmO2Z1bmN0aW9uIGFmKGUsdCl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKHR8fFwiQXNzZXJ0aW9uIGZhaWxlZFwiKX1hZi5lcXVhbD1mdW5jdGlvbih0LHIsaSl7aWYodCE9cil0aHJvdyBuZXcgRXJyb3IoaXx8XCJBc3NlcnRpb24gZmFpbGVkOiBcIit0K1wiICE9IFwiK3IpfTt2YXIgSWk9e2V4cG9ydHM6e319O3R5cGVvZiBPYmplY3QuY3JlYXRlPT1cImZ1bmN0aW9uXCI/SWkuZXhwb3J0cz1mdW5jdGlvbih0LHIpe3ImJih0LnN1cGVyXz1yLHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoci5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pKX06SWkuZXhwb3J0cz1mdW5jdGlvbih0LHIpe2lmKHIpe3Quc3VwZXJfPXI7dmFyIGk9ZnVuY3Rpb24oKXt9O2kucHJvdG90eXBlPXIucHJvdG90eXBlLHQucHJvdG90eXBlPW5ldyBpLHQucHJvdG90eXBlLmNvbnN0cnVjdG9yPXR9fTt2YXIgdXM9eXIsaHM9SWkuZXhwb3J0cztRLmluaGVyaXRzPWhzO2Z1bmN0aW9uIGNzKGUsdCl7cmV0dXJuKGUuY2hhckNvZGVBdCh0KSY2NDUxMikhPT01NTI5Nnx8dDwwfHx0KzE+PWUubGVuZ3RoPyExOihlLmNoYXJDb2RlQXQodCsxKSY2NDUxMik9PT01NjMyMH1mdW5jdGlvbiBscyhlLHQpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGUuc2xpY2UoKTtpZighZSlyZXR1cm5bXTt2YXIgcj1bXTtpZih0eXBlb2YgZT09XCJzdHJpbmdcIilpZih0KXtpZih0PT09XCJoZXhcIilmb3IoZT1lLnJlcGxhY2UoL1teYS16MC05XSsvaWcsXCJcIiksZS5sZW5ndGglMiE9PTAmJihlPVwiMFwiK2UpLG49MDtuPGUubGVuZ3RoO24rPTIpci5wdXNoKHBhcnNlSW50KGVbbl0rZVtuKzFdLDE2KSl9ZWxzZSBmb3IodmFyIGk9MCxuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWUuY2hhckNvZGVBdChuKTtvPDEyOD9yW2krK109bzpvPDIwNDg/KHJbaSsrXT1vPj42fDE5MixyW2krK109byY2M3wxMjgpOmNzKGUsbik/KG89NjU1MzYrKChvJjEwMjMpPDwxMCkrKGUuY2hhckNvZGVBdCgrK24pJjEwMjMpLHJbaSsrXT1vPj4xOHwyNDAscltpKytdPW8+PjEyJjYzfDEyOCxyW2krK109bz4+NiY2M3wxMjgscltpKytdPW8mNjN8MTI4KToocltpKytdPW8+PjEyfDIyNCxyW2krK109bz4+NiY2M3wxMjgscltpKytdPW8mNjN8MTI4KX1lbHNlIGZvcihuPTA7bjxlLmxlbmd0aDtuKyspcltuXT1lW25dfDA7cmV0dXJuIHJ9US50b0FycmF5PWxzO2Z1bmN0aW9uIGRzKGUpe2Zvcih2YXIgdD1cIlwiLHI9MDtyPGUubGVuZ3RoO3IrKyl0Kz1oZihlW3JdLnRvU3RyaW5nKDE2KSk7cmV0dXJuIHR9US50b0hleD1kcztmdW5jdGlvbiB1ZihlKXt2YXIgdD1lPj4+MjR8ZT4+PjgmNjUyODB8ZTw8OCYxNjcxMTY4MHwoZSYyNTUpPDwyNDtyZXR1cm4gdD4+PjB9US5odG9ubD11ZjtmdW5jdGlvbiBwcyhlLHQpe2Zvcih2YXIgcj1cIlwiLGk9MDtpPGUubGVuZ3RoO2krKyl7dmFyIG49ZVtpXTt0PT09XCJsaXR0bGVcIiYmKG49dWYobikpLHIrPWNmKG4udG9TdHJpbmcoMTYpKX1yZXR1cm4gcn1RLnRvSGV4MzI9cHM7ZnVuY3Rpb24gaGYoZSl7cmV0dXJuIGUubGVuZ3RoPT09MT9cIjBcIitlOmV9US56ZXJvMj1oZjtmdW5jdGlvbiBjZihlKXtyZXR1cm4gZS5sZW5ndGg9PT03P1wiMFwiK2U6ZS5sZW5ndGg9PT02P1wiMDBcIitlOmUubGVuZ3RoPT09NT9cIjAwMFwiK2U6ZS5sZW5ndGg9PT00P1wiMDAwMFwiK2U6ZS5sZW5ndGg9PT0zP1wiMDAwMDBcIitlOmUubGVuZ3RoPT09Mj9cIjAwMDAwMFwiK2U6ZS5sZW5ndGg9PT0xP1wiMDAwMDAwMFwiK2U6ZX1RLnplcm84PWNmO2Z1bmN0aW9uIHZzKGUsdCxyLGkpe3ZhciBuPXItdDt1cyhuJTQ9PT0wKTtmb3IodmFyIG89bmV3IEFycmF5KG4vNCksaD0wLHA9dDtoPG8ubGVuZ3RoO2grKyxwKz00KXt2YXIgYjtpPT09XCJiaWdcIj9iPWVbcF08PDI0fGVbcCsxXTw8MTZ8ZVtwKzJdPDw4fGVbcCszXTpiPWVbcCszXTw8MjR8ZVtwKzJdPDwxNnxlW3ArMV08PDh8ZVtwXSxvW2hdPWI+Pj4wfXJldHVybiBvfVEuam9pbjMyPXZzO2Z1bmN0aW9uIG1zKGUsdCl7Zm9yKHZhciByPW5ldyBBcnJheShlLmxlbmd0aCo0KSxpPTAsbj0wO2k8ZS5sZW5ndGg7aSsrLG4rPTQpe3ZhciBvPWVbaV07dD09PVwiYmlnXCI/KHJbbl09bz4+PjI0LHJbbisxXT1vPj4+MTYmMjU1LHJbbisyXT1vPj4+OCYyNTUscltuKzNdPW8mMjU1KToocltuKzNdPW8+Pj4yNCxyW24rMl09bz4+PjE2JjI1NSxyW24rMV09bz4+PjgmMjU1LHJbbl09byYyNTUpfXJldHVybiByfVEuc3BsaXQzMj1tcztmdW5jdGlvbiBncyhlLHQpe3JldHVybiBlPj4+dHxlPDwzMi10fVEucm90cjMyPWdzO2Z1bmN0aW9uIEFzKGUsdCl7cmV0dXJuIGU8PHR8ZT4+PjMyLXR9US5yb3RsMzI9QXM7ZnVuY3Rpb24gYnMoZSx0KXtyZXR1cm4gZSt0Pj4+MH1RLnN1bTMyPWJzO2Z1bmN0aW9uIHlzKGUsdCxyKXtyZXR1cm4gZSt0K3I+Pj4wfVEuc3VtMzJfMz15cztmdW5jdGlvbiB3cyhlLHQscixpKXtyZXR1cm4gZSt0K3IraT4+PjB9US5zdW0zMl80PXdzO2Z1bmN0aW9uIHhzKGUsdCxyLGksbil7cmV0dXJuIGUrdCtyK2krbj4+PjB9US5zdW0zMl81PXhzO2Z1bmN0aW9uIE1zKGUsdCxyLGkpe3ZhciBuPWVbdF0sbz1lW3QrMV0saD1pK28+Pj4wLHA9KGg8aT8xOjApK3IrbjtlW3RdPXA+Pj4wLGVbdCsxXT1ofVEuc3VtNjQ9TXM7ZnVuY3Rpb24gRXMoZSx0LHIsaSl7dmFyIG49dCtpPj4+MCxvPShuPHQ/MTowKStlK3I7cmV0dXJuIG8+Pj4wfVEuc3VtNjRfaGk9RXM7ZnVuY3Rpb24gU3MoZSx0LHIsaSl7dmFyIG49dCtpO3JldHVybiBuPj4+MH1RLnN1bTY0X2xvPVNzO2Z1bmN0aW9uIE5zKGUsdCxyLGksbixvLGgscCl7dmFyIGI9MCxtPXQ7bT1tK2k+Pj4wLGIrPW08dD8xOjAsbT1tK28+Pj4wLGIrPW08bz8xOjAsbT1tK3A+Pj4wLGIrPW08cD8xOjA7dmFyIHc9ZStyK24raCtiO3JldHVybiB3Pj4+MH1RLnN1bTY0XzRfaGk9TnM7ZnVuY3Rpb24gSXMoZSx0LHIsaSxuLG8saCxwKXt2YXIgYj10K2krbytwO3JldHVybiBiPj4+MH1RLnN1bTY0XzRfbG89SXM7ZnVuY3Rpb24gX3MoZSx0LHIsaSxuLG8saCxwLGIsbSl7dmFyIHc9MCx5PXQ7eT15K2k+Pj4wLHcrPXk8dD8xOjAseT15K28+Pj4wLHcrPXk8bz8xOjAseT15K3A+Pj4wLHcrPXk8cD8xOjAseT15K20+Pj4wLHcrPXk8bT8xOjA7dmFyIFM9ZStyK24raCtiK3c7cmV0dXJuIFM+Pj4wfVEuc3VtNjRfNV9oaT1fcztmdW5jdGlvbiBCcyhlLHQscixpLG4sbyxoLHAsYixtKXt2YXIgdz10K2krbytwK207cmV0dXJuIHc+Pj4wfVEuc3VtNjRfNV9sbz1CcztmdW5jdGlvbiBDcyhlLHQscil7dmFyIGk9dDw8MzItcnxlPj4+cjtyZXR1cm4gaT4+PjB9US5yb3RyNjRfaGk9Q3M7ZnVuY3Rpb24gUnMoZSx0LHIpe3ZhciBpPWU8PDMyLXJ8dD4+PnI7cmV0dXJuIGk+Pj4wfVEucm90cjY0X2xvPVJzO2Z1bmN0aW9uIE9zKGUsdCxyKXtyZXR1cm4gZT4+PnJ9US5zaHI2NF9oaT1PcztmdW5jdGlvbiBQcyhlLHQscil7dmFyIGk9ZTw8MzItcnx0Pj4+cjtyZXR1cm4gaT4+PjB9US5zaHI2NF9sbz1Qczt2YXIgZnI9e30sbGY9USxEcz15cjtmdW5jdGlvbiBGcigpe3RoaXMucGVuZGluZz1udWxsLHRoaXMucGVuZGluZ1RvdGFsPTAsdGhpcy5ibG9ja1NpemU9dGhpcy5jb25zdHJ1Y3Rvci5ibG9ja1NpemUsdGhpcy5vdXRTaXplPXRoaXMuY29uc3RydWN0b3Iub3V0U2l6ZSx0aGlzLmhtYWNTdHJlbmd0aD10aGlzLmNvbnN0cnVjdG9yLmhtYWNTdHJlbmd0aCx0aGlzLnBhZExlbmd0aD10aGlzLmNvbnN0cnVjdG9yLnBhZExlbmd0aC84LHRoaXMuZW5kaWFuPVwiYmlnXCIsdGhpcy5fZGVsdGE4PXRoaXMuYmxvY2tTaXplLzgsdGhpcy5fZGVsdGEzMj10aGlzLmJsb2NrU2l6ZS8zMn1mci5CbG9ja0hhc2g9RnIsRnIucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0LHIpe2lmKHQ9bGYudG9BcnJheSh0LHIpLHRoaXMucGVuZGluZz90aGlzLnBlbmRpbmc9dGhpcy5wZW5kaW5nLmNvbmNhdCh0KTp0aGlzLnBlbmRpbmc9dCx0aGlzLnBlbmRpbmdUb3RhbCs9dC5sZW5ndGgsdGhpcy5wZW5kaW5nLmxlbmd0aD49dGhpcy5fZGVsdGE4KXt0PXRoaXMucGVuZGluZzt2YXIgaT10Lmxlbmd0aCV0aGlzLl9kZWx0YTg7dGhpcy5wZW5kaW5nPXQuc2xpY2UodC5sZW5ndGgtaSx0Lmxlbmd0aCksdGhpcy5wZW5kaW5nLmxlbmd0aD09PTAmJih0aGlzLnBlbmRpbmc9bnVsbCksdD1sZi5qb2luMzIodCwwLHQubGVuZ3RoLWksdGhpcy5lbmRpYW4pO2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bis9dGhpcy5fZGVsdGEzMil0aGlzLl91cGRhdGUodCxuLG4rdGhpcy5fZGVsdGEzMil9cmV0dXJuIHRoaXN9LEZyLnByb3RvdHlwZS5kaWdlc3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudXBkYXRlKHRoaXMuX3BhZCgpKSxEcyh0aGlzLnBlbmRpbmc9PT1udWxsKSx0aGlzLl9kaWdlc3QodCl9LEZyLnByb3RvdHlwZS5fcGFkPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5wZW5kaW5nVG90YWwscj10aGlzLl9kZWx0YTgsaT1yLSh0K3RoaXMucGFkTGVuZ3RoKSVyLG49bmV3IEFycmF5KGkrdGhpcy5wYWRMZW5ndGgpO25bMF09MTI4O2Zvcih2YXIgbz0xO288aTtvKyspbltvXT0wO2lmKHQ8PD0zLHRoaXMuZW5kaWFuPT09XCJiaWdcIil7Zm9yKHZhciBoPTg7aDx0aGlzLnBhZExlbmd0aDtoKyspbltvKytdPTA7bltvKytdPTAsbltvKytdPTAsbltvKytdPTAsbltvKytdPTAsbltvKytdPXQ+Pj4yNCYyNTUsbltvKytdPXQ+Pj4xNiYyNTUsbltvKytdPXQ+Pj44JjI1NSxuW28rK109dCYyNTV9ZWxzZSBmb3IobltvKytdPXQmMjU1LG5bbysrXT10Pj4+OCYyNTUsbltvKytdPXQ+Pj4xNiYyNTUsbltvKytdPXQ+Pj4yNCYyNTUsbltvKytdPTAsbltvKytdPTAsbltvKytdPTAsbltvKytdPTAsaD04O2g8dGhpcy5wYWRMZW5ndGg7aCsrKW5bbysrXT0wO3JldHVybiBufTt2YXIgb3I9e30sYWU9e30sRnM9USx1ZT1Gcy5yb3RyMzI7ZnVuY3Rpb24gVHMoZSx0LHIsaSl7aWYoZT09PTApcmV0dXJuIGRmKHQscixpKTtpZihlPT09MXx8ZT09PTMpcmV0dXJuIHZmKHQscixpKTtpZihlPT09MilyZXR1cm4gcGYodCxyLGkpfWFlLmZ0XzE9VHM7ZnVuY3Rpb24gZGYoZSx0LHIpe3JldHVybiBlJnRefmUmcn1hZS5jaDMyPWRmO2Z1bmN0aW9uIHBmKGUsdCxyKXtyZXR1cm4gZSZ0XmUmcl50JnJ9YWUubWFqMzI9cGY7ZnVuY3Rpb24gdmYoZSx0LHIpe3JldHVybiBlXnRecn1hZS5wMzI9dmY7ZnVuY3Rpb24gVXMoZSl7cmV0dXJuIHVlKGUsMiledWUoZSwxMyledWUoZSwyMil9YWUuczBfMjU2PVVzO2Z1bmN0aW9uIGtzKGUpe3JldHVybiB1ZShlLDYpXnVlKGUsMTEpXnVlKGUsMjUpfWFlLnMxXzI1Nj1rcztmdW5jdGlvbiBxcyhlKXtyZXR1cm4gdWUoZSw3KV51ZShlLDE4KV5lPj4+M31hZS5nMF8yNTY9cXM7ZnVuY3Rpb24gS3MoZSl7cmV0dXJuIHVlKGUsMTcpXnVlKGUsMTkpXmU+Pj4xMH1hZS5nMV8yNTY9S3M7dmFyIHNyPVEsSHM9ZnIsenM9YWUsX2k9c3Iucm90bDMyLHdyPXNyLnN1bTMyLExzPXNyLnN1bTMyXzUsanM9enMuZnRfMSxtZj1Icy5CbG9ja0hhc2gsUXM9WzE1MTg1MDAyNDksMTg1OTc3NTM5MywyNDAwOTU5NzA4LDMzOTU0Njk3ODJdO2Z1bmN0aW9uIGhlKCl7aWYoISh0aGlzIGluc3RhbmNlb2YgaGUpKXJldHVybiBuZXcgaGU7bWYuY2FsbCh0aGlzKSx0aGlzLmg9WzE3MzI1ODQxOTMsNDAyMzIzMzQxNywyNTYyMzgzMTAyLDI3MTczMzg3OCwzMjg1Mzc3NTIwXSx0aGlzLlc9bmV3IEFycmF5KDgwKX1zci5pbmhlcml0cyhoZSxtZik7dmFyIEpzPWhlO2hlLmJsb2NrU2l6ZT01MTIsaGUub3V0U2l6ZT0xNjAsaGUuaG1hY1N0cmVuZ3RoPTgwLGhlLnBhZExlbmd0aD02NCxoZS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0LHIpe2Zvcih2YXIgaT10aGlzLlcsbj0wO248MTY7bisrKWlbbl09dFtyK25dO2Zvcig7bjxpLmxlbmd0aDtuKyspaVtuXT1faShpW24tM11eaVtuLThdXmlbbi0xNF1eaVtuLTE2XSwxKTt2YXIgbz10aGlzLmhbMF0saD10aGlzLmhbMV0scD10aGlzLmhbMl0sYj10aGlzLmhbM10sbT10aGlzLmhbNF07Zm9yKG49MDtuPGkubGVuZ3RoO24rKyl7dmFyIHc9fn4obi8yMCkseT1McyhfaShvLDUpLGpzKHcsaCxwLGIpLG0saVtuXSxRc1t3XSk7bT1iLGI9cCxwPV9pKGgsMzApLGg9byxvPXl9dGhpcy5oWzBdPXdyKHRoaXMuaFswXSxvKSx0aGlzLmhbMV09d3IodGhpcy5oWzFdLGgpLHRoaXMuaFsyXT13cih0aGlzLmhbMl0scCksdGhpcy5oWzNdPXdyKHRoaXMuaFszXSxiKSx0aGlzLmhbNF09d3IodGhpcy5oWzRdLG0pfSxoZS5wcm90b3R5cGUuX2RpZ2VzdD1mdW5jdGlvbih0KXtyZXR1cm4gdD09PVwiaGV4XCI/c3IudG9IZXgzMih0aGlzLmgsXCJiaWdcIik6c3Iuc3BsaXQzMih0aGlzLmgsXCJiaWdcIil9O3ZhciBhcj1RLEdzPWZyLHVyPWFlLFlzPXlyLGllPWFyLnN1bTMyLFZzPWFyLnN1bTMyXzQsV3M9YXIuc3VtMzJfNSxYcz11ci5jaDMyLFpzPXVyLm1hajMyLCRzPXVyLnMwXzI1Nix0YT11ci5zMV8yNTYsZWE9dXIuZzBfMjU2LHJhPXVyLmcxXzI1NixnZj1Hcy5CbG9ja0hhc2gsaWE9WzExMTYzNTI0MDgsMTg5OTQ0NzQ0MSwzMDQ5MzIzNDcxLDM5MjEwMDk1NzMsOTYxOTg3MTYzLDE1MDg5NzA5OTMsMjQ1MzYzNTc0OCwyODcwNzYzMjIxLDM2MjQzODEwODAsMzEwNTk4NDAxLDYwNzIyNTI3OCwxNDI2ODgxOTg3LDE5MjUwNzgzODgsMjE2MjA3ODIwNiwyNjE0ODg4MTAzLDMyNDgyMjI1ODAsMzgzNTM5MDQwMSw0MDIyMjI0Nzc0LDI2NDM0NzA3OCw2MDQ4MDc2MjgsNzcwMjU1OTgzLDEyNDkxNTAxMjIsMTU1NTA4MTY5MiwxOTk2MDY0OTg2LDI1NTQyMjA4ODIsMjgyMTgzNDM0OSwyOTUyOTk2ODA4LDMyMTAzMTM2NzEsMzMzNjU3MTg5MSwzNTg0NTI4NzExLDExMzkyNjk5MywzMzgyNDE4OTUsNjY2MzA3MjA1LDc3MzUyOTkxMiwxMjk0NzU3MzcyLDEzOTYxODIyOTEsMTY5NTE4MzcwMCwxOTg2NjYxMDUxLDIxNzcwMjYzNTAsMjQ1Njk1NjAzNywyNzMwNDg1OTIxLDI4MjAzMDI0MTEsMzI1OTczMDgwMCwzMzQ1NzY0NzcxLDM1MTYwNjU4MTcsMzYwMDM1MjgwNCw0MDk0NTcxOTA5LDI3NTQyMzM0NCw0MzAyMjc3MzQsNTA2OTQ4NjE2LDY1OTA2MDU1Niw4ODM5OTc4NzcsOTU4MTM5NTcxLDEzMjI4MjIyMTgsMTUzNzAwMjA2MywxNzQ3ODczNzc5LDE5NTU1NjIyMjIsMjAyNDEwNDgxNSwyMjI3NzMwNDUyLDIzNjE4NTI0MjQsMjQyODQzNjQ3NCwyNzU2NzM0MTg3LDMyMDQwMzE0NzksMzMyOTMyNTI5OF07ZnVuY3Rpb24gY2UoKXtpZighKHRoaXMgaW5zdGFuY2VvZiBjZSkpcmV0dXJuIG5ldyBjZTtnZi5jYWxsKHRoaXMpLHRoaXMuaD1bMTc3OTAzMzcwMywzMTQ0MTM0Mjc3LDEwMTM5MDQyNDIsMjc3MzQ4MDc2MiwxMzU5ODkzMTE5LDI2MDA4MjI5MjQsNTI4NzM0NjM1LDE1NDE0NTkyMjVdLHRoaXMuaz1pYSx0aGlzLlc9bmV3IEFycmF5KDY0KX1hci5pbmhlcml0cyhjZSxnZik7dmFyIEFmPWNlO2NlLmJsb2NrU2l6ZT01MTIsY2Uub3V0U2l6ZT0yNTYsY2UuaG1hY1N0cmVuZ3RoPTE5MixjZS5wYWRMZW5ndGg9NjQsY2UucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCxyKXtmb3IodmFyIGk9dGhpcy5XLG49MDtuPDE2O24rKylpW25dPXRbcituXTtmb3IoO248aS5sZW5ndGg7bisrKWlbbl09VnMocmEoaVtuLTJdKSxpW24tN10sZWEoaVtuLTE1XSksaVtuLTE2XSk7dmFyIG89dGhpcy5oWzBdLGg9dGhpcy5oWzFdLHA9dGhpcy5oWzJdLGI9dGhpcy5oWzNdLG09dGhpcy5oWzRdLHc9dGhpcy5oWzVdLHk9dGhpcy5oWzZdLFM9dGhpcy5oWzddO2ZvcihZcyh0aGlzLmsubGVuZ3RoPT09aS5sZW5ndGgpLG49MDtuPGkubGVuZ3RoO24rKyl7dmFyIEk9V3MoUyx0YShtKSxYcyhtLHcseSksdGhpcy5rW25dLGlbbl0pLE49aWUoJHMobyksWnMobyxoLHApKTtTPXkseT13LHc9bSxtPWllKGIsSSksYj1wLHA9aCxoPW8sbz1pZShJLE4pfXRoaXMuaFswXT1pZSh0aGlzLmhbMF0sbyksdGhpcy5oWzFdPWllKHRoaXMuaFsxXSxoKSx0aGlzLmhbMl09aWUodGhpcy5oWzJdLHApLHRoaXMuaFszXT1pZSh0aGlzLmhbM10sYiksdGhpcy5oWzRdPWllKHRoaXMuaFs0XSxtKSx0aGlzLmhbNV09aWUodGhpcy5oWzVdLHcpLHRoaXMuaFs2XT1pZSh0aGlzLmhbNl0seSksdGhpcy5oWzddPWllKHRoaXMuaFs3XSxTKX0sY2UucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1cImhleFwiP2FyLnRvSGV4MzIodGhpcy5oLFwiYmlnXCIpOmFyLnNwbGl0MzIodGhpcy5oLFwiYmlnXCIpfTt2YXIgQmk9USxiZj1BZjtmdW5jdGlvbiB5ZSgpe2lmKCEodGhpcyBpbnN0YW5jZW9mIHllKSlyZXR1cm4gbmV3IHllO2JmLmNhbGwodGhpcyksdGhpcy5oPVszMjM4MzcxMDMyLDkxNDE1MDY2Myw4MTI3MDI5OTksNDE0NDkxMjY5Nyw0MjkwNzc1ODU3LDE3NTA2MDMwMjUsMTY5NDA3NjgzOSwzMjA0MDc1NDI4XX1CaS5pbmhlcml0cyh5ZSxiZik7dmFyIG5hPXllO3llLmJsb2NrU2l6ZT01MTIseWUub3V0U2l6ZT0yMjQseWUuaG1hY1N0cmVuZ3RoPTE5Mix5ZS5wYWRMZW5ndGg9NjQseWUucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1cImhleFwiP0JpLnRvSGV4MzIodGhpcy5oLnNsaWNlKDAsNyksXCJiaWdcIik6Qmkuc3BsaXQzMih0aGlzLmguc2xpY2UoMCw3KSxcImJpZ1wiKX07dmFyIGp0PVEsZmE9ZnIsb2E9eXIsbGU9anQucm90cjY0X2hpLGRlPWp0LnJvdHI2NF9sbyx5Zj1qdC5zaHI2NF9oaSx3Zj1qdC5zaHI2NF9sbyxCZT1qdC5zdW02NCxDaT1qdC5zdW02NF9oaSxSaT1qdC5zdW02NF9sbyxzYT1qdC5zdW02NF80X2hpLGFhPWp0LnN1bTY0XzRfbG8sdWE9anQuc3VtNjRfNV9oaSxoYT1qdC5zdW02NF81X2xvLHhmPWZhLkJsb2NrSGFzaCxjYT1bMTExNjM1MjQwOCwzNjA5NzY3NDU4LDE4OTk0NDc0NDEsNjAyODkxNzI1LDMwNDkzMjM0NzEsMzk2NDQ4NDM5OSwzOTIxMDA5NTczLDIxNzMyOTU1NDgsOTYxOTg3MTYzLDQwODE2Mjg0NzIsMTUwODk3MDk5MywzMDUzODM0MjY1LDI0NTM2MzU3NDgsMjkzNzY3MTU3OSwyODcwNzYzMjIxLDM2NjQ2MDk1NjAsMzYyNDM4MTA4MCwyNzM0ODgzMzk0LDMxMDU5ODQwMSwxMTY0OTk2NTQyLDYwNzIyNTI3OCwxMzIzNjEwNzY0LDE0MjY4ODE5ODcsMzU5MDMwNDk5NCwxOTI1MDc4Mzg4LDQwNjgxODIzODMsMjE2MjA3ODIwNiw5OTEzMzYxMTMsMjYxNDg4ODEwMyw2MzM4MDMzMTcsMzI0ODIyMjU4MCwzNDc5Nzc0ODY4LDM4MzUzOTA0MDEsMjY2NjYxMzQ1OCw0MDIyMjI0Nzc0LDk0NDcxMTEzOSwyNjQzNDcwNzgsMjM0MTI2Mjc3Myw2MDQ4MDc2MjgsMjAwNzgwMDkzMyw3NzAyNTU5ODMsMTQ5NTk5MDkwMSwxMjQ5MTUwMTIyLDE4NTY0MzEyMzUsMTU1NTA4MTY5MiwzMTc1MjE4MTMyLDE5OTYwNjQ5ODYsMjE5ODk1MDgzNywyNTU0MjIwODgyLDM5OTk3MTkzMzksMjgyMTgzNDM0OSw3NjY3ODQwMTYsMjk1Mjk5NjgwOCwyNTY2NTk0ODc5LDMyMTAzMTM2NzEsMzIwMzMzNzk1NiwzMzM2NTcxODkxLDEwMzQ0NTcwMjYsMzU4NDUyODcxMSwyNDY2OTQ4OTAxLDExMzkyNjk5MywzNzU4MzI2MzgzLDMzODI0MTg5NSwxNjg3MTc5MzYsNjY2MzA3MjA1LDExODgxNzk5NjQsNzczNTI5OTEyLDE1NDYwNDU3MzQsMTI5NDc1NzM3MiwxNTIyODA1NDg1LDEzOTYxODIyOTEsMjY0MzgzMzgyMywxNjk1MTgzNzAwLDIzNDM1MjczOTAsMTk4NjY2MTA1MSwxMDE0NDc3NDgwLDIxNzcwMjYzNTAsMTIwNjc1OTE0MiwyNDU2OTU2MDM3LDM0NDA3NzYyNywyNzMwNDg1OTIxLDEyOTA4NjM0NjAsMjgyMDMwMjQxMSwzMTU4NDU0MjczLDMyNTk3MzA4MDAsMzUwNTk1MjY1NywzMzQ1NzY0NzcxLDEwNjIxNzAwOCwzNTE2MDY1ODE3LDM2MDYwMDgzNDQsMzYwMDM1MjgwNCwxNDMyNzI1Nzc2LDQwOTQ1NzE5MDksMTQ2NzAzMTU5NCwyNzU0MjMzNDQsODUxMTY5NzIwLDQzMDIyNzczNCwzMTAwODIzNzUyLDUwNjk0ODYxNiwxMzYzMjU4MTk1LDY1OTA2MDU1NiwzNzUwNjg1NTkzLDg4Mzk5Nzg3NywzNzg1MDUwMjgwLDk1ODEzOTU3MSwzMzE4MzA3NDI3LDEzMjI4MjIyMTgsMzgxMjcyMzQwMywxNTM3MDAyMDYzLDIwMDMwMzQ5OTUsMTc0Nzg3Mzc3OSwzNjAyMDM2ODk5LDE5NTU1NjIyMjIsMTU3NTk5MDAxMiwyMDI0MTA0ODE1LDExMjU1OTI5MjgsMjIyNzczMDQ1MiwyNzE2OTA0MzA2LDIzNjE4NTI0MjQsNDQyNzc2MDQ0LDI0Mjg0MzY0NzQsNTkzNjk4MzQ0LDI3NTY3MzQxODcsMzczMzExMDI0OSwzMjA0MDMxNDc5LDI5OTkzNTE1NzMsMzMyOTMyNTI5OCwzODE1OTIwNDI3LDMzOTE1Njk2MTQsMzkyODM4MzkwMCwzNTE1MjY3MjcxLDU2NjI4MDcxMSwzOTQwMTg3NjA2LDM0NTQwNjk1MzQsNDExODYzMDI3MSw0MDAwMjM5OTkyLDExNjQxODQ3NCwxOTE0MTM4NTU0LDE3NDI5MjQyMSwyNzMxMDU1MjcwLDI4OTM4MDM1NiwzMjAzOTkzMDA2LDQ2MDM5MzI2OSwzMjA2MjAzMTUsNjg1NDcxNzMzLDU4NzQ5NjgzNiw4NTIxNDI5NzEsMTA4Njc5Mjg1MSwxMDE3MDM2Mjk4LDM2NTU0MzEwMCwxMTI2MDAwNTgwLDI2MTgyOTc2NzYsMTI4ODAzMzQ3MCwzNDA5ODU1MTU4LDE1MDE1MDU5NDgsNDIzNDUwOTg2NiwxNjA3MTY3OTE1LDk4NzE2NzQ2OCwxODE2NDAyMzE2LDEyNDYxODk1OTFdO2Z1bmN0aW9uIG5lKCl7aWYoISh0aGlzIGluc3RhbmNlb2YgbmUpKXJldHVybiBuZXcgbmU7eGYuY2FsbCh0aGlzKSx0aGlzLmg9WzE3NzkwMzM3MDMsNDA4OTIzNTcyMCwzMTQ0MTM0Mjc3LDIyMjc4NzM1OTUsMTAxMzkwNDI0Miw0MjcxMTc1NzIzLDI3NzM0ODA3NjIsMTU5NTc1MDEyOSwxMzU5ODkzMTE5LDI5MTc1NjUxMzcsMjYwMDgyMjkyNCw3MjU1MTExOTksNTI4NzM0NjM1LDQyMTUzODk1NDcsMTU0MTQ1OTIyNSwzMjcwMzMyMDldLHRoaXMuaz1jYSx0aGlzLlc9bmV3IEFycmF5KDE2MCl9anQuaW5oZXJpdHMobmUseGYpO3ZhciBNZj1uZTtuZS5ibG9ja1NpemU9MTAyNCxuZS5vdXRTaXplPTUxMixuZS5obWFjU3RyZW5ndGg9MTkyLG5lLnBhZExlbmd0aD0xMjgsbmUucHJvdG90eXBlLl9wcmVwYXJlQmxvY2s9ZnVuY3Rpb24odCxyKXtmb3IodmFyIGk9dGhpcy5XLG49MDtuPDMyO24rKylpW25dPXRbcituXTtmb3IoO248aS5sZW5ndGg7bis9Mil7dmFyIG89eGEoaVtuLTRdLGlbbi0zXSksaD1NYShpW24tNF0saVtuLTNdKSxwPWlbbi0xNF0sYj1pW24tMTNdLG09eWEoaVtuLTMwXSxpW24tMjldKSx3PXdhKGlbbi0zMF0saVtuLTI5XSkseT1pW24tMzJdLFM9aVtuLTMxXTtpW25dPXNhKG8saCxwLGIsbSx3LHksUyksaVtuKzFdPWFhKG8saCxwLGIsbSx3LHksUyl9fSxuZS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0LHIpe3RoaXMuX3ByZXBhcmVCbG9jayh0LHIpO3ZhciBpPXRoaXMuVyxuPXRoaXMuaFswXSxvPXRoaXMuaFsxXSxoPXRoaXMuaFsyXSxwPXRoaXMuaFszXSxiPXRoaXMuaFs0XSxtPXRoaXMuaFs1XSx3PXRoaXMuaFs2XSx5PXRoaXMuaFs3XSxTPXRoaXMuaFs4XSxJPXRoaXMuaFs5XSxOPXRoaXMuaFsxMF0sQz10aGlzLmhbMTFdLEY9dGhpcy5oWzEyXSxVPXRoaXMuaFsxM10sSj10aGlzLmhbMTRdLEJ0PXRoaXMuaFsxNV07b2EodGhpcy5rLmxlbmd0aD09PWkubGVuZ3RoKTtmb3IodmFyIEc9MDtHPGkubGVuZ3RoO0crPTIpe3ZhciBIPUosej1CdCxQdD1BYShTLEkpLFc9YmEoUyxJKSxSdD1sYShTLEksTixDLEYpLFl0PWRhKFMsSSxOLEMsRixVKSxZPXRoaXMua1tHXSxWdD10aGlzLmtbRysxXSxBPWlbR10sZj1pW0crMV0sYT11YShILHosUHQsVyxSdCxZdCxZLFZ0LEEsZiksYz1oYShILHosUHQsVyxSdCxZdCxZLFZ0LEEsZik7SD1tYShuLG8pLHo9Z2EobixvKSxQdD1wYShuLG8saCxwLGIpLFc9dmEobixvLGgscCxiLG0pO3ZhciBkPUNpKEgseixQdCxXKSxnPVJpKEgseixQdCxXKTtKPUYsQnQ9VSxGPU4sVT1DLE49UyxDPUksUz1DaSh3LHksYSxjKSxJPVJpKHkseSxhLGMpLHc9Yix5PW0sYj1oLG09cCxoPW4scD1vLG49Q2koYSxjLGQsZyksbz1SaShhLGMsZCxnKX1CZSh0aGlzLmgsMCxuLG8pLEJlKHRoaXMuaCwyLGgscCksQmUodGhpcy5oLDQsYixtKSxCZSh0aGlzLmgsNix3LHkpLEJlKHRoaXMuaCw4LFMsSSksQmUodGhpcy5oLDEwLE4sQyksQmUodGhpcy5oLDEyLEYsVSksQmUodGhpcy5oLDE0LEosQnQpfSxuZS5wcm90b3R5cGUuX2RpZ2VzdD1mdW5jdGlvbih0KXtyZXR1cm4gdD09PVwiaGV4XCI/anQudG9IZXgzMih0aGlzLmgsXCJiaWdcIik6anQuc3BsaXQzMih0aGlzLmgsXCJiaWdcIil9O2Z1bmN0aW9uIGxhKGUsdCxyLGksbil7dmFyIG89ZSZyXn5lJm47cmV0dXJuIG88MCYmKG8rPTQyOTQ5NjcyOTYpLG99ZnVuY3Rpb24gZGEoZSx0LHIsaSxuLG8pe3ZhciBoPXQmaV5+dCZvO3JldHVybiBoPDAmJihoKz00Mjk0OTY3Mjk2KSxofWZ1bmN0aW9uIHBhKGUsdCxyLGksbil7dmFyIG89ZSZyXmUmbl5yJm47cmV0dXJuIG88MCYmKG8rPTQyOTQ5NjcyOTYpLG99ZnVuY3Rpb24gdmEoZSx0LHIsaSxuLG8pe3ZhciBoPXQmaV50Jm9eaSZvO3JldHVybiBoPDAmJihoKz00Mjk0OTY3Mjk2KSxofWZ1bmN0aW9uIG1hKGUsdCl7dmFyIHI9bGUoZSx0LDI4KSxpPWxlKHQsZSwyKSxuPWxlKHQsZSw3KSxvPXJeaV5uO3JldHVybiBvPDAmJihvKz00Mjk0OTY3Mjk2KSxvfWZ1bmN0aW9uIGdhKGUsdCl7dmFyIHI9ZGUoZSx0LDI4KSxpPWRlKHQsZSwyKSxuPWRlKHQsZSw3KSxvPXJeaV5uO3JldHVybiBvPDAmJihvKz00Mjk0OTY3Mjk2KSxvfWZ1bmN0aW9uIEFhKGUsdCl7dmFyIHI9bGUoZSx0LDE0KSxpPWxlKGUsdCwxOCksbj1sZSh0LGUsOSksbz1yXmlebjtyZXR1cm4gbzwwJiYobys9NDI5NDk2NzI5Niksb31mdW5jdGlvbiBiYShlLHQpe3ZhciByPWRlKGUsdCwxNCksaT1kZShlLHQsMTgpLG49ZGUodCxlLDkpLG89cl5pXm47cmV0dXJuIG88MCYmKG8rPTQyOTQ5NjcyOTYpLG99ZnVuY3Rpb24geWEoZSx0KXt2YXIgcj1sZShlLHQsMSksaT1sZShlLHQsOCksbj15ZihlLHQsNyksbz1yXmlebjtyZXR1cm4gbzwwJiYobys9NDI5NDk2NzI5Niksb31mdW5jdGlvbiB3YShlLHQpe3ZhciByPWRlKGUsdCwxKSxpPWRlKGUsdCw4KSxuPXdmKGUsdCw3KSxvPXJeaV5uO3JldHVybiBvPDAmJihvKz00Mjk0OTY3Mjk2KSxvfWZ1bmN0aW9uIHhhKGUsdCl7dmFyIHI9bGUoZSx0LDE5KSxpPWxlKHQsZSwyOSksbj15ZihlLHQsNiksbz1yXmlebjtyZXR1cm4gbzwwJiYobys9NDI5NDk2NzI5Niksb31mdW5jdGlvbiBNYShlLHQpe3ZhciByPWRlKGUsdCwxOSksaT1kZSh0LGUsMjkpLG49d2YoZSx0LDYpLG89cl5pXm47cmV0dXJuIG88MCYmKG8rPTQyOTQ5NjcyOTYpLG99dmFyIE9pPVEsRWY9TWY7ZnVuY3Rpb24gd2UoKXtpZighKHRoaXMgaW5zdGFuY2VvZiB3ZSkpcmV0dXJuIG5ldyB3ZTtFZi5jYWxsKHRoaXMpLHRoaXMuaD1bMzQxODA3MDM2NSwzMjM4MzcxMDMyLDE2NTQyNzAyNTAsOTE0MTUwNjYzLDI0Mzg1MjkzNzAsODEyNzAyOTk5LDM1NTQ2MjM2MCw0MTQ0OTEyNjk3LDE3MzE0MDU0MTUsNDI5MDc3NTg1NywyMzk0MTgwMjMxLDE3NTA2MDMwMjUsMzY3NTAwODUyNSwxNjk0MDc2ODM5LDEyMDMwNjI4MTMsMzIwNDA3NTQyOF19T2kuaW5oZXJpdHMod2UsRWYpO3ZhciBFYT13ZTt3ZS5ibG9ja1NpemU9MTAyNCx3ZS5vdXRTaXplPTM4NCx3ZS5obWFjU3RyZW5ndGg9MTkyLHdlLnBhZExlbmd0aD0xMjgsd2UucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1cImhleFwiP09pLnRvSGV4MzIodGhpcy5oLnNsaWNlKDAsMTIpLFwiYmlnXCIpOk9pLnNwbGl0MzIodGhpcy5oLnNsaWNlKDAsMTIpLFwiYmlnXCIpfSxvci5zaGExPUpzLG9yLnNoYTIyND1uYSxvci5zaGEyNTY9QWYsb3Iuc2hhMzg0PUVhLG9yLnNoYTUxMj1NZjt2YXIgU2Y9e30sWGU9USxTYT1mcixUcj1YZS5yb3RsMzIsTmY9WGUuc3VtMzIseHI9WGUuc3VtMzJfMyxJZj1YZS5zdW0zMl80LF9mPVNhLkJsb2NrSGFzaDtmdW5jdGlvbiBwZSgpe2lmKCEodGhpcyBpbnN0YW5jZW9mIHBlKSlyZXR1cm4gbmV3IHBlO19mLmNhbGwodGhpcyksdGhpcy5oPVsxNzMyNTg0MTkzLDQwMjMyMzM0MTcsMjU2MjM4MzEwMiwyNzE3MzM4NzgsMzI4NTM3NzUyMF0sdGhpcy5lbmRpYW49XCJsaXR0bGVcIn1YZS5pbmhlcml0cyhwZSxfZiksU2YucmlwZW1kMTYwPXBlLHBlLmJsb2NrU2l6ZT01MTIscGUub3V0U2l6ZT0xNjAscGUuaG1hY1N0cmVuZ3RoPTE5MixwZS5wYWRMZW5ndGg9NjQscGUucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCxyKXtmb3IodmFyIGk9dGhpcy5oWzBdLG49dGhpcy5oWzFdLG89dGhpcy5oWzJdLGg9dGhpcy5oWzNdLHA9dGhpcy5oWzRdLGI9aSxtPW4sdz1vLHk9aCxTPXAsST0wO0k8ODA7SSsrKXt2YXIgTj1OZihUcihJZihpLEJmKEksbixvLGgpLHRbX2FbSV0rcl0sTmEoSSkpLENhW0ldKSxwKTtpPXAscD1oLGg9VHIobywxMCksbz1uLG49TixOPU5mKFRyKElmKGIsQmYoNzktSSxtLHcseSksdFtCYVtJXStyXSxJYShJKSksUmFbSV0pLFMpLGI9UyxTPXkseT1Ucih3LDEwKSx3PW0sbT1OfU49eHIodGhpcy5oWzFdLG8seSksdGhpcy5oWzFdPXhyKHRoaXMuaFsyXSxoLFMpLHRoaXMuaFsyXT14cih0aGlzLmhbM10scCxiKSx0aGlzLmhbM109eHIodGhpcy5oWzRdLGksbSksdGhpcy5oWzRdPXhyKHRoaXMuaFswXSxuLHcpLHRoaXMuaFswXT1OfSxwZS5wcm90b3R5cGUuX2RpZ2VzdD1mdW5jdGlvbih0KXtyZXR1cm4gdD09PVwiaGV4XCI/WGUudG9IZXgzMih0aGlzLmgsXCJsaXR0bGVcIik6WGUuc3BsaXQzMih0aGlzLmgsXCJsaXR0bGVcIil9O2Z1bmN0aW9uIEJmKGUsdCxyLGkpe3JldHVybiBlPD0xNT90XnJeaTplPD0zMT90JnJ8fnQmaTplPD00Nz8odHx+cileaTplPD02Mz90Jml8ciZ+aTp0XihyfH5pKX1mdW5jdGlvbiBOYShlKXtyZXR1cm4gZTw9MTU/MDplPD0zMT8xNTE4NTAwMjQ5OmU8PTQ3PzE4NTk3NzUzOTM6ZTw9NjM/MjQwMDk1OTcwODoyODQwODUzODM4fWZ1bmN0aW9uIElhKGUpe3JldHVybiBlPD0xNT8xMzUyODI5OTI2OmU8PTMxPzE1NDg2MDM2ODQ6ZTw9NDc/MTgzNjA3MjY5MTplPD02Mz8yMDUzOTk0MjE3OjB9dmFyIF9hPVswLDEsMiwzLDQsNSw2LDcsOCw5LDEwLDExLDEyLDEzLDE0LDE1LDcsNCwxMywxLDEwLDYsMTUsMywxMiwwLDksNSwyLDE0LDExLDgsMywxMCwxNCw0LDksMTUsOCwxLDIsNywwLDYsMTMsMTEsNSwxMiwxLDksMTEsMTAsMCw4LDEyLDQsMTMsMyw3LDE1LDE0LDUsNiwyLDQsMCw1LDksNywxMiwyLDEwLDE0LDEsMyw4LDExLDYsMTUsMTNdLEJhPVs1LDE0LDcsMCw5LDIsMTEsNCwxMyw2LDE1LDgsMSwxMCwzLDEyLDYsMTEsMyw3LDAsMTMsNSwxMCwxNCwxNSw4LDEyLDQsOSwxLDIsMTUsNSwxLDMsNywxNCw2LDksMTEsOCwxMiwyLDEwLDAsNCwxMyw4LDYsNCwxLDMsMTEsMTUsMCw1LDEyLDIsMTMsOSw3LDEwLDE0LDEyLDE1LDEwLDQsMSw1LDgsNyw2LDIsMTMsMTQsMCwzLDksMTFdLENhPVsxMSwxNCwxNSwxMiw1LDgsNyw5LDExLDEzLDE0LDE1LDYsNyw5LDgsNyw2LDgsMTMsMTEsOSw3LDE1LDcsMTIsMTUsOSwxMSw3LDEzLDEyLDExLDEzLDYsNywxNCw5LDEzLDE1LDE0LDgsMTMsNiw1LDEyLDcsNSwxMSwxMiwxNCwxNSwxNCwxNSw5LDgsOSwxNCw1LDYsOCw2LDUsMTIsOSwxNSw1LDExLDYsOCwxMywxMiw1LDEyLDEzLDE0LDExLDgsNSw2XSxSYT1bOCw5LDksMTEsMTMsMTUsMTUsNSw3LDcsOCwxMSwxNCwxNCwxMiw2LDksMTMsMTUsNywxMiw4LDksMTEsNyw3LDEyLDcsNiwxNSwxMywxMSw5LDcsMTUsMTEsOCw2LDYsMTQsMTIsMTMsNSwxNCwxMywxMyw3LDUsMTUsNSw4LDExLDE0LDE0LDYsMTQsNiw5LDEyLDksMTIsNSwxNSw4LDgsNSwxMiw5LDEyLDUsMTQsNiw4LDEzLDYsNSwxNSwxMywxMSwxMV0sT2E9USxQYT15cjtmdW5jdGlvbiBocihlLHQscil7aWYoISh0aGlzIGluc3RhbmNlb2YgaHIpKXJldHVybiBuZXcgaHIoZSx0LHIpO3RoaXMuSGFzaD1lLHRoaXMuYmxvY2tTaXplPWUuYmxvY2tTaXplLzgsdGhpcy5vdXRTaXplPWUub3V0U2l6ZS84LHRoaXMuaW5uZXI9bnVsbCx0aGlzLm91dGVyPW51bGwsdGhpcy5faW5pdChPYS50b0FycmF5KHQscikpfXZhciBEYT1ocjtoci5wcm90b3R5cGUuX2luaXQ9ZnVuY3Rpb24odCl7dC5sZW5ndGg+dGhpcy5ibG9ja1NpemUmJih0PW5ldyB0aGlzLkhhc2goKS51cGRhdGUodCkuZGlnZXN0KCkpLFBhKHQubGVuZ3RoPD10aGlzLmJsb2NrU2l6ZSk7Zm9yKHZhciByPXQubGVuZ3RoO3I8dGhpcy5ibG9ja1NpemU7cisrKXQucHVzaCgwKTtmb3Iocj0wO3I8dC5sZW5ndGg7cisrKXRbcl1ePTU0O2Zvcih0aGlzLmlubmVyPW5ldyB0aGlzLkhhc2goKS51cGRhdGUodCkscj0wO3I8dC5sZW5ndGg7cisrKXRbcl1ePTEwNjt0aGlzLm91dGVyPW5ldyB0aGlzLkhhc2goKS51cGRhdGUodCl9LGhyLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24odCxyKXtyZXR1cm4gdGhpcy5pbm5lci51cGRhdGUodCxyKSx0aGlzfSxoci5wcm90b3R5cGUuZGlnZXN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm91dGVyLnVwZGF0ZSh0aGlzLmlubmVyLmRpZ2VzdCgpKSx0aGlzLm91dGVyLmRpZ2VzdCh0KX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZTt0LnV0aWxzPVEsdC5jb21tb249ZnIsdC5zaGE9b3IsdC5yaXBlbWQ9U2YsdC5obWFjPURhLHQuc2hhMT10LnNoYS5zaGExLHQuc2hhMjU2PXQuc2hhLnNoYTI1Nix0LnNoYTIyND10LnNoYS5zaGEyMjQsdC5zaGEzODQ9dC5zaGEuc2hhMzg0LHQuc2hhNTEyPXQuc2hhLnNoYTUxMix0LnJpcGVtZDE2MD10LnJpcGVtZC5yaXBlbWQxNjB9KHNlKTtmdW5jdGlvbiBjcihlLHQscil7cmV0dXJuIHI9e3BhdGg6dCxleHBvcnRzOnt9LHJlcXVpcmU6ZnVuY3Rpb24oaSxuKXtyZXR1cm4gRmEoaSxuPz9yLnBhdGgpfX0sZShyLHIuZXhwb3J0cyksci5leHBvcnRzfWZ1bmN0aW9uIEZhKCl7dGhyb3cgbmV3IEVycm9yKFwiRHluYW1pYyByZXF1aXJlcyBhcmUgbm90IGN1cnJlbnRseSBzdXBwb3J0ZWQgYnkgQHJvbGx1cC9wbHVnaW4tY29tbW9uanNcIil9dmFyIFBpPUNmO2Z1bmN0aW9uIENmKGUsdCl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKHR8fFwiQXNzZXJ0aW9uIGZhaWxlZFwiKX1DZi5lcXVhbD1mdW5jdGlvbih0LHIsaSl7aWYodCE9cil0aHJvdyBuZXcgRXJyb3IoaXx8XCJBc3NlcnRpb24gZmFpbGVkOiBcIit0K1wiICE9IFwiK3IpfTt2YXIgZmU9Y3IoZnVuY3Rpb24oZSx0KXt2YXIgcj10O2Z1bmN0aW9uIGkoaCxwKXtpZihBcnJheS5pc0FycmF5KGgpKXJldHVybiBoLnNsaWNlKCk7aWYoIWgpcmV0dXJuW107dmFyIGI9W107aWYodHlwZW9mIGghPVwic3RyaW5nXCIpe2Zvcih2YXIgbT0wO208aC5sZW5ndGg7bSsrKWJbbV09aFttXXwwO3JldHVybiBifWlmKHA9PT1cImhleFwiKXtoPWgucmVwbGFjZSgvW15hLXowLTldKy9pZyxcIlwiKSxoLmxlbmd0aCUyIT09MCYmKGg9XCIwXCIraCk7Zm9yKHZhciBtPTA7bTxoLmxlbmd0aDttKz0yKWIucHVzaChwYXJzZUludChoW21dK2hbbSsxXSwxNikpfWVsc2UgZm9yKHZhciBtPTA7bTxoLmxlbmd0aDttKyspe3ZhciB3PWguY2hhckNvZGVBdChtKSx5PXc+PjgsUz13JjI1NTt5P2IucHVzaCh5LFMpOmIucHVzaChTKX1yZXR1cm4gYn1yLnRvQXJyYXk9aTtmdW5jdGlvbiBuKGgpe3JldHVybiBoLmxlbmd0aD09PTE/XCIwXCIraDpofXIuemVybzI9bjtmdW5jdGlvbiBvKGgpe2Zvcih2YXIgcD1cIlwiLGI9MDtiPGgubGVuZ3RoO2IrKylwKz1uKGhbYl0udG9TdHJpbmcoMTYpKTtyZXR1cm4gcH1yLnRvSGV4PW8sci5lbmNvZGU9ZnVuY3Rpb24ocCxiKXtyZXR1cm4gYj09PVwiaGV4XCI/byhwKTpwfX0pLEp0PWNyKGZ1bmN0aW9uKGUsdCl7dmFyIHI9dDtyLmFzc2VydD1QaSxyLnRvQXJyYXk9ZmUudG9BcnJheSxyLnplcm8yPWZlLnplcm8yLHIudG9IZXg9ZmUudG9IZXgsci5lbmNvZGU9ZmUuZW5jb2RlO2Z1bmN0aW9uIGkoYixtLHcpe3ZhciB5PW5ldyBBcnJheShNYXRoLm1heChiLmJpdExlbmd0aCgpLHcpKzEpO3kuZmlsbCgwKTtmb3IodmFyIFM9MTw8bSsxLEk9Yi5jbG9uZSgpLE49MDtOPHkubGVuZ3RoO04rKyl7dmFyIEMsRj1JLmFuZGxuKFMtMSk7SS5pc09kZCgpPyhGPihTPj4xKS0xP0M9KFM+PjEpLUY6Qz1GLEkuaXN1Ym4oQykpOkM9MCx5W05dPUMsSS5pdXNocm4oMSl9cmV0dXJuIHl9ci5nZXROQUY9aTtmdW5jdGlvbiBuKGIsbSl7dmFyIHc9W1tdLFtdXTtiPWIuY2xvbmUoKSxtPW0uY2xvbmUoKTtmb3IodmFyIHk9MCxTPTAsSTtiLmNtcG4oLXkpPjB8fG0uY21wbigtUyk+MDspe3ZhciBOPWIuYW5kbG4oMykreSYzLEM9bS5hbmRsbigzKStTJjM7Tj09PTMmJihOPS0xKSxDPT09MyYmKEM9LTEpO3ZhciBGO04mMT8oST1iLmFuZGxuKDcpK3kmNywoST09PTN8fEk9PT01KSYmQz09PTI/Rj0tTjpGPU4pOkY9MCx3WzBdLnB1c2goRik7dmFyIFU7QyYxPyhJPW0uYW5kbG4oNykrUyY3LChJPT09M3x8ST09PTUpJiZOPT09Mj9VPS1DOlU9Qyk6VT0wLHdbMV0ucHVzaChVKSwyKnk9PT1GKzEmJih5PTEteSksMipTPT09VSsxJiYoUz0xLVMpLGIuaXVzaHJuKDEpLG0uaXVzaHJuKDEpfXJldHVybiB3fXIuZ2V0SlNGPW47ZnVuY3Rpb24gbyhiLG0sdyl7dmFyIHk9XCJfXCIrbTtiLnByb3RvdHlwZVttXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW3ldIT09dm9pZCAwP3RoaXNbeV06dGhpc1t5XT13LmNhbGwodGhpcyl9fXIuY2FjaGVkUHJvcGVydHk9bztmdW5jdGlvbiBoKGIpe3JldHVybiB0eXBlb2YgYj09XCJzdHJpbmdcIj9yLnRvQXJyYXkoYixcImhleFwiKTpifXIucGFyc2VCeXRlcz1oO2Z1bmN0aW9uIHAoYil7cmV0dXJuIG5ldyBLKGIsXCJoZXhcIixcImxlXCIpfXIuaW50RnJvbUxFPXB9KSxVcj1KdC5nZXROQUYsVGE9SnQuZ2V0SlNGLGtyPUp0LmFzc2VydDtmdW5jdGlvbiBDZShlLHQpe3RoaXMudHlwZT1lLHRoaXMucD1uZXcgSyh0LnAsMTYpLHRoaXMucmVkPXQucHJpbWU/Sy5yZWQodC5wcmltZSk6Sy5tb250KHRoaXMucCksdGhpcy56ZXJvPW5ldyBLKDApLnRvUmVkKHRoaXMucmVkKSx0aGlzLm9uZT1uZXcgSygxKS50b1JlZCh0aGlzLnJlZCksdGhpcy50d289bmV3IEsoMikudG9SZWQodGhpcy5yZWQpLHRoaXMubj10Lm4mJm5ldyBLKHQubiwxNiksdGhpcy5nPXQuZyYmdGhpcy5wb2ludEZyb21KU09OKHQuZyx0LmdSZWQpLHRoaXMuX3duYWZUMT1uZXcgQXJyYXkoNCksdGhpcy5fd25hZlQyPW5ldyBBcnJheSg0KSx0aGlzLl93bmFmVDM9bmV3IEFycmF5KDQpLHRoaXMuX3duYWZUND1uZXcgQXJyYXkoNCksdGhpcy5fYml0TGVuZ3RoPXRoaXMubj90aGlzLm4uYml0TGVuZ3RoKCk6MDt2YXIgcj10aGlzLm4mJnRoaXMucC5kaXYodGhpcy5uKTshcnx8ci5jbXBuKDEwMCk+MD90aGlzLnJlZE49bnVsbDoodGhpcy5fbWF4d2VsbFRyaWNrPSEwLHRoaXMucmVkTj10aGlzLm4udG9SZWQodGhpcy5yZWQpKX12YXIgWmU9Q2U7Q2UucHJvdG90eXBlLnBvaW50PWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpfSxDZS5wcm90b3R5cGUudmFsaWRhdGU9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIil9LENlLnByb3RvdHlwZS5fZml4ZWROYWZNdWw9ZnVuY3Rpb24odCxyKXtrcih0LnByZWNvbXB1dGVkKTt2YXIgaT10Ll9nZXREb3VibGVzKCksbj1VcihyLDEsdGhpcy5fYml0TGVuZ3RoKSxvPSgxPDxpLnN0ZXArMSktKGkuc3RlcCUyPT09MD8yOjEpO28vPTM7dmFyIGg9W10scCxiO2ZvcihwPTA7cDxuLmxlbmd0aDtwKz1pLnN0ZXApe2I9MDtmb3IodmFyIG09cCtpLnN0ZXAtMTttPj1wO20tLSliPShiPDwxKStuW21dO2gucHVzaChiKX1mb3IodmFyIHc9dGhpcy5qcG9pbnQobnVsbCxudWxsLG51bGwpLHk9dGhpcy5qcG9pbnQobnVsbCxudWxsLG51bGwpLFM9bztTPjA7Uy0tKXtmb3IocD0wO3A8aC5sZW5ndGg7cCsrKWI9aFtwXSxiPT09Uz95PXkubWl4ZWRBZGQoaS5wb2ludHNbcF0pOmI9PT0tUyYmKHk9eS5taXhlZEFkZChpLnBvaW50c1twXS5uZWcoKSkpO3c9dy5hZGQoeSl9cmV0dXJuIHcudG9QKCl9LENlLnByb3RvdHlwZS5fd25hZk11bD1mdW5jdGlvbih0LHIpe3ZhciBpPTQsbj10Ll9nZXROQUZQb2ludHMoaSk7aT1uLnduZDtmb3IodmFyIG89bi5wb2ludHMsaD1VcihyLGksdGhpcy5fYml0TGVuZ3RoKSxwPXRoaXMuanBvaW50KG51bGwsbnVsbCxudWxsKSxiPWgubGVuZ3RoLTE7Yj49MDtiLS0pe2Zvcih2YXIgbT0wO2I+PTAmJmhbYl09PT0wO2ItLSltKys7aWYoYj49MCYmbSsrLHA9cC5kYmxwKG0pLGI8MClicmVhazt2YXIgdz1oW2JdO2tyKHchPT0wKSx0LnR5cGU9PT1cImFmZmluZVwiP3c+MD9wPXAubWl4ZWRBZGQob1t3LTE+PjFdKTpwPXAubWl4ZWRBZGQob1stdy0xPj4xXS5uZWcoKSk6dz4wP3A9cC5hZGQob1t3LTE+PjFdKTpwPXAuYWRkKG9bLXctMT4+MV0ubmVnKCkpfXJldHVybiB0LnR5cGU9PT1cImFmZmluZVwiP3AudG9QKCk6cH0sQ2UucHJvdG90eXBlLl93bmFmTXVsQWRkPWZ1bmN0aW9uKHQscixpLG4sbyl7dmFyIGg9dGhpcy5fd25hZlQxLHA9dGhpcy5fd25hZlQyLGI9dGhpcy5fd25hZlQzLG09MCx3LHksUztmb3Iodz0wO3c8bjt3Kyspe1M9clt3XTt2YXIgST1TLl9nZXROQUZQb2ludHModCk7aFt3XT1JLnduZCxwW3ddPUkucG9pbnRzfWZvcih3PW4tMTt3Pj0xO3ctPTIpe3ZhciBOPXctMSxDPXc7aWYoaFtOXSE9PTF8fGhbQ10hPT0xKXtiW05dPVVyKGlbTl0saFtOXSx0aGlzLl9iaXRMZW5ndGgpLGJbQ109VXIoaVtDXSxoW0NdLHRoaXMuX2JpdExlbmd0aCksbT1NYXRoLm1heChiW05dLmxlbmd0aCxtKSxtPU1hdGgubWF4KGJbQ10ubGVuZ3RoLG0pO2NvbnRpbnVlfXZhciBGPVtyW05dLG51bGwsbnVsbCxyW0NdXTtyW05dLnkuY21wKHJbQ10ueSk9PT0wPyhGWzFdPXJbTl0uYWRkKHJbQ10pLEZbMl09cltOXS50b0ooKS5taXhlZEFkZChyW0NdLm5lZygpKSk6cltOXS55LmNtcChyW0NdLnkucmVkTmVnKCkpPT09MD8oRlsxXT1yW05dLnRvSigpLm1peGVkQWRkKHJbQ10pLEZbMl09cltOXS5hZGQocltDXS5uZWcoKSkpOihGWzFdPXJbTl0udG9KKCkubWl4ZWRBZGQocltDXSksRlsyXT1yW05dLnRvSigpLm1peGVkQWRkKHJbQ10ubmVnKCkpKTt2YXIgVT1bLTMsLTEsLTUsLTcsMCw3LDUsMSwzXSxKPVRhKGlbTl0saVtDXSk7Zm9yKG09TWF0aC5tYXgoSlswXS5sZW5ndGgsbSksYltOXT1uZXcgQXJyYXkobSksYltDXT1uZXcgQXJyYXkobSkseT0wO3k8bTt5Kyspe3ZhciBCdD1KWzBdW3ldfDAsRz1KWzFdW3ldfDA7YltOXVt5XT1VWyhCdCsxKSozKyhHKzEpXSxiW0NdW3ldPTAscFtOXT1GfX12YXIgSD10aGlzLmpwb2ludChudWxsLG51bGwsbnVsbCksej10aGlzLl93bmFmVDQ7Zm9yKHc9bTt3Pj0wO3ctLSl7Zm9yKHZhciBQdD0wO3c+PTA7KXt2YXIgVz0hMDtmb3IoeT0wO3k8bjt5Kyspelt5XT1iW3ldW3ddfDAselt5XSE9PTAmJihXPSExKTtpZighVylicmVhaztQdCsrLHctLX1pZih3Pj0wJiZQdCsrLEg9SC5kYmxwKFB0KSx3PDApYnJlYWs7Zm9yKHk9MDt5PG47eSsrKXt2YXIgUnQ9elt5XTtSdCE9PTAmJihSdD4wP1M9cFt5XVtSdC0xPj4xXTpSdDwwJiYoUz1wW3ldWy1SdC0xPj4xXS5uZWcoKSksUy50eXBlPT09XCJhZmZpbmVcIj9IPUgubWl4ZWRBZGQoUyk6SD1ILmFkZChTKSl9fWZvcih3PTA7dzxuO3crKylwW3ddPW51bGw7cmV0dXJuIG8/SDpILnRvUCgpfTtmdW5jdGlvbiBYdChlLHQpe3RoaXMuY3VydmU9ZSx0aGlzLnR5cGU9dCx0aGlzLnByZWNvbXB1dGVkPW51bGx9Q2UuQmFzZVBvaW50PVh0LFh0LnByb3RvdHlwZS5lcT1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKX0sWHQucHJvdG90eXBlLnZhbGlkYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3VydmUudmFsaWRhdGUodGhpcyl9LENlLnByb3RvdHlwZS5kZWNvZGVQb2ludD1mdW5jdGlvbih0LHIpe3Q9SnQudG9BcnJheSh0LHIpO3ZhciBpPXRoaXMucC5ieXRlTGVuZ3RoKCk7aWYoKHRbMF09PT00fHx0WzBdPT09Nnx8dFswXT09PTcpJiZ0Lmxlbmd0aC0xPT09MippKXt0WzBdPT09Nj9rcih0W3QubGVuZ3RoLTFdJTI9PT0wKTp0WzBdPT09NyYma3IodFt0Lmxlbmd0aC0xXSUyPT09MSk7dmFyIG49dGhpcy5wb2ludCh0LnNsaWNlKDEsMStpKSx0LnNsaWNlKDEraSwxKzIqaSkpO3JldHVybiBufWVsc2UgaWYoKHRbMF09PT0yfHx0WzBdPT09MykmJnQubGVuZ3RoLTE9PT1pKXJldHVybiB0aGlzLnBvaW50RnJvbVgodC5zbGljZSgxLDEraSksdFswXT09PTMpO3Rocm93IG5ldyBFcnJvcihcIlVua25vd24gcG9pbnQgZm9ybWF0XCIpfSxYdC5wcm90b3R5cGUuZW5jb2RlQ29tcHJlc3NlZD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5lbmNvZGUodCwhMCl9LFh0LnByb3RvdHlwZS5fZW5jb2RlPWZ1bmN0aW9uKHQpe3ZhciByPXRoaXMuY3VydmUucC5ieXRlTGVuZ3RoKCksaT10aGlzLmdldFgoKS50b0FycmF5KFwiYmVcIixyKTtyZXR1cm4gdD9bdGhpcy5nZXRZKCkuaXNFdmVuKCk/MjozXS5jb25jYXQoaSk6WzRdLmNvbmNhdChpLHRoaXMuZ2V0WSgpLnRvQXJyYXkoXCJiZVwiLHIpKX0sWHQucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbih0LHIpe3JldHVybiBKdC5lbmNvZGUodGhpcy5fZW5jb2RlKHIpLHQpfSxYdC5wcm90b3R5cGUucHJlY29tcHV0ZT1mdW5jdGlvbih0KXtpZih0aGlzLnByZWNvbXB1dGVkKXJldHVybiB0aGlzO3ZhciByPXtkb3VibGVzOm51bGwsbmFmOm51bGwsYmV0YTpudWxsfTtyZXR1cm4gci5uYWY9dGhpcy5fZ2V0TkFGUG9pbnRzKDgpLHIuZG91Ymxlcz10aGlzLl9nZXREb3VibGVzKDQsdCksci5iZXRhPXRoaXMuX2dldEJldGEoKSx0aGlzLnByZWNvbXB1dGVkPXIsdGhpc30sWHQucHJvdG90eXBlLl9oYXNEb3VibGVzPWZ1bmN0aW9uKHQpe2lmKCF0aGlzLnByZWNvbXB1dGVkKXJldHVybiExO3ZhciByPXRoaXMucHJlY29tcHV0ZWQuZG91YmxlcztyZXR1cm4gcj9yLnBvaW50cy5sZW5ndGg+PU1hdGguY2VpbCgodC5iaXRMZW5ndGgoKSsxKS9yLnN0ZXApOiExfSxYdC5wcm90b3R5cGUuX2dldERvdWJsZXM9ZnVuY3Rpb24odCxyKXtpZih0aGlzLnByZWNvbXB1dGVkJiZ0aGlzLnByZWNvbXB1dGVkLmRvdWJsZXMpcmV0dXJuIHRoaXMucHJlY29tcHV0ZWQuZG91Ymxlcztmb3IodmFyIGk9W3RoaXNdLG49dGhpcyxvPTA7bzxyO28rPXQpe2Zvcih2YXIgaD0wO2g8dDtoKyspbj1uLmRibCgpO2kucHVzaChuKX1yZXR1cm57c3RlcDp0LHBvaW50czppfX0sWHQucHJvdG90eXBlLl9nZXROQUZQb2ludHM9ZnVuY3Rpb24odCl7aWYodGhpcy5wcmVjb21wdXRlZCYmdGhpcy5wcmVjb21wdXRlZC5uYWYpcmV0dXJuIHRoaXMucHJlY29tcHV0ZWQubmFmO2Zvcih2YXIgcj1bdGhpc10saT0oMTw8dCktMSxuPWk9PT0xP251bGw6dGhpcy5kYmwoKSxvPTE7bzxpO28rKylyW29dPXJbby0xXS5hZGQobik7cmV0dXJue3duZDp0LHBvaW50czpyfX0sWHQucHJvdG90eXBlLl9nZXRCZXRhPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LFh0LnByb3RvdHlwZS5kYmxwPWZ1bmN0aW9uKHQpe2Zvcih2YXIgcj10aGlzLGk9MDtpPHQ7aSsrKXI9ci5kYmwoKTtyZXR1cm4gcn07dmFyIERpPWNyKGZ1bmN0aW9uKGUpe3R5cGVvZiBPYmplY3QuY3JlYXRlPT1cImZ1bmN0aW9uXCI/ZS5leHBvcnRzPWZ1bmN0aW9uKHIsaSl7aSYmKHIuc3VwZXJfPWksci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShpLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnIsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSkpfTplLmV4cG9ydHM9ZnVuY3Rpb24ocixpKXtpZihpKXtyLnN1cGVyXz1pO3ZhciBuPWZ1bmN0aW9uKCl7fTtuLnByb3RvdHlwZT1pLnByb3RvdHlwZSxyLnByb3RvdHlwZT1uZXcgbixyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1yfX19KSxVYT1KdC5hc3NlcnQ7ZnVuY3Rpb24gWnQoZSl7WmUuY2FsbCh0aGlzLFwic2hvcnRcIixlKSx0aGlzLmE9bmV3IEsoZS5hLDE2KS50b1JlZCh0aGlzLnJlZCksdGhpcy5iPW5ldyBLKGUuYiwxNikudG9SZWQodGhpcy5yZWQpLHRoaXMudGludj10aGlzLnR3by5yZWRJbnZtKCksdGhpcy56ZXJvQT10aGlzLmEuZnJvbVJlZCgpLmNtcG4oMCk9PT0wLHRoaXMudGhyZWVBPXRoaXMuYS5mcm9tUmVkKCkuc3ViKHRoaXMucCkuY21wbigtMyk9PT0wLHRoaXMuZW5kbz10aGlzLl9nZXRFbmRvbW9ycGhpc20oZSksdGhpcy5fZW5kb1duYWZUMT1uZXcgQXJyYXkoNCksdGhpcy5fZW5kb1duYWZUMj1uZXcgQXJyYXkoNCl9RGkoWnQsWmUpO3ZhciBrYT1adDtadC5wcm90b3R5cGUuX2dldEVuZG9tb3JwaGlzbT1mdW5jdGlvbih0KXtpZighKCF0aGlzLnplcm9BfHwhdGhpcy5nfHwhdGhpcy5ufHx0aGlzLnAubW9kbigzKSE9PTEpKXt2YXIgcixpO2lmKHQuYmV0YSlyPW5ldyBLKHQuYmV0YSwxNikudG9SZWQodGhpcy5yZWQpO2Vsc2V7dmFyIG49dGhpcy5fZ2V0RW5kb1Jvb3RzKHRoaXMucCk7cj1uWzBdLmNtcChuWzFdKTwwP25bMF06blsxXSxyPXIudG9SZWQodGhpcy5yZWQpfWlmKHQubGFtYmRhKWk9bmV3IEsodC5sYW1iZGEsMTYpO2Vsc2V7dmFyIG89dGhpcy5fZ2V0RW5kb1Jvb3RzKHRoaXMubik7dGhpcy5nLm11bChvWzBdKS54LmNtcCh0aGlzLmcueC5yZWRNdWwocikpPT09MD9pPW9bMF06KGk9b1sxXSxVYSh0aGlzLmcubXVsKGkpLnguY21wKHRoaXMuZy54LnJlZE11bChyKSk9PT0wKSl9dmFyIGg7cmV0dXJuIHQuYmFzaXM/aD10LmJhc2lzLm1hcChmdW5jdGlvbihwKXtyZXR1cm57YTpuZXcgSyhwLmEsMTYpLGI6bmV3IEsocC5iLDE2KX19KTpoPXRoaXMuX2dldEVuZG9CYXNpcyhpKSx7YmV0YTpyLGxhbWJkYTppLGJhc2lzOmh9fX0sWnQucHJvdG90eXBlLl9nZXRFbmRvUm9vdHM9ZnVuY3Rpb24odCl7dmFyIHI9dD09PXRoaXMucD90aGlzLnJlZDpLLm1vbnQodCksaT1uZXcgSygyKS50b1JlZChyKS5yZWRJbnZtKCksbj1pLnJlZE5lZygpLG89bmV3IEsoMykudG9SZWQocikucmVkTmVnKCkucmVkU3FydCgpLnJlZE11bChpKSxoPW4ucmVkQWRkKG8pLmZyb21SZWQoKSxwPW4ucmVkU3ViKG8pLmZyb21SZWQoKTtyZXR1cm5baCxwXX0sWnQucHJvdG90eXBlLl9nZXRFbmRvQmFzaXM9ZnVuY3Rpb24odCl7Zm9yKHZhciByPXRoaXMubi51c2hybihNYXRoLmZsb29yKHRoaXMubi5iaXRMZW5ndGgoKS8yKSksaT10LG49dGhpcy5uLmNsb25lKCksbz1uZXcgSygxKSxoPW5ldyBLKDApLHA9bmV3IEsoMCksYj1uZXcgSygxKSxtLHcseSxTLEksTixDLEY9MCxVLEo7aS5jbXBuKDApIT09MDspe3ZhciBCdD1uLmRpdihpKTtVPW4uc3ViKEJ0Lm11bChpKSksSj1wLnN1YihCdC5tdWwobykpO3ZhciBHPWIuc3ViKEJ0Lm11bChoKSk7aWYoIXkmJlUuY21wKHIpPDApbT1DLm5lZygpLHc9byx5PVUubmVnKCksUz1KO2Vsc2UgaWYoeSYmKytGPT09MilicmVhaztDPVUsbj1pLGk9VSxwPW8sbz1KLGI9aCxoPUd9ST1VLm5lZygpLE49Sjt2YXIgSD15LnNxcigpLmFkZChTLnNxcigpKSx6PUkuc3FyKCkuYWRkKE4uc3FyKCkpO3JldHVybiB6LmNtcChIKT49MCYmKEk9bSxOPXcpLHkubmVnYXRpdmUmJih5PXkubmVnKCksUz1TLm5lZygpKSxJLm5lZ2F0aXZlJiYoST1JLm5lZygpLE49Ti5uZWcoKSksW3thOnksYjpTfSx7YTpJLGI6Tn1dfSxadC5wcm90b3R5cGUuX2VuZG9TcGxpdD1mdW5jdGlvbih0KXt2YXIgcj10aGlzLmVuZG8uYmFzaXMsaT1yWzBdLG49clsxXSxvPW4uYi5tdWwodCkuZGl2Um91bmQodGhpcy5uKSxoPWkuYi5uZWcoKS5tdWwodCkuZGl2Um91bmQodGhpcy5uKSxwPW8ubXVsKGkuYSksYj1oLm11bChuLmEpLG09by5tdWwoaS5iKSx3PWgubXVsKG4uYikseT10LnN1YihwKS5zdWIoYiksUz1tLmFkZCh3KS5uZWcoKTtyZXR1cm57azE6eSxrMjpTfX0sWnQucHJvdG90eXBlLnBvaW50RnJvbVg9ZnVuY3Rpb24odCxyKXt0PW5ldyBLKHQsMTYpLHQucmVkfHwodD10LnRvUmVkKHRoaXMucmVkKSk7dmFyIGk9dC5yZWRTcXIoKS5yZWRNdWwodCkucmVkSUFkZCh0LnJlZE11bCh0aGlzLmEpKS5yZWRJQWRkKHRoaXMuYiksbj1pLnJlZFNxcnQoKTtpZihuLnJlZFNxcigpLnJlZFN1YihpKS5jbXAodGhpcy56ZXJvKSE9PTApdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBwb2ludFwiKTt2YXIgbz1uLmZyb21SZWQoKS5pc09kZCgpO3JldHVybihyJiYhb3x8IXImJm8pJiYobj1uLnJlZE5lZygpKSx0aGlzLnBvaW50KHQsbil9LFp0LnByb3RvdHlwZS52YWxpZGF0ZT1mdW5jdGlvbih0KXtpZih0LmluZilyZXR1cm4hMDt2YXIgcj10LngsaT10Lnksbj10aGlzLmEucmVkTXVsKHIpLG89ci5yZWRTcXIoKS5yZWRNdWwocikucmVkSUFkZChuKS5yZWRJQWRkKHRoaXMuYik7cmV0dXJuIGkucmVkU3FyKCkucmVkSVN1YihvKS5jbXBuKDApPT09MH0sWnQucHJvdG90eXBlLl9lbmRvV25hZk11bEFkZD1mdW5jdGlvbih0LHIsaSl7Zm9yKHZhciBuPXRoaXMuX2VuZG9XbmFmVDEsbz10aGlzLl9lbmRvV25hZlQyLGg9MDtoPHQubGVuZ3RoO2grKyl7dmFyIHA9dGhpcy5fZW5kb1NwbGl0KHJbaF0pLGI9dFtoXSxtPWIuX2dldEJldGEoKTtwLmsxLm5lZ2F0aXZlJiYocC5rMS5pbmVnKCksYj1iLm5lZyghMCkpLHAuazIubmVnYXRpdmUmJihwLmsyLmluZWcoKSxtPW0ubmVnKCEwKSksbltoKjJdPWIsbltoKjIrMV09bSxvW2gqMl09cC5rMSxvW2gqMisxXT1wLmsyfWZvcih2YXIgdz10aGlzLl93bmFmTXVsQWRkKDEsbixvLGgqMixpKSx5PTA7eTxoKjI7eSsrKW5beV09bnVsbCxvW3ldPW51bGw7cmV0dXJuIHd9O2Z1bmN0aW9uIEZ0KGUsdCxyLGkpe1plLkJhc2VQb2ludC5jYWxsKHRoaXMsZSxcImFmZmluZVwiKSx0PT09bnVsbCYmcj09PW51bGw/KHRoaXMueD1udWxsLHRoaXMueT1udWxsLHRoaXMuaW5mPSEwKToodGhpcy54PW5ldyBLKHQsMTYpLHRoaXMueT1uZXcgSyhyLDE2KSxpJiYodGhpcy54LmZvcmNlUmVkKHRoaXMuY3VydmUucmVkKSx0aGlzLnkuZm9yY2VSZWQodGhpcy5jdXJ2ZS5yZWQpKSx0aGlzLngucmVkfHwodGhpcy54PXRoaXMueC50b1JlZCh0aGlzLmN1cnZlLnJlZCkpLHRoaXMueS5yZWR8fCh0aGlzLnk9dGhpcy55LnRvUmVkKHRoaXMuY3VydmUucmVkKSksdGhpcy5pbmY9ITEpfURpKEZ0LFplLkJhc2VQb2ludCksWnQucHJvdG90eXBlLnBvaW50PWZ1bmN0aW9uKHQscixpKXtyZXR1cm4gbmV3IEZ0KHRoaXMsdCxyLGkpfSxadC5wcm90b3R5cGUucG9pbnRGcm9tSlNPTj1mdW5jdGlvbih0LHIpe3JldHVybiBGdC5mcm9tSlNPTih0aGlzLHQscil9LEZ0LnByb3RvdHlwZS5fZ2V0QmV0YT1mdW5jdGlvbigpe2lmKHRoaXMuY3VydmUuZW5kbyl7dmFyIHQ9dGhpcy5wcmVjb21wdXRlZDtpZih0JiZ0LmJldGEpcmV0dXJuIHQuYmV0YTt2YXIgcj10aGlzLmN1cnZlLnBvaW50KHRoaXMueC5yZWRNdWwodGhpcy5jdXJ2ZS5lbmRvLmJldGEpLHRoaXMueSk7aWYodCl7dmFyIGk9dGhpcy5jdXJ2ZSxuPWZ1bmN0aW9uKG8pe3JldHVybiBpLnBvaW50KG8ueC5yZWRNdWwoaS5lbmRvLmJldGEpLG8ueSl9O3QuYmV0YT1yLHIucHJlY29tcHV0ZWQ9e2JldGE6bnVsbCxuYWY6dC5uYWYmJnt3bmQ6dC5uYWYud25kLHBvaW50czp0Lm5hZi5wb2ludHMubWFwKG4pfSxkb3VibGVzOnQuZG91YmxlcyYme3N0ZXA6dC5kb3VibGVzLnN0ZXAscG9pbnRzOnQuZG91Ymxlcy5wb2ludHMubWFwKG4pfX19cmV0dXJuIHJ9fSxGdC5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJlY29tcHV0ZWQ/W3RoaXMueCx0aGlzLnksdGhpcy5wcmVjb21wdXRlZCYme2RvdWJsZXM6dGhpcy5wcmVjb21wdXRlZC5kb3VibGVzJiZ7c3RlcDp0aGlzLnByZWNvbXB1dGVkLmRvdWJsZXMuc3RlcCxwb2ludHM6dGhpcy5wcmVjb21wdXRlZC5kb3VibGVzLnBvaW50cy5zbGljZSgxKX0sbmFmOnRoaXMucHJlY29tcHV0ZWQubmFmJiZ7d25kOnRoaXMucHJlY29tcHV0ZWQubmFmLnduZCxwb2ludHM6dGhpcy5wcmVjb21wdXRlZC5uYWYucG9pbnRzLnNsaWNlKDEpfX1dOlt0aGlzLngsdGhpcy55XX0sRnQuZnJvbUpTT049ZnVuY3Rpb24odCxyLGkpe3R5cGVvZiByPT1cInN0cmluZ1wiJiYocj1KU09OLnBhcnNlKHIpKTt2YXIgbj10LnBvaW50KHJbMF0sclsxXSxpKTtpZighclsyXSlyZXR1cm4gbjtmdW5jdGlvbiBvKHApe3JldHVybiB0LnBvaW50KHBbMF0scFsxXSxpKX12YXIgaD1yWzJdO3JldHVybiBuLnByZWNvbXB1dGVkPXtiZXRhOm51bGwsZG91YmxlczpoLmRvdWJsZXMmJntzdGVwOmguZG91Ymxlcy5zdGVwLHBvaW50czpbbl0uY29uY2F0KGguZG91Ymxlcy5wb2ludHMubWFwKG8pKX0sbmFmOmgubmFmJiZ7d25kOmgubmFmLnduZCxwb2ludHM6W25dLmNvbmNhdChoLm5hZi5wb2ludHMubWFwKG8pKX19LG59LEZ0LnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNJbmZpbml0eSgpP1wiPEVDIFBvaW50IEluZmluaXR5PlwiOlwiPEVDIFBvaW50IHg6IFwiK3RoaXMueC5mcm9tUmVkKCkudG9TdHJpbmcoMTYsMikrXCIgeTogXCIrdGhpcy55LmZyb21SZWQoKS50b1N0cmluZygxNiwyKStcIj5cIn0sRnQucHJvdG90eXBlLmlzSW5maW5pdHk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbmZ9LEZ0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCl7aWYodGhpcy5pbmYpcmV0dXJuIHQ7aWYodC5pbmYpcmV0dXJuIHRoaXM7aWYodGhpcy5lcSh0KSlyZXR1cm4gdGhpcy5kYmwoKTtpZih0aGlzLm5lZygpLmVxKHQpKXJldHVybiB0aGlzLmN1cnZlLnBvaW50KG51bGwsbnVsbCk7aWYodGhpcy54LmNtcCh0LngpPT09MClyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChudWxsLG51bGwpO3ZhciByPXRoaXMueS5yZWRTdWIodC55KTtyLmNtcG4oMCkhPT0wJiYocj1yLnJlZE11bCh0aGlzLngucmVkU3ViKHQueCkucmVkSW52bSgpKSk7dmFyIGk9ci5yZWRTcXIoKS5yZWRJU3ViKHRoaXMueCkucmVkSVN1Yih0LngpLG49ci5yZWRNdWwodGhpcy54LnJlZFN1YihpKSkucmVkSVN1Yih0aGlzLnkpO3JldHVybiB0aGlzLmN1cnZlLnBvaW50KGksbil9LEZ0LnByb3RvdHlwZS5kYmw9ZnVuY3Rpb24oKXtpZih0aGlzLmluZilyZXR1cm4gdGhpczt2YXIgdD10aGlzLnkucmVkQWRkKHRoaXMueSk7aWYodC5jbXBuKDApPT09MClyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChudWxsLG51bGwpO3ZhciByPXRoaXMuY3VydmUuYSxpPXRoaXMueC5yZWRTcXIoKSxuPXQucmVkSW52bSgpLG89aS5yZWRBZGQoaSkucmVkSUFkZChpKS5yZWRJQWRkKHIpLnJlZE11bChuKSxoPW8ucmVkU3FyKCkucmVkSVN1Yih0aGlzLngucmVkQWRkKHRoaXMueCkpLHA9by5yZWRNdWwodGhpcy54LnJlZFN1YihoKSkucmVkSVN1Yih0aGlzLnkpO3JldHVybiB0aGlzLmN1cnZlLnBvaW50KGgscCl9LEZ0LnByb3RvdHlwZS5nZXRYPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueC5mcm9tUmVkKCl9LEZ0LnByb3RvdHlwZS5nZXRZPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueS5mcm9tUmVkKCl9LEZ0LnByb3RvdHlwZS5tdWw9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9bmV3IEsodCwxNiksdGhpcy5pc0luZmluaXR5KCk/dGhpczp0aGlzLl9oYXNEb3VibGVzKHQpP3RoaXMuY3VydmUuX2ZpeGVkTmFmTXVsKHRoaXMsdCk6dGhpcy5jdXJ2ZS5lbmRvP3RoaXMuY3VydmUuX2VuZG9XbmFmTXVsQWRkKFt0aGlzXSxbdF0pOnRoaXMuY3VydmUuX3duYWZNdWwodGhpcyx0KX0sRnQucHJvdG90eXBlLm11bEFkZD1mdW5jdGlvbih0LHIsaSl7dmFyIG49W3RoaXMscl0sbz1bdCxpXTtyZXR1cm4gdGhpcy5jdXJ2ZS5lbmRvP3RoaXMuY3VydmUuX2VuZG9XbmFmTXVsQWRkKG4sbyk6dGhpcy5jdXJ2ZS5fd25hZk11bEFkZCgxLG4sbywyKX0sRnQucHJvdG90eXBlLmptdWxBZGQ9ZnVuY3Rpb24odCxyLGkpe3ZhciBuPVt0aGlzLHJdLG89W3QsaV07cmV0dXJuIHRoaXMuY3VydmUuZW5kbz90aGlzLmN1cnZlLl9lbmRvV25hZk11bEFkZChuLG8sITApOnRoaXMuY3VydmUuX3duYWZNdWxBZGQoMSxuLG8sMiwhMCl9LEZ0LnByb3RvdHlwZS5lcT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcz09PXR8fHRoaXMuaW5mPT09dC5pbmYmJih0aGlzLmluZnx8dGhpcy54LmNtcCh0LngpPT09MCYmdGhpcy55LmNtcCh0LnkpPT09MCl9LEZ0LnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24odCl7aWYodGhpcy5pbmYpcmV0dXJuIHRoaXM7dmFyIHI9dGhpcy5jdXJ2ZS5wb2ludCh0aGlzLngsdGhpcy55LnJlZE5lZygpKTtpZih0JiZ0aGlzLnByZWNvbXB1dGVkKXt2YXIgaT10aGlzLnByZWNvbXB1dGVkLG49ZnVuY3Rpb24obyl7cmV0dXJuIG8ubmVnKCl9O3IucHJlY29tcHV0ZWQ9e25hZjppLm5hZiYme3duZDppLm5hZi53bmQscG9pbnRzOmkubmFmLnBvaW50cy5tYXAobil9LGRvdWJsZXM6aS5kb3VibGVzJiZ7c3RlcDppLmRvdWJsZXMuc3RlcCxwb2ludHM6aS5kb3VibGVzLnBvaW50cy5tYXAobil9fX1yZXR1cm4gcn0sRnQucHJvdG90eXBlLnRvSj1mdW5jdGlvbigpe2lmKHRoaXMuaW5mKXJldHVybiB0aGlzLmN1cnZlLmpwb2ludChudWxsLG51bGwsbnVsbCk7dmFyIHQ9dGhpcy5jdXJ2ZS5qcG9pbnQodGhpcy54LHRoaXMueSx0aGlzLmN1cnZlLm9uZSk7cmV0dXJuIHR9O2Z1bmN0aW9uIFR0KGUsdCxyLGkpe1plLkJhc2VQb2ludC5jYWxsKHRoaXMsZSxcImphY29iaWFuXCIpLHQ9PT1udWxsJiZyPT09bnVsbCYmaT09PW51bGw/KHRoaXMueD10aGlzLmN1cnZlLm9uZSx0aGlzLnk9dGhpcy5jdXJ2ZS5vbmUsdGhpcy56PW5ldyBLKDApKToodGhpcy54PW5ldyBLKHQsMTYpLHRoaXMueT1uZXcgSyhyLDE2KSx0aGlzLno9bmV3IEsoaSwxNikpLHRoaXMueC5yZWR8fCh0aGlzLng9dGhpcy54LnRvUmVkKHRoaXMuY3VydmUucmVkKSksdGhpcy55LnJlZHx8KHRoaXMueT10aGlzLnkudG9SZWQodGhpcy5jdXJ2ZS5yZWQpKSx0aGlzLnoucmVkfHwodGhpcy56PXRoaXMuei50b1JlZCh0aGlzLmN1cnZlLnJlZCkpLHRoaXMuek9uZT10aGlzLno9PT10aGlzLmN1cnZlLm9uZX1EaShUdCxaZS5CYXNlUG9pbnQpLFp0LnByb3RvdHlwZS5qcG9pbnQ9ZnVuY3Rpb24odCxyLGkpe3JldHVybiBuZXcgVHQodGhpcyx0LHIsaSl9LFR0LnByb3RvdHlwZS50b1A9ZnVuY3Rpb24oKXtpZih0aGlzLmlzSW5maW5pdHkoKSlyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChudWxsLG51bGwpO3ZhciB0PXRoaXMuei5yZWRJbnZtKCkscj10LnJlZFNxcigpLGk9dGhpcy54LnJlZE11bChyKSxuPXRoaXMueS5yZWRNdWwocikucmVkTXVsKHQpO3JldHVybiB0aGlzLmN1cnZlLnBvaW50KGksbil9LFR0LnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQodGhpcy54LHRoaXMueS5yZWROZWcoKSx0aGlzLnopfSxUdC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe2lmKHRoaXMuaXNJbmZpbml0eSgpKXJldHVybiB0O2lmKHQuaXNJbmZpbml0eSgpKXJldHVybiB0aGlzO3ZhciByPXQuei5yZWRTcXIoKSxpPXRoaXMuei5yZWRTcXIoKSxuPXRoaXMueC5yZWRNdWwociksbz10LngucmVkTXVsKGkpLGg9dGhpcy55LnJlZE11bChyLnJlZE11bCh0LnopKSxwPXQueS5yZWRNdWwoaS5yZWRNdWwodGhpcy56KSksYj1uLnJlZFN1YihvKSxtPWgucmVkU3ViKHApO2lmKGIuY21wbigwKT09PTApcmV0dXJuIG0uY21wbigwKSE9PTA/dGhpcy5jdXJ2ZS5qcG9pbnQobnVsbCxudWxsLG51bGwpOnRoaXMuZGJsKCk7dmFyIHc9Yi5yZWRTcXIoKSx5PXcucmVkTXVsKGIpLFM9bi5yZWRNdWwodyksST1tLnJlZFNxcigpLnJlZElBZGQoeSkucmVkSVN1YihTKS5yZWRJU3ViKFMpLE49bS5yZWRNdWwoUy5yZWRJU3ViKEkpKS5yZWRJU3ViKGgucmVkTXVsKHkpKSxDPXRoaXMuei5yZWRNdWwodC56KS5yZWRNdWwoYik7cmV0dXJuIHRoaXMuY3VydmUuanBvaW50KEksTixDKX0sVHQucHJvdG90eXBlLm1peGVkQWRkPWZ1bmN0aW9uKHQpe2lmKHRoaXMuaXNJbmZpbml0eSgpKXJldHVybiB0LnRvSigpO2lmKHQuaXNJbmZpbml0eSgpKXJldHVybiB0aGlzO3ZhciByPXRoaXMuei5yZWRTcXIoKSxpPXRoaXMueCxuPXQueC5yZWRNdWwociksbz10aGlzLnksaD10LnkucmVkTXVsKHIpLnJlZE11bCh0aGlzLnopLHA9aS5yZWRTdWIobiksYj1vLnJlZFN1YihoKTtpZihwLmNtcG4oMCk9PT0wKXJldHVybiBiLmNtcG4oMCkhPT0wP3RoaXMuY3VydmUuanBvaW50KG51bGwsbnVsbCxudWxsKTp0aGlzLmRibCgpO3ZhciBtPXAucmVkU3FyKCksdz1tLnJlZE11bChwKSx5PWkucmVkTXVsKG0pLFM9Yi5yZWRTcXIoKS5yZWRJQWRkKHcpLnJlZElTdWIoeSkucmVkSVN1Yih5KSxJPWIucmVkTXVsKHkucmVkSVN1YihTKSkucmVkSVN1YihvLnJlZE11bCh3KSksTj10aGlzLnoucmVkTXVsKHApO3JldHVybiB0aGlzLmN1cnZlLmpwb2ludChTLEksTil9LFR0LnByb3RvdHlwZS5kYmxwPWZ1bmN0aW9uKHQpe2lmKHQ9PT0wKXJldHVybiB0aGlzO2lmKHRoaXMuaXNJbmZpbml0eSgpKXJldHVybiB0aGlzO2lmKCF0KXJldHVybiB0aGlzLmRibCgpO3ZhciByO2lmKHRoaXMuY3VydmUuemVyb0F8fHRoaXMuY3VydmUudGhyZWVBKXt2YXIgaT10aGlzO2ZvcihyPTA7cjx0O3IrKylpPWkuZGJsKCk7cmV0dXJuIGl9dmFyIG49dGhpcy5jdXJ2ZS5hLG89dGhpcy5jdXJ2ZS50aW52LGg9dGhpcy54LHA9dGhpcy55LGI9dGhpcy56LG09Yi5yZWRTcXIoKS5yZWRTcXIoKSx3PXAucmVkQWRkKHApO2ZvcihyPTA7cjx0O3IrKyl7dmFyIHk9aC5yZWRTcXIoKSxTPXcucmVkU3FyKCksST1TLnJlZFNxcigpLE49eS5yZWRBZGQoeSkucmVkSUFkZCh5KS5yZWRJQWRkKG4ucmVkTXVsKG0pKSxDPWgucmVkTXVsKFMpLEY9Ti5yZWRTcXIoKS5yZWRJU3ViKEMucmVkQWRkKEMpKSxVPUMucmVkSVN1YihGKSxKPU4ucmVkTXVsKFUpO0o9Si5yZWRJQWRkKEopLnJlZElTdWIoSSk7dmFyIEJ0PXcucmVkTXVsKGIpO3IrMTx0JiYobT1tLnJlZE11bChJKSksaD1GLGI9QnQsdz1KfXJldHVybiB0aGlzLmN1cnZlLmpwb2ludChoLHcucmVkTXVsKG8pLGIpfSxUdC5wcm90b3R5cGUuZGJsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNJbmZpbml0eSgpP3RoaXM6dGhpcy5jdXJ2ZS56ZXJvQT90aGlzLl96ZXJvRGJsKCk6dGhpcy5jdXJ2ZS50aHJlZUE/dGhpcy5fdGhyZWVEYmwoKTp0aGlzLl9kYmwoKX0sVHQucHJvdG90eXBlLl96ZXJvRGJsPWZ1bmN0aW9uKCl7dmFyIHQscixpO2lmKHRoaXMuek9uZSl7dmFyIG49dGhpcy54LnJlZFNxcigpLG89dGhpcy55LnJlZFNxcigpLGg9by5yZWRTcXIoKSxwPXRoaXMueC5yZWRBZGQobykucmVkU3FyKCkucmVkSVN1YihuKS5yZWRJU3ViKGgpO3A9cC5yZWRJQWRkKHApO3ZhciBiPW4ucmVkQWRkKG4pLnJlZElBZGQobiksbT1iLnJlZFNxcigpLnJlZElTdWIocCkucmVkSVN1YihwKSx3PWgucmVkSUFkZChoKTt3PXcucmVkSUFkZCh3KSx3PXcucmVkSUFkZCh3KSx0PW0scj1iLnJlZE11bChwLnJlZElTdWIobSkpLnJlZElTdWIodyksaT10aGlzLnkucmVkQWRkKHRoaXMueSl9ZWxzZXt2YXIgeT10aGlzLngucmVkU3FyKCksUz10aGlzLnkucmVkU3FyKCksST1TLnJlZFNxcigpLE49dGhpcy54LnJlZEFkZChTKS5yZWRTcXIoKS5yZWRJU3ViKHkpLnJlZElTdWIoSSk7Tj1OLnJlZElBZGQoTik7dmFyIEM9eS5yZWRBZGQoeSkucmVkSUFkZCh5KSxGPUMucmVkU3FyKCksVT1JLnJlZElBZGQoSSk7VT1VLnJlZElBZGQoVSksVT1VLnJlZElBZGQoVSksdD1GLnJlZElTdWIoTikucmVkSVN1YihOKSxyPUMucmVkTXVsKE4ucmVkSVN1Yih0KSkucmVkSVN1YihVKSxpPXRoaXMueS5yZWRNdWwodGhpcy56KSxpPWkucmVkSUFkZChpKX1yZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQodCxyLGkpfSxUdC5wcm90b3R5cGUuX3RocmVlRGJsPWZ1bmN0aW9uKCl7dmFyIHQscixpO2lmKHRoaXMuek9uZSl7dmFyIG49dGhpcy54LnJlZFNxcigpLG89dGhpcy55LnJlZFNxcigpLGg9by5yZWRTcXIoKSxwPXRoaXMueC5yZWRBZGQobykucmVkU3FyKCkucmVkSVN1YihuKS5yZWRJU3ViKGgpO3A9cC5yZWRJQWRkKHApO3ZhciBiPW4ucmVkQWRkKG4pLnJlZElBZGQobikucmVkSUFkZCh0aGlzLmN1cnZlLmEpLG09Yi5yZWRTcXIoKS5yZWRJU3ViKHApLnJlZElTdWIocCk7dD1tO3ZhciB3PWgucmVkSUFkZChoKTt3PXcucmVkSUFkZCh3KSx3PXcucmVkSUFkZCh3KSxyPWIucmVkTXVsKHAucmVkSVN1YihtKSkucmVkSVN1Yih3KSxpPXRoaXMueS5yZWRBZGQodGhpcy55KX1lbHNle3ZhciB5PXRoaXMuei5yZWRTcXIoKSxTPXRoaXMueS5yZWRTcXIoKSxJPXRoaXMueC5yZWRNdWwoUyksTj10aGlzLngucmVkU3ViKHkpLnJlZE11bCh0aGlzLngucmVkQWRkKHkpKTtOPU4ucmVkQWRkKE4pLnJlZElBZGQoTik7dmFyIEM9SS5yZWRJQWRkKEkpO0M9Qy5yZWRJQWRkKEMpO3ZhciBGPUMucmVkQWRkKEMpO3Q9Ti5yZWRTcXIoKS5yZWRJU3ViKEYpLGk9dGhpcy55LnJlZEFkZCh0aGlzLnopLnJlZFNxcigpLnJlZElTdWIoUykucmVkSVN1Yih5KTt2YXIgVT1TLnJlZFNxcigpO1U9VS5yZWRJQWRkKFUpLFU9VS5yZWRJQWRkKFUpLFU9VS5yZWRJQWRkKFUpLHI9Ti5yZWRNdWwoQy5yZWRJU3ViKHQpKS5yZWRJU3ViKFUpfXJldHVybiB0aGlzLmN1cnZlLmpwb2ludCh0LHIsaSl9LFR0LnByb3RvdHlwZS5fZGJsPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jdXJ2ZS5hLHI9dGhpcy54LGk9dGhpcy55LG49dGhpcy56LG89bi5yZWRTcXIoKS5yZWRTcXIoKSxoPXIucmVkU3FyKCkscD1pLnJlZFNxcigpLGI9aC5yZWRBZGQoaCkucmVkSUFkZChoKS5yZWRJQWRkKHQucmVkTXVsKG8pKSxtPXIucmVkQWRkKHIpO209bS5yZWRJQWRkKG0pO3ZhciB3PW0ucmVkTXVsKHApLHk9Yi5yZWRTcXIoKS5yZWRJU3ViKHcucmVkQWRkKHcpKSxTPXcucmVkSVN1Yih5KSxJPXAucmVkU3FyKCk7ST1JLnJlZElBZGQoSSksST1JLnJlZElBZGQoSSksST1JLnJlZElBZGQoSSk7dmFyIE49Yi5yZWRNdWwoUykucmVkSVN1YihJKSxDPWkucmVkQWRkKGkpLnJlZE11bChuKTtyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQoeSxOLEMpfSxUdC5wcm90b3R5cGUudHJwbD1mdW5jdGlvbigpe2lmKCF0aGlzLmN1cnZlLnplcm9BKXJldHVybiB0aGlzLmRibCgpLmFkZCh0aGlzKTt2YXIgdD10aGlzLngucmVkU3FyKCkscj10aGlzLnkucmVkU3FyKCksaT10aGlzLnoucmVkU3FyKCksbj1yLnJlZFNxcigpLG89dC5yZWRBZGQodCkucmVkSUFkZCh0KSxoPW8ucmVkU3FyKCkscD10aGlzLngucmVkQWRkKHIpLnJlZFNxcigpLnJlZElTdWIodCkucmVkSVN1YihuKTtwPXAucmVkSUFkZChwKSxwPXAucmVkQWRkKHApLnJlZElBZGQocCkscD1wLnJlZElTdWIoaCk7dmFyIGI9cC5yZWRTcXIoKSxtPW4ucmVkSUFkZChuKTttPW0ucmVkSUFkZChtKSxtPW0ucmVkSUFkZChtKSxtPW0ucmVkSUFkZChtKTt2YXIgdz1vLnJlZElBZGQocCkucmVkU3FyKCkucmVkSVN1YihoKS5yZWRJU3ViKGIpLnJlZElTdWIobSkseT1yLnJlZE11bCh3KTt5PXkucmVkSUFkZCh5KSx5PXkucmVkSUFkZCh5KTt2YXIgUz10aGlzLngucmVkTXVsKGIpLnJlZElTdWIoeSk7Uz1TLnJlZElBZGQoUyksUz1TLnJlZElBZGQoUyk7dmFyIEk9dGhpcy55LnJlZE11bCh3LnJlZE11bChtLnJlZElTdWIodykpLnJlZElTdWIocC5yZWRNdWwoYikpKTtJPUkucmVkSUFkZChJKSxJPUkucmVkSUFkZChJKSxJPUkucmVkSUFkZChJKTt2YXIgTj10aGlzLnoucmVkQWRkKHApLnJlZFNxcigpLnJlZElTdWIoaSkucmVkSVN1YihiKTtyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQoUyxJLE4pfSxUdC5wcm90b3R5cGUubXVsPWZ1bmN0aW9uKHQscil7cmV0dXJuIHQ9bmV3IEsodCxyKSx0aGlzLmN1cnZlLl93bmFmTXVsKHRoaXMsdCl9LFR0LnByb3RvdHlwZS5lcT1mdW5jdGlvbih0KXtpZih0LnR5cGU9PT1cImFmZmluZVwiKXJldHVybiB0aGlzLmVxKHQudG9KKCkpO2lmKHRoaXM9PT10KXJldHVybiEwO3ZhciByPXRoaXMuei5yZWRTcXIoKSxpPXQuei5yZWRTcXIoKTtpZih0aGlzLngucmVkTXVsKGkpLnJlZElTdWIodC54LnJlZE11bChyKSkuY21wbigwKSE9PTApcmV0dXJuITE7dmFyIG49ci5yZWRNdWwodGhpcy56KSxvPWkucmVkTXVsKHQueik7cmV0dXJuIHRoaXMueS5yZWRNdWwobykucmVkSVN1Yih0LnkucmVkTXVsKG4pKS5jbXBuKDApPT09MH0sVHQucHJvdG90eXBlLmVxWFRvUD1mdW5jdGlvbih0KXt2YXIgcj10aGlzLnoucmVkU3FyKCksaT10LnRvUmVkKHRoaXMuY3VydmUucmVkKS5yZWRNdWwocik7aWYodGhpcy54LmNtcChpKT09PTApcmV0dXJuITA7Zm9yKHZhciBuPXQuY2xvbmUoKSxvPXRoaXMuY3VydmUucmVkTi5yZWRNdWwocik7Oyl7aWYobi5pYWRkKHRoaXMuY3VydmUubiksbi5jbXAodGhpcy5jdXJ2ZS5wKT49MClyZXR1cm4hMTtpZihpLnJlZElBZGQobyksdGhpcy54LmNtcChpKT09PTApcmV0dXJuITB9fSxUdC5wcm90b3R5cGUuaW5zcGVjdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzSW5maW5pdHkoKT9cIjxFQyBKUG9pbnQgSW5maW5pdHk+XCI6XCI8RUMgSlBvaW50IHg6IFwiK3RoaXMueC50b1N0cmluZygxNiwyKStcIiB5OiBcIit0aGlzLnkudG9TdHJpbmcoMTYsMikrXCIgejogXCIrdGhpcy56LnRvU3RyaW5nKDE2LDIpK1wiPlwifSxUdC5wcm90b3R5cGUuaXNJbmZpbml0eT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnouY21wbigwKT09PTB9O3ZhciBxcj1jcihmdW5jdGlvbihlLHQpe3ZhciByPXQ7ci5iYXNlPVplLHIuc2hvcnQ9a2Esci5tb250PW51bGwsci5lZHdhcmRzPW51bGx9KSxLcj1jcihmdW5jdGlvbihlLHQpe3ZhciByPXQsaT1KdC5hc3NlcnQ7ZnVuY3Rpb24gbihwKXtwLnR5cGU9PT1cInNob3J0XCI/dGhpcy5jdXJ2ZT1uZXcgcXIuc2hvcnQocCk6cC50eXBlPT09XCJlZHdhcmRzXCI/dGhpcy5jdXJ2ZT1uZXcgcXIuZWR3YXJkcyhwKTp0aGlzLmN1cnZlPW5ldyBxci5tb250KHApLHRoaXMuZz10aGlzLmN1cnZlLmcsdGhpcy5uPXRoaXMuY3VydmUubix0aGlzLmhhc2g9cC5oYXNoLGkodGhpcy5nLnZhbGlkYXRlKCksXCJJbnZhbGlkIGN1cnZlXCIpLGkodGhpcy5nLm11bCh0aGlzLm4pLmlzSW5maW5pdHkoKSxcIkludmFsaWQgY3VydmUsIEcqTiAhPSBPXCIpfXIuUHJlc2V0Q3VydmU9bjtmdW5jdGlvbiBvKHAsYil7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIscCx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7dmFyIG09bmV3IG4oYik7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLHAse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwLHZhbHVlOm19KSxtfX0pfW8oXCJwMTkyXCIse3R5cGU6XCJzaG9ydFwiLHByaW1lOlwicDE5MlwiLHA6XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmZmZiBmZmZmZmZmZlwiLGE6XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmZmZiBmZmZmZmZmY1wiLGI6XCI2NDIxMDUxOSBlNTljODBlNyAwZmE3ZTlhYiA3MjI0MzA0OSBmZWI4ZGVlYyBjMTQ2YjliMVwiLG46XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiA5OWRlZjgzNiAxNDZiYzliMSBiNGQyMjgzMVwiLGhhc2g6c2Uuc2hhMjU2LGdSZWQ6ITEsZzpbXCIxODhkYTgwZSBiMDMwOTBmNiA3Y2JmMjBlYiA0M2ExODgwMCBmNGZmMGFmZCA4MmZmMTAxMlwiLFwiMDcxOTJiOTUgZmZjOGRhNzggNjMxMDExZWQgNmIyNGNkZDUgNzNmOTc3YTEgMWU3OTQ4MTFcIl19KSxvKFwicDIyNFwiLHt0eXBlOlwic2hvcnRcIixwcmltZTpcInAyMjRcIixwOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDFcIixhOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmVcIixiOlwiYjQwNTBhODUgMGMwNGIzYWIgZjU0MTMyNTYgNTA0NGIwYjcgZDdiZmQ4YmEgMjcwYjM5NDMgMjM1NWZmYjRcIixuOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZjE2YTIgZTBiOGYwM2UgMTNkZDI5NDUgNWM1YzJhM2RcIixoYXNoOnNlLnNoYTI1NixnUmVkOiExLGc6W1wiYjcwZTBjYmQgNmJiNGJmN2YgMzIxMzkwYjkgNGEwM2MxZDMgNTZjMjExMjIgMzQzMjgwZDYgMTE1YzFkMjFcIixcImJkMzc2Mzg4IGI1ZjcyM2ZiIDRjMjJkZmU2IGNkNDM3NWEwIDVhMDc0NzY0IDQ0ZDU4MTk5IDg1MDA3ZTM0XCJdfSksbyhcInAyNTZcIix7dHlwZTpcInNob3J0XCIscHJpbWU6bnVsbCxwOlwiZmZmZmZmZmYgMDAwMDAwMDEgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmZcIixhOlwiZmZmZmZmZmYgMDAwMDAwMDEgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmNcIixiOlwiNWFjNjM1ZDggYWEzYTkzZTcgYjNlYmJkNTUgNzY5ODg2YmMgNjUxZDA2YjAgY2M1M2IwZjYgM2JjZTNjM2UgMjdkMjYwNGJcIixuOlwiZmZmZmZmZmYgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgYmNlNmZhYWQgYTcxNzllODQgZjNiOWNhYzIgZmM2MzI1NTFcIixoYXNoOnNlLnNoYTI1NixnUmVkOiExLGc6W1wiNmIxN2QxZjIgZTEyYzQyNDcgZjhiY2U2ZTUgNjNhNDQwZjIgNzcwMzdkODEgMmRlYjMzYTAgZjRhMTM5NDUgZDg5OGMyOTZcIixcIjRmZTM0MmUyIGZlMWE3ZjliIDhlZTdlYjRhIDdjMGY5ZTE2IDJiY2UzMzU3IDZiMzE1ZWNlIGNiYjY0MDY4IDM3YmY1MWY1XCJdfSksbyhcInAzODRcIix7dHlwZTpcInNob3J0XCIscHJpbWU6bnVsbCxwOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmZcIixhOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmNcIixiOlwiYjMzMTJmYTcgZTIzZWU3ZTQgOTg4ZTA1NmIgZTNmODJkMTkgMTgxZDljNmUgZmU4MTQxMTIgMDMxNDA4OGYgNTAxMzg3NWEgYzY1NjM5OGQgOGEyZWQxOWQgMmE4NWM4ZWQgZDNlYzJhZWZcIixuOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgYzc2MzRkODEgZjQzNzJkZGYgNTgxYTBkYjIgNDhiMGE3N2EgZWNlYzE5NmEgY2NjNTI5NzNcIixoYXNoOnNlLnNoYTM4NCxnUmVkOiExLGc6W1wiYWE4N2NhMjIgYmU4YjA1MzcgOGViMWM3MWUgZjMyMGFkNzQgNmUxZDNiNjIgOGJhNzliOTggNTlmNzQxZTAgODI1NDJhMzggNTUwMmYyNWQgYmY1NTI5NmMgM2E1NDVlMzggNzI3NjBhYjdcIixcIjM2MTdkZTRhIDk2MjYyYzZmIDVkOWU5OGJmIDkyOTJkYzI5IGY4ZjQxZGJkIDI4OWExNDdjIGU5ZGEzMTEzIGI1ZjBiOGMwIDBhNjBiMWNlIDFkN2U4MTlkIDdhNDMxZDdjIDkwZWEwZTVmXCJdfSksbyhcInA1MjFcIix7dHlwZTpcInNob3J0XCIscHJpbWU6bnVsbCxwOlwiMDAwMDAxZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmZcIixhOlwiMDAwMDAxZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmNcIixiOlwiMDAwMDAwNTEgOTUzZWI5NjEgOGUxYzlhMWYgOTI5YTIxYTAgYjY4NTQwZWUgYTJkYTcyNWIgOTliMzE1ZjMgYjhiNDg5OTEgOGVmMTA5ZTEgNTYxOTM5NTEgZWM3ZTkzN2IgMTY1MmMwYmQgM2JiMWJmMDcgMzU3M2RmODggM2QyYzM0ZjEgZWY0NTFmZDQgNmI1MDNmMDBcIixuOlwiMDAwMDAxZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmEgNTE4Njg3ODMgYmYyZjk2NmIgN2ZjYzAxNDggZjcwOWE1ZDAgM2JiNWM5YjggODk5YzQ3YWUgYmI2ZmI3MWUgOTEzODY0MDlcIixoYXNoOnNlLnNoYTUxMixnUmVkOiExLGc6W1wiMDAwMDAwYzYgODU4ZTA2YjcgMDQwNGU5Y2QgOWUzZWNiNjYgMjM5NWI0NDIgOWM2NDgxMzkgMDUzZmI1MjEgZjgyOGFmNjAgNmI0ZDNkYmEgYTE0YjVlNzcgZWZlNzU5MjggZmUxZGMxMjcgYTJmZmE4ZGUgMzM0OGIzYzEgODU2YTQyOWIgZjk3ZTdlMzEgYzJlNWJkNjZcIixcIjAwMDAwMTE4IDM5Mjk2YTc4IDlhM2JjMDA0IDVjOGE1ZmI0IDJjN2QxYmQ5IDk4ZjU0NDQ5IDU3OWI0NDY4IDE3YWZiZDE3IDI3M2U2NjJjIDk3ZWU3Mjk5IDVlZjQyNjQwIGM1NTBiOTAxIDNmYWQwNzYxIDM1M2M3MDg2IGEyNzJjMjQwIDg4YmU5NDc2IDlmZDE2NjUwXCJdfSksbyhcImN1cnZlMjU1MTlcIix7dHlwZTpcIm1vbnRcIixwcmltZTpcInAyNTUxOVwiLHA6XCI3ZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmVkXCIsYTpcIjc2ZDA2XCIsYjpcIjFcIixuOlwiMTAwMDAwMDAwMDAwMDAwMCAwMDAwMDAwMDAwMDAwMDAwIDE0ZGVmOWRlYTJmNzljZDYgNTgxMjYzMWE1Y2Y1ZDNlZFwiLGhhc2g6c2Uuc2hhMjU2LGdSZWQ6ITEsZzpbXCI5XCJdfSksbyhcImVkMjU1MTlcIix7dHlwZTpcImVkd2FyZHNcIixwcmltZTpcInAyNTUxOVwiLHA6XCI3ZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmVkXCIsYTpcIi0xXCIsYzpcIjFcIixkOlwiNTIwMzZjZWUyYjZmZmU3MyA4Y2M3NDA3OTc3NzllODk4IDAwNzAwYTRkNDE0MWQ4YWIgNzVlYjRkY2ExMzU5NzhhM1wiLG46XCIxMDAwMDAwMDAwMDAwMDAwIDAwMDAwMDAwMDAwMDAwMDAgMTRkZWY5ZGVhMmY3OWNkNiA1ODEyNjMxYTVjZjVkM2VkXCIsaGFzaDpzZS5zaGEyNTYsZ1JlZDohMSxnOltcIjIxNjkzNmQzY2Q2ZTUzZmVjMGE0ZTIzMWZkZDZkYzVjNjkyY2M3NjA5NTI1YTdiMmM5NTYyZDYwOGYyNWQ1MWFcIixcIjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NThcIl19KTt2YXIgaDt0cnl7aD1udWxsLmNyYXNoKCl9Y2F0Y2h7aD12b2lkIDB9byhcInNlY3AyNTZrMVwiLHt0eXBlOlwic2hvcnRcIixwcmltZTpcImsyNTZcIixwOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZjMmZcIixhOlwiMFwiLGI6XCI3XCIsbjpcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGJhYWVkY2U2IGFmNDhhMDNiIGJmZDI1ZThjIGQwMzY0MTQxXCIsaDpcIjFcIixoYXNoOnNlLnNoYTI1NixiZXRhOlwiN2FlOTZhMmI2NTdjMDcxMDZlNjQ0NzllYWMzNDM0ZTk5Y2YwNDk3NTEyZjU4OTk1YzEzOTZjMjg3MTk1MDFlZVwiLGxhbWJkYTpcIjUzNjNhZDRjYzA1YzMwZTBhNTI2MWMwMjg4MTI2NDVhMTIyZTIyZWEyMDgxNjY3OGRmMDI5NjdjMWIyM2JkNzJcIixiYXNpczpbe2E6XCIzMDg2ZDIyMWE3ZDQ2YmNkZTg2YzkwZTQ5Mjg0ZWIxNVwiLGI6XCItZTQ0MzdlZDYwMTBlODgyODZmNTQ3ZmE5MGFiZmU0YzNcIn0se2E6XCIxMTRjYTUwZjdhOGUyZjNmNjU3YzExMDhkOWQ0NGNmZDhcIixiOlwiMzA4NmQyMjFhN2Q0NmJjZGU4NmM5MGU0OTI4NGViMTVcIn1dLGdSZWQ6ITEsZzpbXCI3OWJlNjY3ZWY5ZGNiYmFjNTVhMDYyOTVjZTg3MGIwNzAyOWJmY2RiMmRjZTI4ZDk1OWYyODE1YjE2ZjgxNzk4XCIsXCI0ODNhZGE3NzI2YTNjNDY1NWRhNGZiZmMwZTExMDhhOGZkMTdiNDQ4YTY4NTU0MTk5YzQ3ZDA4ZmZiMTBkNGI4XCIsaF19KX0pO2Z1bmN0aW9uIFJlKGUpe2lmKCEodGhpcyBpbnN0YW5jZW9mIFJlKSlyZXR1cm4gbmV3IFJlKGUpO3RoaXMuaGFzaD1lLmhhc2gsdGhpcy5wcmVkUmVzaXN0PSEhZS5wcmVkUmVzaXN0LHRoaXMub3V0TGVuPXRoaXMuaGFzaC5vdXRTaXplLHRoaXMubWluRW50cm9weT1lLm1pbkVudHJvcHl8fHRoaXMuaGFzaC5obWFjU3RyZW5ndGgsdGhpcy5fcmVzZWVkPW51bGwsdGhpcy5yZXNlZWRJbnRlcnZhbD1udWxsLHRoaXMuSz1udWxsLHRoaXMuVj1udWxsO3ZhciB0PWZlLnRvQXJyYXkoZS5lbnRyb3B5LGUuZW50cm9weUVuY3x8XCJoZXhcIikscj1mZS50b0FycmF5KGUubm9uY2UsZS5ub25jZUVuY3x8XCJoZXhcIiksaT1mZS50b0FycmF5KGUucGVycyxlLnBlcnNFbmN8fFwiaGV4XCIpO1BpKHQubGVuZ3RoPj10aGlzLm1pbkVudHJvcHkvOCxcIk5vdCBlbm91Z2ggZW50cm9weS4gTWluaW11bSBpczogXCIrdGhpcy5taW5FbnRyb3B5K1wiIGJpdHNcIiksdGhpcy5faW5pdCh0LHIsaSl9dmFyIFJmPVJlO1JlLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbih0LHIsaSl7dmFyIG49dC5jb25jYXQocikuY29uY2F0KGkpO3RoaXMuSz1uZXcgQXJyYXkodGhpcy5vdXRMZW4vOCksdGhpcy5WPW5ldyBBcnJheSh0aGlzLm91dExlbi84KTtmb3IodmFyIG89MDtvPHRoaXMuVi5sZW5ndGg7bysrKXRoaXMuS1tvXT0wLHRoaXMuVltvXT0xO3RoaXMuX3VwZGF0ZShuKSx0aGlzLl9yZXNlZWQ9MSx0aGlzLnJlc2VlZEludGVydmFsPTI4MTQ3NDk3NjcxMDY1Nn0sUmUucHJvdG90eXBlLl9obWFjPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBzZS5obWFjKHRoaXMuaGFzaCx0aGlzLkspfSxSZS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0KXt2YXIgcj10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikudXBkYXRlKFswXSk7dCYmKHI9ci51cGRhdGUodCkpLHRoaXMuSz1yLmRpZ2VzdCgpLHRoaXMuVj10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikuZGlnZXN0KCksdCYmKHRoaXMuSz10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikudXBkYXRlKFsxXSkudXBkYXRlKHQpLmRpZ2VzdCgpLHRoaXMuVj10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikuZGlnZXN0KCkpfSxSZS5wcm90b3R5cGUucmVzZWVkPWZ1bmN0aW9uKHQscixpLG4pe3R5cGVvZiByIT1cInN0cmluZ1wiJiYobj1pLGk9cixyPW51bGwpLHQ9ZmUudG9BcnJheSh0LHIpLGk9ZmUudG9BcnJheShpLG4pLFBpKHQubGVuZ3RoPj10aGlzLm1pbkVudHJvcHkvOCxcIk5vdCBlbm91Z2ggZW50cm9weS4gTWluaW11bSBpczogXCIrdGhpcy5taW5FbnRyb3B5K1wiIGJpdHNcIiksdGhpcy5fdXBkYXRlKHQuY29uY2F0KGl8fFtdKSksdGhpcy5fcmVzZWVkPTF9LFJlLnByb3RvdHlwZS5nZW5lcmF0ZT1mdW5jdGlvbih0LHIsaSxuKXtpZih0aGlzLl9yZXNlZWQ+dGhpcy5yZXNlZWRJbnRlcnZhbCl0aHJvdyBuZXcgRXJyb3IoXCJSZXNlZWQgaXMgcmVxdWlyZWRcIik7dHlwZW9mIHIhPVwic3RyaW5nXCImJihuPWksaT1yLHI9bnVsbCksaSYmKGk9ZmUudG9BcnJheShpLG58fFwiaGV4XCIpLHRoaXMuX3VwZGF0ZShpKSk7Zm9yKHZhciBvPVtdO28ubGVuZ3RoPHQ7KXRoaXMuVj10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikuZGlnZXN0KCksbz1vLmNvbmNhdCh0aGlzLlYpO3ZhciBoPW8uc2xpY2UoMCx0KTtyZXR1cm4gdGhpcy5fdXBkYXRlKGkpLHRoaXMuX3Jlc2VlZCsrLGZlLmVuY29kZShoLHIpfTt2YXIgRmk9SnQuYXNzZXJ0O2Z1bmN0aW9uIGt0KGUsdCl7dGhpcy5lYz1lLHRoaXMucHJpdj1udWxsLHRoaXMucHViPW51bGwsdC5wcml2JiZ0aGlzLl9pbXBvcnRQcml2YXRlKHQucHJpdix0LnByaXZFbmMpLHQucHViJiZ0aGlzLl9pbXBvcnRQdWJsaWModC5wdWIsdC5wdWJFbmMpfXZhciBUaT1rdDtrdC5mcm9tUHVibGljPWZ1bmN0aW9uKHQscixpKXtyZXR1cm4gciBpbnN0YW5jZW9mIGt0P3I6bmV3IGt0KHQse3B1YjpyLHB1YkVuYzppfSl9LGt0LmZyb21Qcml2YXRlPWZ1bmN0aW9uKHQscixpKXtyZXR1cm4gciBpbnN0YW5jZW9mIGt0P3I6bmV3IGt0KHQse3ByaXY6cixwcml2RW5jOml9KX0sa3QucHJvdG90eXBlLnZhbGlkYXRlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRQdWJsaWMoKTtyZXR1cm4gdC5pc0luZmluaXR5KCk/e3Jlc3VsdDohMSxyZWFzb246XCJJbnZhbGlkIHB1YmxpYyBrZXlcIn06dC52YWxpZGF0ZSgpP3QubXVsKHRoaXMuZWMuY3VydmUubikuaXNJbmZpbml0eSgpP3tyZXN1bHQ6ITAscmVhc29uOm51bGx9OntyZXN1bHQ6ITEscmVhc29uOlwiUHVibGljIGtleSAqIE4gIT0gT1wifTp7cmVzdWx0OiExLHJlYXNvbjpcIlB1YmxpYyBrZXkgaXMgbm90IGEgcG9pbnRcIn19LGt0LnByb3RvdHlwZS5nZXRQdWJsaWM9ZnVuY3Rpb24odCxyKXtyZXR1cm4gdHlwZW9mIHQ9PVwic3RyaW5nXCImJihyPXQsdD1udWxsKSx0aGlzLnB1Ynx8KHRoaXMucHViPXRoaXMuZWMuZy5tdWwodGhpcy5wcml2KSkscj90aGlzLnB1Yi5lbmNvZGUocix0KTp0aGlzLnB1Yn0sa3QucHJvdG90eXBlLmdldFByaXZhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1cImhleFwiP3RoaXMucHJpdi50b1N0cmluZygxNiwyKTp0aGlzLnByaXZ9LGt0LnByb3RvdHlwZS5faW1wb3J0UHJpdmF0ZT1mdW5jdGlvbih0LHIpe3RoaXMucHJpdj1uZXcgSyh0LHJ8fDE2KSx0aGlzLnByaXY9dGhpcy5wcml2LnVtb2QodGhpcy5lYy5jdXJ2ZS5uKX0sa3QucHJvdG90eXBlLl9pbXBvcnRQdWJsaWM9ZnVuY3Rpb24odCxyKXtpZih0Lnh8fHQueSl7dGhpcy5lYy5jdXJ2ZS50eXBlPT09XCJtb250XCI/RmkodC54LFwiTmVlZCB4IGNvb3JkaW5hdGVcIik6KHRoaXMuZWMuY3VydmUudHlwZT09PVwic2hvcnRcInx8dGhpcy5lYy5jdXJ2ZS50eXBlPT09XCJlZHdhcmRzXCIpJiZGaSh0LngmJnQueSxcIk5lZWQgYm90aCB4IGFuZCB5IGNvb3JkaW5hdGVcIiksdGhpcy5wdWI9dGhpcy5lYy5jdXJ2ZS5wb2ludCh0LngsdC55KTtyZXR1cm59dGhpcy5wdWI9dGhpcy5lYy5jdXJ2ZS5kZWNvZGVQb2ludCh0LHIpfSxrdC5wcm90b3R5cGUuZGVyaXZlPWZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbGlkYXRlKCl8fEZpKHQudmFsaWRhdGUoKSxcInB1YmxpYyBwb2ludCBub3QgdmFsaWRhdGVkXCIpLHQubXVsKHRoaXMucHJpdikuZ2V0WCgpfSxrdC5wcm90b3R5cGUuc2lnbj1mdW5jdGlvbih0LHIsaSl7cmV0dXJuIHRoaXMuZWMuc2lnbih0LHRoaXMscixpKX0sa3QucHJvdG90eXBlLnZlcmlmeT1mdW5jdGlvbih0LHIpe3JldHVybiB0aGlzLmVjLnZlcmlmeSh0LHIsdGhpcyl9LGt0LnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7cmV0dXJuXCI8S2V5IHByaXY6IFwiKyh0aGlzLnByaXYmJnRoaXMucHJpdi50b1N0cmluZygxNiwyKSkrXCIgcHViOiBcIisodGhpcy5wdWImJnRoaXMucHViLmluc3BlY3QoKSkrXCIgPlwifTt2YXIgcWE9SnQuYXNzZXJ0O2Z1bmN0aW9uIEhyKGUsdCl7aWYoZSBpbnN0YW5jZW9mIEhyKXJldHVybiBlO3RoaXMuX2ltcG9ydERFUihlLHQpfHwocWEoZS5yJiZlLnMsXCJTaWduYXR1cmUgd2l0aG91dCByIG9yIHNcIiksdGhpcy5yPW5ldyBLKGUuciwxNiksdGhpcy5zPW5ldyBLKGUucywxNiksZS5yZWNvdmVyeVBhcmFtPT09dm9pZCAwP3RoaXMucmVjb3ZlcnlQYXJhbT1udWxsOnRoaXMucmVjb3ZlcnlQYXJhbT1lLnJlY292ZXJ5UGFyYW0pfXZhciB6cj1IcjtmdW5jdGlvbiBLYSgpe3RoaXMucGxhY2U9MH1mdW5jdGlvbiBVaShlLHQpe3ZhciByPWVbdC5wbGFjZSsrXTtpZighKHImMTI4KSlyZXR1cm4gcjt2YXIgaT1yJjE1O2lmKGk9PT0wfHxpPjQpcmV0dXJuITE7Zm9yKHZhciBuPTAsbz0wLGg9dC5wbGFjZTtvPGk7bysrLGgrKyluPDw9OCxufD1lW2hdLG4+Pj49MDtyZXR1cm4gbjw9MTI3PyExOih0LnBsYWNlPWgsbil9ZnVuY3Rpb24gT2YoZSl7Zm9yKHZhciB0PTAscj1lLmxlbmd0aC0xOyFlW3RdJiYhKGVbdCsxXSYxMjgpJiZ0PHI7KXQrKztyZXR1cm4gdD09PTA/ZTplLnNsaWNlKHQpfUhyLnByb3RvdHlwZS5faW1wb3J0REVSPWZ1bmN0aW9uKHQscil7dD1KdC50b0FycmF5KHQscik7dmFyIGk9bmV3IEthO2lmKHRbaS5wbGFjZSsrXSE9PTQ4KXJldHVybiExO3ZhciBuPVVpKHQsaSk7aWYobj09PSExfHxuK2kucGxhY2UhPT10Lmxlbmd0aHx8dFtpLnBsYWNlKytdIT09MilyZXR1cm4hMTt2YXIgbz1VaSh0LGkpO2lmKG89PT0hMSlyZXR1cm4hMTt2YXIgaD10LnNsaWNlKGkucGxhY2UsbytpLnBsYWNlKTtpZihpLnBsYWNlKz1vLHRbaS5wbGFjZSsrXSE9PTIpcmV0dXJuITE7dmFyIHA9VWkodCxpKTtpZihwPT09ITF8fHQubGVuZ3RoIT09cCtpLnBsYWNlKXJldHVybiExO3ZhciBiPXQuc2xpY2UoaS5wbGFjZSxwK2kucGxhY2UpO2lmKGhbMF09PT0wKWlmKGhbMV0mMTI4KWg9aC5zbGljZSgxKTtlbHNlIHJldHVybiExO2lmKGJbMF09PT0wKWlmKGJbMV0mMTI4KWI9Yi5zbGljZSgxKTtlbHNlIHJldHVybiExO3JldHVybiB0aGlzLnI9bmV3IEsoaCksdGhpcy5zPW5ldyBLKGIpLHRoaXMucmVjb3ZlcnlQYXJhbT1udWxsLCEwfTtmdW5jdGlvbiBraShlLHQpe2lmKHQ8MTI4KXtlLnB1c2godCk7cmV0dXJufXZhciByPTErKE1hdGgubG9nKHQpL01hdGguTE4yPj4+Myk7Zm9yKGUucHVzaChyfDEyOCk7LS1yOyllLnB1c2godD4+PihyPDwzKSYyNTUpO2UucHVzaCh0KX1Ici5wcm90b3R5cGUudG9ERVI9ZnVuY3Rpb24odCl7dmFyIHI9dGhpcy5yLnRvQXJyYXkoKSxpPXRoaXMucy50b0FycmF5KCk7Zm9yKHJbMF0mMTI4JiYocj1bMF0uY29uY2F0KHIpKSxpWzBdJjEyOCYmKGk9WzBdLmNvbmNhdChpKSkscj1PZihyKSxpPU9mKGkpOyFpWzBdJiYhKGlbMV0mMTI4KTspaT1pLnNsaWNlKDEpO3ZhciBuPVsyXTtraShuLHIubGVuZ3RoKSxuPW4uY29uY2F0KHIpLG4ucHVzaCgyKSxraShuLGkubGVuZ3RoKTt2YXIgbz1uLmNvbmNhdChpKSxoPVs0OF07cmV0dXJuIGtpKGgsby5sZW5ndGgpLGg9aC5jb25jYXQobyksSnQuZW5jb2RlKGgsdCl9O3ZhciBIYT1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcInVuc3VwcG9ydGVkXCIpfSxQZj1KdC5hc3NlcnQ7ZnVuY3Rpb24gJHQoZSl7aWYoISh0aGlzIGluc3RhbmNlb2YgJHQpKXJldHVybiBuZXcgJHQoZSk7dHlwZW9mIGU9PVwic3RyaW5nXCImJihQZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoS3IsZSksXCJVbmtub3duIGN1cnZlIFwiK2UpLGU9S3JbZV0pLGUgaW5zdGFuY2VvZiBLci5QcmVzZXRDdXJ2ZSYmKGU9e2N1cnZlOmV9KSx0aGlzLmN1cnZlPWUuY3VydmUuY3VydmUsdGhpcy5uPXRoaXMuY3VydmUubix0aGlzLm5oPXRoaXMubi51c2hybigxKSx0aGlzLmc9dGhpcy5jdXJ2ZS5nLHRoaXMuZz1lLmN1cnZlLmcsdGhpcy5nLnByZWNvbXB1dGUoZS5jdXJ2ZS5uLmJpdExlbmd0aCgpKzEpLHRoaXMuaGFzaD1lLmhhc2h8fGUuY3VydmUuaGFzaH12YXIgemE9JHQ7JHQucHJvdG90eXBlLmtleVBhaXI9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBUaSh0aGlzLHQpfSwkdC5wcm90b3R5cGUua2V5RnJvbVByaXZhdGU9ZnVuY3Rpb24odCxyKXtyZXR1cm4gVGkuZnJvbVByaXZhdGUodGhpcyx0LHIpfSwkdC5wcm90b3R5cGUua2V5RnJvbVB1YmxpYz1mdW5jdGlvbih0LHIpe3JldHVybiBUaS5mcm9tUHVibGljKHRoaXMsdCxyKX0sJHQucHJvdG90eXBlLmdlbktleVBhaXI9ZnVuY3Rpb24odCl7dHx8KHQ9e30pO2Zvcih2YXIgcj1uZXcgUmYoe2hhc2g6dGhpcy5oYXNoLHBlcnM6dC5wZXJzLHBlcnNFbmM6dC5wZXJzRW5jfHxcInV0ZjhcIixlbnRyb3B5OnQuZW50cm9weXx8SGEodGhpcy5oYXNoLmhtYWNTdHJlbmd0aCksZW50cm9weUVuYzp0LmVudHJvcHkmJnQuZW50cm9weUVuY3x8XCJ1dGY4XCIsbm9uY2U6dGhpcy5uLnRvQXJyYXkoKX0pLGk9dGhpcy5uLmJ5dGVMZW5ndGgoKSxuPXRoaXMubi5zdWIobmV3IEsoMikpOzspe3ZhciBvPW5ldyBLKHIuZ2VuZXJhdGUoaSkpO2lmKCEoby5jbXAobik+MCkpcmV0dXJuIG8uaWFkZG4oMSksdGhpcy5rZXlGcm9tUHJpdmF0ZShvKX19LCR0LnByb3RvdHlwZS5fdHJ1bmNhdGVUb049ZnVuY3Rpb24odCxyKXt2YXIgaT10LmJ5dGVMZW5ndGgoKSo4LXRoaXMubi5iaXRMZW5ndGgoKTtyZXR1cm4gaT4wJiYodD10LnVzaHJuKGkpKSwhciYmdC5jbXAodGhpcy5uKT49MD90LnN1Yih0aGlzLm4pOnR9LCR0LnByb3RvdHlwZS5zaWduPWZ1bmN0aW9uKHQscixpLG4pe3R5cGVvZiBpPT1cIm9iamVjdFwiJiYobj1pLGk9bnVsbCksbnx8KG49e30pLHI9dGhpcy5rZXlGcm9tUHJpdmF0ZShyLGkpLHQ9dGhpcy5fdHJ1bmNhdGVUb04obmV3IEsodCwxNikpO2Zvcih2YXIgbz10aGlzLm4uYnl0ZUxlbmd0aCgpLGg9ci5nZXRQcml2YXRlKCkudG9BcnJheShcImJlXCIsbykscD10LnRvQXJyYXkoXCJiZVwiLG8pLGI9bmV3IFJmKHtoYXNoOnRoaXMuaGFzaCxlbnRyb3B5Omgsbm9uY2U6cCxwZXJzOm4ucGVycyxwZXJzRW5jOm4ucGVyc0VuY3x8XCJ1dGY4XCJ9KSxtPXRoaXMubi5zdWIobmV3IEsoMSkpLHc9MDs7dysrKXt2YXIgeT1uLms/bi5rKHcpOm5ldyBLKGIuZ2VuZXJhdGUodGhpcy5uLmJ5dGVMZW5ndGgoKSkpO2lmKHk9dGhpcy5fdHJ1bmNhdGVUb04oeSwhMCksISh5LmNtcG4oMSk8PTB8fHkuY21wKG0pPj0wKSl7dmFyIFM9dGhpcy5nLm11bCh5KTtpZighUy5pc0luZmluaXR5KCkpe3ZhciBJPVMuZ2V0WCgpLE49SS51bW9kKHRoaXMubik7aWYoTi5jbXBuKDApIT09MCl7dmFyIEM9eS5pbnZtKHRoaXMubikubXVsKE4ubXVsKHIuZ2V0UHJpdmF0ZSgpKS5pYWRkKHQpKTtpZihDPUMudW1vZCh0aGlzLm4pLEMuY21wbigwKSE9PTApe3ZhciBGPShTLmdldFkoKS5pc09kZCgpPzE6MCl8KEkuY21wKE4pIT09MD8yOjApO3JldHVybiBuLmNhbm9uaWNhbCYmQy5jbXAodGhpcy5uaCk+MCYmKEM9dGhpcy5uLnN1YihDKSxGXj0xKSxuZXcgenIoe3I6TixzOkMscmVjb3ZlcnlQYXJhbTpGfSl9fX19fX0sJHQucHJvdG90eXBlLnZlcmlmeT1mdW5jdGlvbih0LHIsaSxuKXt0PXRoaXMuX3RydW5jYXRlVG9OKG5ldyBLKHQsMTYpKSxpPXRoaXMua2V5RnJvbVB1YmxpYyhpLG4pLHI9bmV3IHpyKHIsXCJoZXhcIik7dmFyIG89ci5yLGg9ci5zO2lmKG8uY21wbigxKTwwfHxvLmNtcCh0aGlzLm4pPj0wfHxoLmNtcG4oMSk8MHx8aC5jbXAodGhpcy5uKT49MClyZXR1cm4hMTt2YXIgcD1oLmludm0odGhpcy5uKSxiPXAubXVsKHQpLnVtb2QodGhpcy5uKSxtPXAubXVsKG8pLnVtb2QodGhpcy5uKSx3O3JldHVybiB0aGlzLmN1cnZlLl9tYXh3ZWxsVHJpY2s/KHc9dGhpcy5nLmptdWxBZGQoYixpLmdldFB1YmxpYygpLG0pLHcuaXNJbmZpbml0eSgpPyExOncuZXFYVG9QKG8pKToodz10aGlzLmcubXVsQWRkKGIsaS5nZXRQdWJsaWMoKSxtKSx3LmlzSW5maW5pdHkoKT8hMTp3LmdldFgoKS51bW9kKHRoaXMubikuY21wKG8pPT09MCl9LCR0LnByb3RvdHlwZS5yZWNvdmVyUHViS2V5PWZ1bmN0aW9uKGUsdCxyLGkpe1BmKCgzJnIpPT09cixcIlRoZSByZWNvdmVyeSBwYXJhbSBpcyBtb3JlIHRoYW4gdHdvIGJpdHNcIiksdD1uZXcgenIodCxpKTt2YXIgbj10aGlzLm4sbz1uZXcgSyhlKSxoPXQucixwPXQucyxiPXImMSxtPXI+PjE7aWYoaC5jbXAodGhpcy5jdXJ2ZS5wLnVtb2QodGhpcy5jdXJ2ZS5uKSk+PTAmJm0pdGhyb3cgbmV3IEVycm9yKFwiVW5hYmxlIHRvIGZpbmQgc2VuY29uZCBrZXkgY2FuZGluYXRlXCIpO20/aD10aGlzLmN1cnZlLnBvaW50RnJvbVgoaC5hZGQodGhpcy5jdXJ2ZS5uKSxiKTpoPXRoaXMuY3VydmUucG9pbnRGcm9tWChoLGIpO3ZhciB3PXQuci5pbnZtKG4pLHk9bi5zdWIobykubXVsKHcpLnVtb2QobiksUz1wLm11bCh3KS51bW9kKG4pO3JldHVybiB0aGlzLmcubXVsQWRkKHksaCxTKX0sJHQucHJvdG90eXBlLmdldEtleVJlY292ZXJ5UGFyYW09ZnVuY3Rpb24oZSx0LHIsaSl7aWYodD1uZXcgenIodCxpKSx0LnJlY292ZXJ5UGFyYW0hPT1udWxsKXJldHVybiB0LnJlY292ZXJ5UGFyYW07Zm9yKHZhciBuPTA7bjw0O24rKyl7dmFyIG87dHJ5e289dGhpcy5yZWNvdmVyUHViS2V5KGUsdCxuKX1jYXRjaHtjb250aW51ZX1pZihvLmVxKHIpKXJldHVybiBufXRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBmaW5kIHZhbGlkIHJlY292ZXJ5IGZhY3RvclwiKX07dmFyIExhPWNyKGZ1bmN0aW9uKGUsdCl7dmFyIHI9dDtyLnZlcnNpb249XCI2LjUuNFwiLHIudXRpbHM9SnQsci5yYW5kPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwidW5zdXBwb3J0ZWRcIil9LHIuY3VydmU9cXIsci5jdXJ2ZXM9S3Isci5lYz16YSxyLmVkZHNhPW51bGx9KSxqYT1MYS5lYztjb25zdCBRYT1cInNpZ25pbmcta2V5LzUuNy4wXCIscWk9bmV3IEwoUWEpO2xldCBLaT1udWxsO2Z1bmN0aW9uIHZlKCl7cmV0dXJuIEtpfHwoS2k9bmV3IGphKFwic2VjcDI1NmsxXCIpKSxLaX1jbGFzcyBKYXtjb25zdHJ1Y3Rvcih0KXticih0aGlzLFwiY3VydmVcIixcInNlY3AyNTZrMVwiKSxicih0aGlzLFwicHJpdmF0ZUtleVwiLEt0KHQpKSxOMCh0aGlzLnByaXZhdGVLZXkpIT09MzImJnFpLnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgcHJpdmF0ZSBrZXlcIixcInByaXZhdGVLZXlcIixcIltbIFJFREFDVEVEIF1dXCIpO2NvbnN0IHI9dmUoKS5rZXlGcm9tUHJpdmF0ZShPdCh0aGlzLnByaXZhdGVLZXkpKTticih0aGlzLFwicHVibGljS2V5XCIsXCIweFwiK3IuZ2V0UHVibGljKCExLFwiaGV4XCIpKSxicih0aGlzLFwiY29tcHJlc3NlZFB1YmxpY0tleVwiLFwiMHhcIityLmdldFB1YmxpYyghMCxcImhleFwiKSksYnIodGhpcyxcIl9pc1NpZ25pbmdLZXlcIiwhMCl9X2FkZFBvaW50KHQpe2NvbnN0IHI9dmUoKS5rZXlGcm9tUHVibGljKE90KHRoaXMucHVibGljS2V5KSksaT12ZSgpLmtleUZyb21QdWJsaWMoT3QodCkpO3JldHVyblwiMHhcIityLnB1Yi5hZGQoaS5wdWIpLmVuY29kZUNvbXByZXNzZWQoXCJoZXhcIil9c2lnbkRpZ2VzdCh0KXtjb25zdCByPXZlKCkua2V5RnJvbVByaXZhdGUoT3QodGhpcy5wcml2YXRlS2V5KSksaT1PdCh0KTtpLmxlbmd0aCE9PTMyJiZxaS50aHJvd0FyZ3VtZW50RXJyb3IoXCJiYWQgZGlnZXN0IGxlbmd0aFwiLFwiZGlnZXN0XCIsdCk7Y29uc3Qgbj1yLnNpZ24oaSx7Y2Fub25pY2FsOiEwfSk7cmV0dXJuIHpuKHtyZWNvdmVyeVBhcmFtOm4ucmVjb3ZlcnlQYXJhbSxyOm9lKFwiMHhcIituLnIudG9TdHJpbmcoMTYpLDMyKSxzOm9lKFwiMHhcIituLnMudG9TdHJpbmcoMTYpLDMyKX0pfWNvbXB1dGVTaGFyZWRTZWNyZXQodCl7Y29uc3Qgcj12ZSgpLmtleUZyb21Qcml2YXRlKE90KHRoaXMucHJpdmF0ZUtleSkpLGk9dmUoKS5rZXlGcm9tUHVibGljKE90KERmKHQpKSk7cmV0dXJuIG9lKFwiMHhcIityLmRlcml2ZShpLmdldFB1YmxpYygpKS50b1N0cmluZygxNiksMzIpfXN0YXRpYyBpc1NpZ25pbmdLZXkodCl7cmV0dXJuISEodCYmdC5faXNTaWduaW5nS2V5KX19ZnVuY3Rpb24gR2EoZSx0KXtjb25zdCByPXpuKHQpLGk9e3I6T3Qoci5yKSxzOk90KHIucyl9O3JldHVyblwiMHhcIit2ZSgpLnJlY292ZXJQdWJLZXkoT3QoZSksaSxyLnJlY292ZXJ5UGFyYW0pLmVuY29kZShcImhleFwiLCExKX1mdW5jdGlvbiBEZihlLHQpe2NvbnN0IHI9T3QoZSk7aWYoci5sZW5ndGg9PT0zMil7Y29uc3QgaT1uZXcgSmEocik7cmV0dXJuIHQ/XCIweFwiK3ZlKCkua2V5RnJvbVByaXZhdGUocikuZ2V0UHVibGljKCEwLFwiaGV4XCIpOmkucHVibGljS2V5fWVsc2V7aWYoci5sZW5ndGg9PT0zMylyZXR1cm4gdD9LdChyKTpcIjB4XCIrdmUoKS5rZXlGcm9tUHVibGljKHIpLmdldFB1YmxpYyghMSxcImhleFwiKTtpZihyLmxlbmd0aD09PTY1KXJldHVybiB0P1wiMHhcIit2ZSgpLmtleUZyb21QdWJsaWMocikuZ2V0UHVibGljKCEwLFwiaGV4XCIpOkt0KHIpfXJldHVybiBxaS50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIHB1YmxpYyBvciBwcml2YXRlIGtleVwiLFwia2V5XCIsXCJbUkVEQUNURURdXCIpfWNvbnN0IFlhPVwidHJhbnNhY3Rpb25zLzUuNy4wXCI7bmV3IEwoWWEpO3ZhciBGZjsoZnVuY3Rpb24oZSl7ZVtlLmxlZ2FjeT0wXT1cImxlZ2FjeVwiLGVbZS5laXAyOTMwPTFdPVwiZWlwMjkzMFwiLGVbZS5laXAxNTU5PTJdPVwiZWlwMTU1OVwifSkoRmZ8fChGZj17fSkpO2Z1bmN0aW9uIFZhKGUpe2NvbnN0IHQ9RGYoZSk7cmV0dXJuIG5zKEhuKHlpKEhuKHQsMSkpLDEyKSl9ZnVuY3Rpb24gV2EoZSx0KXtyZXR1cm4gVmEoR2EoT3QoZSksdCkpfWNvbnN0IFhhPVwiaHR0cHM6Ly9ycGMud2FsbGV0Y29ubmVjdC5jb20vdjFcIjthc3luYyBmdW5jdGlvbiBUZihlLHQscixpLG4sbyl7c3dpdGNoKHIudCl7Y2FzZVwiZWlwMTkxXCI6cmV0dXJuIFVmKGUsdCxyLnMpO2Nhc2VcImVpcDEyNzFcIjpyZXR1cm4gYXdhaXQga2YoZSx0LHIucyxpLG4sbyk7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoYHZlcmlmeVNpZ25hdHVyZSBmYWlsZWQ6IEF0dGVtcHRlZCB0byB2ZXJpZnkgQ2FjYW9TaWduYXR1cmUgd2l0aCB1bmtub3duIHR5cGU6ICR7ci50fWApfX1mdW5jdGlvbiBVZihlLHQscil7cmV0dXJuIFdhKGZmKHQpLHIpLnRvTG93ZXJDYXNlKCk9PT1lLnRvTG93ZXJDYXNlKCl9YXN5bmMgZnVuY3Rpb24ga2YoZSx0LHIsaSxuLG8pe3RyeXtjb25zdCBoPVwiMHgxNjI2YmE3ZVwiLHA9XCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDQwXCIsYj1cIjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNDFcIixtPXIuc3Vic3RyaW5nKDIpLHc9ZmYodCkuc3Vic3RyaW5nKDIpLHk9aCt3K3ArYittLFM9YXdhaXQgZmV0Y2goYCR7b3x8WGF9Lz9jaGFpbklkPSR7aX0mcHJvamVjdElkPSR7bn1gLHttZXRob2Q6XCJQT1NUXCIsYm9keTpKU09OLnN0cmluZ2lmeSh7aWQ6WmEoKSxqc29ucnBjOlwiMi4wXCIsbWV0aG9kOlwiZXRoX2NhbGxcIixwYXJhbXM6W3t0bzplLGRhdGE6eX0sXCJsYXRlc3RcIl19KX0pLHtyZXN1bHQ6SX09YXdhaXQgUy5qc29uKCk7cmV0dXJuIEk/SS5zbGljZSgwLGgubGVuZ3RoKS50b0xvd2VyQ2FzZSgpPT09aC50b0xvd2VyQ2FzZSgpOiExfWNhdGNoKGgpe3JldHVybiBjb25zb2xlLmVycm9yKFwiaXNWYWxpZEVpcDEyNzFTaWduYXR1cmU6IFwiLGgpLCExfX1mdW5jdGlvbiBaYSgpe3JldHVybiBEYXRlLm5vdygpK01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxZTMpfXZhciAkYT1PYmplY3QuZGVmaW5lUHJvcGVydHksdHU9T2JqZWN0LmRlZmluZVByb3BlcnRpZXMsZXU9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMscWY9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyxydT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGl1PU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUsS2Y9KGUsdCxyKT0+dCBpbiBlPyRhKGUsdCx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6cn0pOmVbdF09cixIaT0oZSx0KT0+e2Zvcih2YXIgciBpbiB0fHwodD17fSkpcnUuY2FsbCh0LHIpJiZLZihlLHIsdFtyXSk7aWYocWYpZm9yKHZhciByIG9mIHFmKHQpKWl1LmNhbGwodCxyKSYmS2YoZSxyLHRbcl0pO3JldHVybiBlfSxIZj0oZSx0KT0+dHUoZSxldSh0KSk7Y29uc3QgbnU9XCJkaWQ6cGtoOlwiLExyPWU9PmU/LnNwbGl0KFwiOlwiKSx6aT1lPT57Y29uc3QgdD1lJiZMcihlKTtpZih0KXJldHVybiBlLmluY2x1ZGVzKG51KT90WzNdOnRbMV19LGZ1PWU9Pntjb25zdCB0PWUmJkxyKGUpO2lmKHQpcmV0dXJuIHRbMl0rXCI6XCIrdFszXX0sTGk9ZT0+e2NvbnN0IHQ9ZSYmTHIoZSk7aWYodClyZXR1cm4gdC5wb3AoKX07YXN5bmMgZnVuY3Rpb24gb3UoZSl7Y29uc3R7Y2FjYW86dCxwcm9qZWN0SWQ6cn09ZSx7czppLHA6bn09dCxvPXpmKG4sbi5pc3MpLGg9TGkobi5pc3MpO3JldHVybiBhd2FpdCBUZihoLG8saSx6aShuLmlzcykscil9Y29uc3QgemY9KGUsdCk9Pntjb25zdCByPWAke2UuZG9tYWlufSB3YW50cyB5b3UgdG8gc2lnbiBpbiB3aXRoIHlvdXIgRXRoZXJldW0gYWNjb3VudDpgLGk9TGkodCk7aWYoIWUuYXVkJiYhZS51cmkpdGhyb3cgbmV3IEVycm9yKFwiRWl0aGVyIGBhdWRgIG9yIGB1cmlgIGlzIHJlcXVpcmVkIHRvIGNvbnN0cnVjdCB0aGUgbWVzc2FnZVwiKTtsZXQgbj1lLnN0YXRlbWVudHx8dm9pZCAwO2NvbnN0IG89YFVSSTogJHtlLmF1ZHx8ZS51cml9YCxoPWBWZXJzaW9uOiAke2UudmVyc2lvbn1gLHA9YENoYWluIElEOiAke3ppKHQpfWAsYj1gTm9uY2U6ICR7ZS5ub25jZX1gLG09YElzc3VlZCBBdDogJHtlLmlhdH1gLHc9ZS5yZXNvdXJjZXM/YFJlc291cmNlczoke2UucmVzb3VyY2VzLm1hcChTPT5gXG4tICR7U31gKS5qb2luKFwiXCIpfWA6dm9pZCAwLHk9UXIoZS5yZXNvdXJjZXMpO2lmKHkpe2NvbnN0IFM9T2UoeSk7bj1KaShuLFMpfXJldHVybltyLGksXCJcIixuLFwiXCIsbyxoLHAsYixtLHddLmZpbHRlcihTPT5TIT1udWxsKS5qb2luKGBcbmApfTtmdW5jdGlvbiBzdShlLHQscil7cmV0dXJuIHIuaW5jbHVkZXMoXCJkaWQ6cGtoOlwiKXx8KHI9YGRpZDpwa2g6JHtyfWApLHtoOnt0OlwiY2FpcDEyMlwifSxwOntpc3M6cixkb21haW46ZS5kb21haW4sYXVkOmUuYXVkLHZlcnNpb246ZS52ZXJzaW9uLG5vbmNlOmUubm9uY2UsaWF0OmUuaWF0LHN0YXRlbWVudDplLnN0YXRlbWVudCxyZXF1ZXN0SWQ6ZS5yZXF1ZXN0SWQscmVzb3VyY2VzOmUucmVzb3VyY2VzLG5iZjplLm5iZixleHA6ZS5leHB9LHM6dH19ZnVuY3Rpb24gYXUoZSl7dmFyIHQ7Y29uc3R7YXV0aFBheWxvYWQ6cixjaGFpbnM6aSxtZXRob2RzOm59PWUsbz1yLnN0YXRlbWVudHx8XCJcIjtpZighKGkhPW51bGwmJmkubGVuZ3RoKSlyZXR1cm4gcjtjb25zdCBoPXIuY2hhaW5zLHA9bWkoaCxpKTtpZighKHAhPW51bGwmJnAubGVuZ3RoKSl0aHJvdyBuZXcgRXJyb3IoXCJObyBzdXBwb3J0ZWQgY2hhaW5zXCIpO2NvbnN0IGI9TGYoci5yZXNvdXJjZXMpO2lmKCFiKXJldHVybiByO21lKGIpO2NvbnN0IG09amYoYixcImVpcDE1NVwiKTtsZXQgdz1yPy5yZXNvdXJjZXN8fFtdO2lmKG0hPW51bGwmJm0ubGVuZ3RoKXtjb25zdCB5PVFmKG0pLFM9bWkoeSxuKTtpZighKFMhPW51bGwmJlMubGVuZ3RoKSl0aHJvdyBuZXcgRXJyb3IoYFN1cHBvcnRlZCBtZXRob2RzIGRvbid0IHNhdGlzZnkgdGhlIHJlcXVlc3RlZDogJHtKU09OLnN0cmluZ2lmeSh5KX0sIHN1cHBvcnRlZDogJHtKU09OLnN0cmluZ2lmeShuKX1gKTtjb25zdCBJPWppKFwicmVxdWVzdFwiLFMse2NoYWluczpwfSksTj1WZihiLFwiZWlwMTU1XCIsSSk7dz0oKHQ9cj8ucmVzb3VyY2VzKT09bnVsbD92b2lkIDA6dC5zbGljZSgwLC0xKSl8fFtdLHcucHVzaChqcihOKSl9cmV0dXJuIEhmKEhpKHt9LHIpLHtzdGF0ZW1lbnQ6WGYobyxRcih3KSksY2hhaW5zOnAscmVzb3VyY2VzOnIhPW51bGwmJnIucmVzb3VyY2VzfHx3Lmxlbmd0aD4wP3c6dm9pZCAwfSl9ZnVuY3Rpb24gTGYoZSl7Y29uc3QgdD1RcihlKTtpZih0JiZRaSh0KSlyZXR1cm4gT2UodCl9ZnVuY3Rpb24gdXUoZSx0KXt2YXIgcjtyZXR1cm4ocj1lPy5hdHQpPT1udWxsP3ZvaWQgMDpyLmhhc093blByb3BlcnR5KHQpfWZ1bmN0aW9uIGpmKGUsdCl7dmFyIHIsaTtyZXR1cm4ocj1lPy5hdHQpIT1udWxsJiZyW3RdP09iamVjdC5rZXlzKChpPWU/LmF0dCk9PW51bGw/dm9pZCAwOmlbdF0pOltdfWZ1bmN0aW9uIGh1KGUpe3JldHVybiBlPy5tYXAodD0+T2JqZWN0LmtleXModCkpfHxbXX1mdW5jdGlvbiBRZihlKXtyZXR1cm4gZT8ubWFwKHQ9Pnt2YXIgcjtyZXR1cm4ocj10LnNwbGl0KFwiL1wiKSk9PW51bGw/dm9pZCAwOnJbMV19KXx8W119ZnVuY3Rpb24gSmYoZSl7cmV0dXJuIEJ1ZmZlci5mcm9tKEpTT04uc3RyaW5naWZ5KGUpKS50b1N0cmluZyhcImJhc2U2NFwiKX1mdW5jdGlvbiBHZihlKXtyZXR1cm4gSlNPTi5wYXJzZShCdWZmZXIuZnJvbShlLFwiYmFzZTY0XCIpLnRvU3RyaW5nKFwidXRmLThcIikpfWZ1bmN0aW9uIG1lKGUpe2lmKCFlKXRocm93IG5ldyBFcnJvcihcIk5vIHJlY2FwIHByb3ZpZGVkLCB2YWx1ZSBpcyB1bmRlZmluZWRcIik7aWYoIWUuYXR0KXRocm93IG5ldyBFcnJvcihcIk5vIGBhdHRgIHByb3BlcnR5IGZvdW5kXCIpO2NvbnN0IHQ9T2JqZWN0LmtleXMoZS5hdHQpO2lmKCEodCE9bnVsbCYmdC5sZW5ndGgpKXRocm93IG5ldyBFcnJvcihcIk5vIHJlc291cmNlcyBmb3VuZCBpbiBgYXR0YCBwcm9wZXJ0eVwiKTt0LmZvckVhY2gocj0+e2NvbnN0IGk9ZS5hdHRbcl07aWYoQXJyYXkuaXNBcnJheShpKSl0aHJvdyBuZXcgRXJyb3IoYFJlc291cmNlIG11c3QgYmUgYW4gb2JqZWN0OiAke3J9YCk7aWYodHlwZW9mIGkhPVwib2JqZWN0XCIpdGhyb3cgbmV3IEVycm9yKGBSZXNvdXJjZSBtdXN0IGJlIGFuIG9iamVjdDogJHtyfWApO2lmKCFPYmplY3Qua2V5cyhpKS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKGBSZXNvdXJjZSBvYmplY3QgaXMgZW1wdHk6ICR7cn1gKTtPYmplY3Qua2V5cyhpKS5mb3JFYWNoKG49Pntjb25zdCBvPWlbbl07aWYoIUFycmF5LmlzQXJyYXkobykpdGhyb3cgbmV3IEVycm9yKGBBYmlsaXR5IGxpbWl0cyAke259IG11c3QgYmUgYW4gYXJyYXkgb2Ygb2JqZWN0cywgZm91bmQ6ICR7b31gKTtpZighby5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKGBWYWx1ZSBvZiAke259IGlzIGVtcHR5IGFycmF5LCBtdXN0IGJlIGFuIGFycmF5IHdpdGggb2JqZWN0c2ApO28uZm9yRWFjaChoPT57aWYodHlwZW9mIGghPVwib2JqZWN0XCIpdGhyb3cgbmV3IEVycm9yKGBBYmlsaXR5IGxpbWl0cyAoJHtufSkgbXVzdCBiZSBhbiBhcnJheSBvZiBvYmplY3RzLCBmb3VuZDogJHtofWApfSl9KX0pfWZ1bmN0aW9uIFlmKGUsdCxyLGk9e30pe3JldHVybiByPy5zb3J0KChuLG8pPT5uLmxvY2FsZUNvbXBhcmUobykpLHthdHQ6e1tlXTpqaSh0LHIsaSl9fX1mdW5jdGlvbiBWZihlLHQscil7dmFyIGk7cmV0dXJuIGUuYXR0W3RdPUhpKHt9LHIpLCgoaT1PYmplY3Qua2V5cyhlLmF0dCkpPT1udWxsP3ZvaWQgMDppLnNvcnQoKG4sbyk9Pm4ubG9jYWxlQ29tcGFyZShvKSkpLnJlZHVjZSgobixvKT0+KG4uYXR0W29dPWUuYXR0W29dLG4pLHthdHQ6e319KX1mdW5jdGlvbiBqaShlLHQscj17fSl7dD10Py5zb3J0KChuLG8pPT5uLmxvY2FsZUNvbXBhcmUobykpO2NvbnN0IGk9dC5tYXAobj0+KHtbYCR7ZX0vJHtufWBdOltyXX0pKTtyZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwuLi5pKX1mdW5jdGlvbiBqcihlKXtyZXR1cm4gbWUoZSksYHVybjpyZWNhcDoke0pmKGUpLnJlcGxhY2UoLz0vZyxcIlwiKX1gfWZ1bmN0aW9uIE9lKGUpe2NvbnN0IHQ9R2YoZS5yZXBsYWNlKFwidXJuOnJlY2FwOlwiLFwiXCIpKTtyZXR1cm4gbWUodCksdH1mdW5jdGlvbiBjdShlLHQscil7Y29uc3QgaT1ZZihlLHQscik7cmV0dXJuIGpyKGkpfWZ1bmN0aW9uIFFpKGUpe3JldHVybiBlJiZlLmluY2x1ZGVzKFwidXJuOnJlY2FwOlwiKX1mdW5jdGlvbiBsdShlLHQpe2NvbnN0IHI9T2UoZSksaT1PZSh0KSxuPVdmKHIsaSk7cmV0dXJuIGpyKG4pfWZ1bmN0aW9uIFdmKGUsdCl7bWUoZSksbWUodCk7Y29uc3Qgcj1PYmplY3Qua2V5cyhlLmF0dCkuY29uY2F0KE9iamVjdC5rZXlzKHQuYXR0KSkuc29ydCgobixvKT0+bi5sb2NhbGVDb21wYXJlKG8pKSxpPXthdHQ6e319O3JldHVybiByLmZvckVhY2gobj0+e3ZhciBvLGg7T2JqZWN0LmtleXMoKChvPWUuYXR0KT09bnVsbD92b2lkIDA6b1tuXSl8fHt9KS5jb25jYXQoT2JqZWN0LmtleXMoKChoPXQuYXR0KT09bnVsbD92b2lkIDA6aFtuXSl8fHt9KSkuc29ydCgocCxiKT0+cC5sb2NhbGVDb21wYXJlKGIpKS5mb3JFYWNoKHA9Pnt2YXIgYixtO2kuYXR0W25dPUhmKEhpKHt9LGkuYXR0W25dKSx7W3BdOigoYj1lLmF0dFtuXSk9PW51bGw/dm9pZCAwOmJbcF0pfHwoKG09dC5hdHRbbl0pPT1udWxsP3ZvaWQgMDptW3BdKX0pfSl9KSxpfWZ1bmN0aW9uIEppKGU9XCJcIix0KXttZSh0KTtjb25zdCByPVwiSSBmdXJ0aGVyIGF1dGhvcml6ZSB0aGUgc3RhdGVkIFVSSSB0byBwZXJmb3JtIHRoZSBmb2xsb3dpbmcgYWN0aW9ucyBvbiBteSBiZWhhbGY6IFwiO2lmKGUuaW5jbHVkZXMocikpcmV0dXJuIGU7Y29uc3QgaT1bXTtsZXQgbj0wO09iamVjdC5rZXlzKHQuYXR0KS5mb3JFYWNoKHA9Pntjb25zdCBiPU9iamVjdC5rZXlzKHQuYXR0W3BdKS5tYXAoeT0+KHthYmlsaXR5Onkuc3BsaXQoXCIvXCIpWzBdLGFjdGlvbjp5LnNwbGl0KFwiL1wiKVsxXX0pKTtiLnNvcnQoKHksUyk9PnkuYWN0aW9uLmxvY2FsZUNvbXBhcmUoUy5hY3Rpb24pKTtjb25zdCBtPXt9O2IuZm9yRWFjaCh5PT57bVt5LmFiaWxpdHldfHwobVt5LmFiaWxpdHldPVtdKSxtW3kuYWJpbGl0eV0ucHVzaCh5LmFjdGlvbil9KTtjb25zdCB3PU9iamVjdC5rZXlzKG0pLm1hcCh5PT4obisrLGAoJHtufSkgJyR7eX0nOiAnJHttW3ldLmpvaW4oXCInLCAnXCIpfScgZm9yICcke3B9Jy5gKSk7aS5wdXNoKHcuam9pbihcIiwgXCIpLnJlcGxhY2UoXCIuLFwiLFwiLlwiKSl9KTtjb25zdCBvPWkuam9pbihcIiBcIiksaD1gJHtyfSR7b31gO3JldHVybmAke2U/ZStcIiBcIjpcIlwifSR7aH1gfWZ1bmN0aW9uIGR1KGUpe3ZhciB0O2NvbnN0IHI9T2UoZSk7bWUocik7Y29uc3QgaT0odD1yLmF0dCk9PW51bGw/dm9pZCAwOnQuZWlwMTU1O3JldHVybiBpP09iamVjdC5rZXlzKGkpLm1hcChuPT5uLnNwbGl0KFwiL1wiKVsxXSk6W119ZnVuY3Rpb24gcHUoZSl7Y29uc3QgdD1PZShlKTttZSh0KTtjb25zdCByPVtdO3JldHVybiBPYmplY3QudmFsdWVzKHQuYXR0KS5mb3JFYWNoKGk9PntPYmplY3QudmFsdWVzKGkpLmZvckVhY2gobj0+e3ZhciBvOyhvPW4/LlswXSkhPW51bGwmJm8uY2hhaW5zJiZyLnB1c2goblswXS5jaGFpbnMpfSl9KSxbLi4ubmV3IFNldChyLmZsYXQoKSldfWZ1bmN0aW9uIFhmKGUsdCl7aWYoIXQpcmV0dXJuIGU7Y29uc3Qgcj1PZSh0KTtyZXR1cm4gbWUociksSmkoZSxyKX1mdW5jdGlvbiBRcihlKXtpZighZSlyZXR1cm47Y29uc3QgdD1lPy5bZS5sZW5ndGgtMV07cmV0dXJuIFFpKHQpP3Q6dm9pZCAwfWNvbnN0IEdpPVwiYmFzZTEwXCIsenQ9XCJiYXNlMTZcIixKcj1cImJhc2U2NHBhZFwiLEdyPVwidXRmOFwiLFlpPTAsbHI9MSx2dT0wLFpmPTEsVmk9MTIsV2k9MzI7ZnVuY3Rpb24gbXUoKXtjb25zdCBlPWNuLmdlbmVyYXRlS2V5UGFpcigpO3JldHVybntwcml2YXRlS2V5OnRlKGUuc2VjcmV0S2V5LHp0KSxwdWJsaWNLZXk6dGUoZS5wdWJsaWNLZXksenQpfX1mdW5jdGlvbiBndSgpe2NvbnN0IGU9dW4oV2kpO3JldHVybiB0ZShlLHp0KX1mdW5jdGlvbiBBdShlLHQpe2NvbnN0IHI9Y24uc2hhcmVkS2V5KGVlKGUsenQpLGVlKHQsenQpLCEwKSxpPW5ldyBVbyhrbyxyKS5leHBhbmQoV2kpO3JldHVybiB0ZShpLHp0KX1mdW5jdGlvbiBidShlKXtjb25zdCB0PWhuKGVlKGUsenQpKTtyZXR1cm4gdGUodCx6dCl9ZnVuY3Rpb24geXUoZSl7Y29uc3QgdD1obihlZShlLEdyKSk7cmV0dXJuIHRlKHQsenQpfWZ1bmN0aW9uICRmKGUpe3JldHVybiBlZShgJHtlfWAsR2kpfWZ1bmN0aW9uIE1yKGUpe3JldHVybiBOdW1iZXIodGUoZSxHaSkpfWZ1bmN0aW9uIHd1KGUpe2NvbnN0IHQ9JGYodHlwZW9mIGUudHlwZTxcInVcIj9lLnR5cGU6WWkpO2lmKE1yKHQpPT09bHImJnR5cGVvZiBlLnNlbmRlclB1YmxpY0tleT5cInVcIil0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHNlbmRlciBwdWJsaWMga2V5IGZvciB0eXBlIDEgZW52ZWxvcGVcIik7Y29uc3Qgcj10eXBlb2YgZS5zZW5kZXJQdWJsaWNLZXk8XCJ1XCI/ZWUoZS5zZW5kZXJQdWJsaWNLZXksenQpOnZvaWQgMCxpPXR5cGVvZiBlLml2PFwidVwiP2VlKGUuaXYsenQpOnVuKFZpKSxuPW5ldyBhbihlZShlLnN5bUtleSx6dCkpLnNlYWwoaSxlZShlLm1lc3NhZ2UsR3IpKTtyZXR1cm4gdG8oe3R5cGU6dCxzZWFsZWQ6bixpdjppLHNlbmRlclB1YmxpY0tleTpyfSl9ZnVuY3Rpb24geHUoZSl7Y29uc3QgdD1uZXcgYW4oZWUoZS5zeW1LZXksenQpKSx7c2VhbGVkOnIsaXY6aX09WGkoZS5lbmNvZGVkKSxuPXQub3BlbihpLHIpO2lmKG49PT1udWxsKXRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBkZWNyeXB0XCIpO3JldHVybiB0ZShuLEdyKX1mdW5jdGlvbiB0byhlKXtpZihNcihlLnR5cGUpPT09bHIpe2lmKHR5cGVvZiBlLnNlbmRlclB1YmxpY0tleT5cInVcIil0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHNlbmRlciBwdWJsaWMga2V5IGZvciB0eXBlIDEgZW52ZWxvcGVcIik7cmV0dXJuIHRlKGxuKFtlLnR5cGUsZS5zZW5kZXJQdWJsaWNLZXksZS5pdixlLnNlYWxlZF0pLEpyKX1yZXR1cm4gdGUobG4oW2UudHlwZSxlLml2LGUuc2VhbGVkXSksSnIpfWZ1bmN0aW9uIFhpKGUpe2NvbnN0IHQ9ZWUoZSxKcikscj10LnNsaWNlKHZ1LFpmKSxpPVpmO2lmKE1yKHIpPT09bHIpe2NvbnN0IHA9aStXaSxiPXArVmksbT10LnNsaWNlKGkscCksdz10LnNsaWNlKHAsYikseT10LnNsaWNlKGIpO3JldHVybnt0eXBlOnIsc2VhbGVkOnksaXY6dyxzZW5kZXJQdWJsaWNLZXk6bX19Y29uc3Qgbj1pK1ZpLG89dC5zbGljZShpLG4pLGg9dC5zbGljZShuKTtyZXR1cm57dHlwZTpyLHNlYWxlZDpoLGl2Om99fWZ1bmN0aW9uIE11KGUsdCl7Y29uc3Qgcj1YaShlKTtyZXR1cm4gZW8oe3R5cGU6TXIoci50eXBlKSxzZW5kZXJQdWJsaWNLZXk6dHlwZW9mIHIuc2VuZGVyUHVibGljS2V5PFwidVwiP3RlKHIuc2VuZGVyUHVibGljS2V5LHp0KTp2b2lkIDAscmVjZWl2ZXJQdWJsaWNLZXk6dD8ucmVjZWl2ZXJQdWJsaWNLZXl9KX1mdW5jdGlvbiBlbyhlKXtjb25zdCB0PWU/LnR5cGV8fFlpO2lmKHQ9PT1scil7aWYodHlwZW9mIGU/LnNlbmRlclB1YmxpY0tleT5cInVcIil0aHJvdyBuZXcgRXJyb3IoXCJtaXNzaW5nIHNlbmRlciBwdWJsaWMga2V5XCIpO2lmKHR5cGVvZiBlPy5yZWNlaXZlclB1YmxpY0tleT5cInVcIil0aHJvdyBuZXcgRXJyb3IoXCJtaXNzaW5nIHJlY2VpdmVyIHB1YmxpYyBrZXlcIil9cmV0dXJue3R5cGU6dCxzZW5kZXJQdWJsaWNLZXk6ZT8uc2VuZGVyUHVibGljS2V5LHJlY2VpdmVyUHVibGljS2V5OmU/LnJlY2VpdmVyUHVibGljS2V5fX1mdW5jdGlvbiBFdShlKXtyZXR1cm4gZS50eXBlPT09bHImJnR5cGVvZiBlLnNlbmRlclB1YmxpY0tleT09XCJzdHJpbmdcIiYmdHlwZW9mIGUucmVjZWl2ZXJQdWJsaWNLZXk9PVwic3RyaW5nXCJ9Y29uc3Qgcm89XCJpcm5cIjtmdW5jdGlvbiBTdShlKXtyZXR1cm4gZT8ucmVsYXl8fHtwcm90b2NvbDpyb319ZnVuY3Rpb24gTnUoZSl7Y29uc3QgdD1xb1tlXTtpZih0eXBlb2YgdD5cInVcIil0aHJvdyBuZXcgRXJyb3IoYFJlbGF5IFByb3RvY29sIG5vdCBzdXBwb3J0ZWQ6ICR7ZX1gKTtyZXR1cm4gdH12YXIgSXU9T2JqZWN0LmRlZmluZVByb3BlcnR5LF91PU9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzLEJ1PU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzLGlvPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsQ3U9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxSdT1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLG5vPShlLHQscik9PnQgaW4gZT9JdShlLHQse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnJ9KTplW3RdPXIsZm89KGUsdCk9Pntmb3IodmFyIHIgaW4gdHx8KHQ9e30pKUN1LmNhbGwodCxyKSYmbm8oZSxyLHRbcl0pO2lmKGlvKWZvcih2YXIgciBvZiBpbyh0KSlSdS5jYWxsKHQscikmJm5vKGUscix0W3JdKTtyZXR1cm4gZX0sT3U9KGUsdCk9Pl91KGUsQnUodCkpO2Z1bmN0aW9uIG9vKGUsdD1cIi1cIil7Y29uc3Qgcj17fSxpPVwicmVsYXlcIit0O3JldHVybiBPYmplY3Qua2V5cyhlKS5mb3JFYWNoKG49PntpZihuLnN0YXJ0c1dpdGgoaSkpe2NvbnN0IG89bi5yZXBsYWNlKGksXCJcIiksaD1lW25dO3Jbb109aH19KSxyfWZ1bmN0aW9uIFB1KGUpe2U9ZS5pbmNsdWRlcyhcIndjOi8vXCIpP2UucmVwbGFjZShcIndjOi8vXCIsXCJcIik6ZSxlPWUuaW5jbHVkZXMoXCJ3YzpcIik/ZS5yZXBsYWNlKFwid2M6XCIsXCJcIik6ZTtjb25zdCB0PWUuaW5kZXhPZihcIjpcIikscj1lLmluZGV4T2YoXCI/XCIpIT09LTE/ZS5pbmRleE9mKFwiP1wiKTp2b2lkIDAsaT1lLnN1YnN0cmluZygwLHQpLG49ZS5zdWJzdHJpbmcodCsxLHIpLnNwbGl0KFwiQFwiKSxvPXR5cGVvZiByPFwidVwiP2Uuc3Vic3RyaW5nKHIpOlwiXCIsaD1Oci5wYXJzZShvKSxwPXR5cGVvZiBoLm1ldGhvZHM9PVwic3RyaW5nXCI/aC5tZXRob2RzLnNwbGl0KFwiLFwiKTp2b2lkIDA7cmV0dXJue3Byb3RvY29sOmksdG9waWM6c28oblswXSksdmVyc2lvbjpwYXJzZUludChuWzFdLDEwKSxzeW1LZXk6aC5zeW1LZXkscmVsYXk6b28oaCksbWV0aG9kczpwLGV4cGlyeVRpbWVzdGFtcDpoLmV4cGlyeVRpbWVzdGFtcD9wYXJzZUludChoLmV4cGlyeVRpbWVzdGFtcCwxMCk6dm9pZCAwfX1mdW5jdGlvbiBzbyhlKXtyZXR1cm4gZS5zdGFydHNXaXRoKFwiLy9cIik/ZS5zdWJzdHJpbmcoMik6ZX1mdW5jdGlvbiBhbyhlLHQ9XCItXCIpe2NvbnN0IHI9XCJyZWxheVwiLGk9e307cmV0dXJuIE9iamVjdC5rZXlzKGUpLmZvckVhY2gobj0+e2NvbnN0IG89cit0K247ZVtuXSYmKGlbb109ZVtuXSl9KSxpfWZ1bmN0aW9uIER1KGUpe3JldHVybmAke2UucHJvdG9jb2x9OiR7ZS50b3BpY31AJHtlLnZlcnNpb259P2ArTnIuc3RyaW5naWZ5KGZvKE91KGZvKHtzeW1LZXk6ZS5zeW1LZXl9LGFvKGUucmVsYXkpKSx7ZXhwaXJ5VGltZXN0YW1wOmUuZXhwaXJ5VGltZXN0YW1wfSksZS5tZXRob2RzP3ttZXRob2RzOmUubWV0aG9kcy5qb2luKFwiLFwiKX06e30pKX12YXIgRnU9T2JqZWN0LmRlZmluZVByb3BlcnR5LFR1PU9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzLFV1PU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzLHVvPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsa3U9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxxdT1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLGhvPShlLHQscik9PnQgaW4gZT9GdShlLHQse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnJ9KTplW3RdPXIsS3U9KGUsdCk9Pntmb3IodmFyIHIgaW4gdHx8KHQ9e30pKWt1LmNhbGwodCxyKSYmaG8oZSxyLHRbcl0pO2lmKHVvKWZvcih2YXIgciBvZiB1byh0KSlxdS5jYWxsKHQscikmJmhvKGUscix0W3JdKTtyZXR1cm4gZX0sSHU9KGUsdCk9PlR1KGUsVXUodCkpO2Z1bmN0aW9uICRlKGUpe2NvbnN0IHQ9W107cmV0dXJuIGUuZm9yRWFjaChyPT57Y29uc3RbaSxuXT1yLnNwbGl0KFwiOlwiKTt0LnB1c2goYCR7aX06JHtufWApfSksdH1mdW5jdGlvbiBjbyhlKXtjb25zdCB0PVtdO3JldHVybiBPYmplY3QudmFsdWVzKGUpLmZvckVhY2gocj0+e3QucHVzaCguLi4kZShyLmFjY291bnRzKSl9KSx0fWZ1bmN0aW9uIGxvKGUsdCl7Y29uc3Qgcj1bXTtyZXR1cm4gT2JqZWN0LnZhbHVlcyhlKS5mb3JFYWNoKGk9PnskZShpLmFjY291bnRzKS5pbmNsdWRlcyh0KSYmci5wdXNoKC4uLmkubWV0aG9kcyl9KSxyfWZ1bmN0aW9uIHBvKGUsdCl7Y29uc3Qgcj1bXTtyZXR1cm4gT2JqZWN0LnZhbHVlcyhlKS5mb3JFYWNoKGk9PnskZShpLmFjY291bnRzKS5pbmNsdWRlcyh0KSYmci5wdXNoKC4uLmkuZXZlbnRzKX0pLHJ9ZnVuY3Rpb24genUoZSx0KXtjb25zdCByPVNvKGUsdCk7aWYocil0aHJvdyBuZXcgRXJyb3Ioci5tZXNzYWdlKTtjb25zdCBpPXt9O2Zvcihjb25zdFtuLG9db2YgT2JqZWN0LmVudHJpZXMoZSkpaVtuXT17bWV0aG9kczpvLm1ldGhvZHMsZXZlbnRzOm8uZXZlbnRzLGNoYWluczpvLmFjY291bnRzLm1hcChoPT5gJHtoLnNwbGl0KFwiOlwiKVswXX06JHtoLnNwbGl0KFwiOlwiKVsxXX1gKX07cmV0dXJuIGl9ZnVuY3Rpb24gTHUoZSl7Y29uc3R7cHJvcG9zYWw6e3JlcXVpcmVkTmFtZXNwYWNlczp0LG9wdGlvbmFsTmFtZXNwYWNlczpyPXt9fSxzdXBwb3J0ZWROYW1lc3BhY2VzOml9PWUsbj0kaSh0KSxvPSRpKHIpLGg9e307T2JqZWN0LmtleXMoaSkuZm9yRWFjaChtPT57Y29uc3Qgdz1pW21dLmNoYWlucyx5PWlbbV0ubWV0aG9kcyxTPWlbbV0uZXZlbnRzLEk9aVttXS5hY2NvdW50czt3LmZvckVhY2goTj0+e2lmKCFJLnNvbWUoQz0+Qy5pbmNsdWRlcyhOKSkpdGhyb3cgbmV3IEVycm9yKGBObyBhY2NvdW50cyBwcm92aWRlZCBmb3IgY2hhaW4gJHtOfSBpbiBuYW1lc3BhY2UgJHttfWApfSksaFttXT17Y2hhaW5zOncsbWV0aG9kczp5LGV2ZW50czpTLGFjY291bnRzOkl9fSk7Y29uc3QgcD1Jbyh0LGgsXCJhcHByb3ZlKClcIik7aWYocCl0aHJvdyBuZXcgRXJyb3IocC5tZXNzYWdlKTtjb25zdCBiPXt9O3JldHVybiFPYmplY3Qua2V5cyh0KS5sZW5ndGgmJiFPYmplY3Qua2V5cyhyKS5sZW5ndGg/aDooT2JqZWN0LmtleXMobikuZm9yRWFjaChtPT57Y29uc3Qgdz1pW21dLmNoYWlucy5maWx0ZXIoTj0+e3ZhciBDLEY7cmV0dXJuKEY9KEM9blttXSk9PW51bGw/dm9pZCAwOkMuY2hhaW5zKT09bnVsbD92b2lkIDA6Ri5pbmNsdWRlcyhOKX0pLHk9aVttXS5tZXRob2RzLmZpbHRlcihOPT57dmFyIEMsRjtyZXR1cm4oRj0oQz1uW21dKT09bnVsbD92b2lkIDA6Qy5tZXRob2RzKT09bnVsbD92b2lkIDA6Ri5pbmNsdWRlcyhOKX0pLFM9aVttXS5ldmVudHMuZmlsdGVyKE49Pnt2YXIgQyxGO3JldHVybihGPShDPW5bbV0pPT1udWxsP3ZvaWQgMDpDLmV2ZW50cyk9PW51bGw/dm9pZCAwOkYuaW5jbHVkZXMoTil9KSxJPXcubWFwKE49PmlbbV0uYWNjb3VudHMuZmlsdGVyKEM9PkMuaW5jbHVkZXMoYCR7Tn06YCkpKS5mbGF0KCk7YlttXT17Y2hhaW5zOncsbWV0aG9kczp5LGV2ZW50czpTLGFjY291bnRzOkl9fSksT2JqZWN0LmtleXMobykuZm9yRWFjaChtPT57dmFyIHcseSxTLEksTixDO2lmKCFpW21dKXJldHVybjtjb25zdCBGPSh5PSh3PW9bbV0pPT1udWxsP3ZvaWQgMDp3LmNoYWlucyk9PW51bGw/dm9pZCAwOnkuZmlsdGVyKEc9PmlbbV0uY2hhaW5zLmluY2x1ZGVzKEcpKSxVPWlbbV0ubWV0aG9kcy5maWx0ZXIoRz0+e3ZhciBILHo7cmV0dXJuKHo9KEg9b1ttXSk9PW51bGw/dm9pZCAwOkgubWV0aG9kcyk9PW51bGw/dm9pZCAwOnouaW5jbHVkZXMoRyl9KSxKPWlbbV0uZXZlbnRzLmZpbHRlcihHPT57dmFyIEgsejtyZXR1cm4oej0oSD1vW21dKT09bnVsbD92b2lkIDA6SC5ldmVudHMpPT1udWxsP3ZvaWQgMDp6LmluY2x1ZGVzKEcpfSksQnQ9Rj8ubWFwKEc9PmlbbV0uYWNjb3VudHMuZmlsdGVyKEg9PkguaW5jbHVkZXMoYCR7R306YCkpKS5mbGF0KCk7YlttXT17Y2hhaW5zOmdlKChTPWJbbV0pPT1udWxsP3ZvaWQgMDpTLmNoYWlucyxGKSxtZXRob2RzOmdlKChJPWJbbV0pPT1udWxsP3ZvaWQgMDpJLm1ldGhvZHMsVSksZXZlbnRzOmdlKChOPWJbbV0pPT1udWxsP3ZvaWQgMDpOLmV2ZW50cyxKKSxhY2NvdW50czpnZSgoQz1iW21dKT09bnVsbD92b2lkIDA6Qy5hY2NvdW50cyxCdCl9fSksYil9ZnVuY3Rpb24gWmkoZSl7cmV0dXJuIGUuaW5jbHVkZXMoXCI6XCIpfWZ1bmN0aW9uIHZvKGUpe3JldHVybiBaaShlKT9lLnNwbGl0KFwiOlwiKVswXTplfWZ1bmN0aW9uICRpKGUpe3ZhciB0LHIsaTtjb25zdCBuPXt9O2lmKCFZcihlKSlyZXR1cm4gbjtmb3IoY29uc3RbbyxoXW9mIE9iamVjdC5lbnRyaWVzKGUpKXtjb25zdCBwPVppKG8pP1tvXTpoLmNoYWlucyxiPWgubWV0aG9kc3x8W10sbT1oLmV2ZW50c3x8W10sdz12byhvKTtuW3ddPUh1KEt1KHt9LG5bd10pLHtjaGFpbnM6Z2UocCwodD1uW3ddKT09bnVsbD92b2lkIDA6dC5jaGFpbnMpLG1ldGhvZHM6Z2UoYiwocj1uW3ddKT09bnVsbD92b2lkIDA6ci5tZXRob2RzKSxldmVudHM6Z2UobSwoaT1uW3ddKT09bnVsbD92b2lkIDA6aS5ldmVudHMpfSl9cmV0dXJuIG59ZnVuY3Rpb24gbW8oZSl7Y29uc3QgdD17fTtyZXR1cm4gZT8uZm9yRWFjaChyPT57Y29uc3RbaSxuXT1yLnNwbGl0KFwiOlwiKTt0W2ldfHwodFtpXT17YWNjb3VudHM6W10sY2hhaW5zOltdLGV2ZW50czpbXX0pLHRbaV0uYWNjb3VudHMucHVzaChyKSx0W2ldLmNoYWlucy5wdXNoKGAke2l9OiR7bn1gKX0pLHR9ZnVuY3Rpb24ganUoZSx0KXt0PXQubWFwKGk9PmkucmVwbGFjZShcImRpZDpwa2g6XCIsXCJcIikpO2NvbnN0IHI9bW8odCk7Zm9yKGNvbnN0W2ksbl1vZiBPYmplY3QuZW50cmllcyhyKSluLm1ldGhvZHM/bi5tZXRob2RzPWdlKG4ubWV0aG9kcyxlKTpuLm1ldGhvZHM9ZSxuLmV2ZW50cz1bXCJjaGFpbkNoYW5nZWRcIixcImFjY291bnRzQ2hhbmdlZFwiXTtyZXR1cm4gcn1jb25zdCBnbz17SU5WQUxJRF9NRVRIT0Q6e21lc3NhZ2U6XCJJbnZhbGlkIG1ldGhvZC5cIixjb2RlOjEwMDF9LElOVkFMSURfRVZFTlQ6e21lc3NhZ2U6XCJJbnZhbGlkIGV2ZW50LlwiLGNvZGU6MTAwMn0sSU5WQUxJRF9VUERBVEVfUkVRVUVTVDp7bWVzc2FnZTpcIkludmFsaWQgdXBkYXRlIHJlcXVlc3QuXCIsY29kZToxMDAzfSxJTlZBTElEX0VYVEVORF9SRVFVRVNUOnttZXNzYWdlOlwiSW52YWxpZCBleHRlbmQgcmVxdWVzdC5cIixjb2RlOjEwMDR9LElOVkFMSURfU0VTU0lPTl9TRVRUTEVfUkVRVUVTVDp7bWVzc2FnZTpcIkludmFsaWQgc2Vzc2lvbiBzZXR0bGUgcmVxdWVzdC5cIixjb2RlOjEwMDV9LFVOQVVUSE9SSVpFRF9NRVRIT0Q6e21lc3NhZ2U6XCJVbmF1dGhvcml6ZWQgbWV0aG9kLlwiLGNvZGU6MzAwMX0sVU5BVVRIT1JJWkVEX0VWRU5UOnttZXNzYWdlOlwiVW5hdXRob3JpemVkIGV2ZW50LlwiLGNvZGU6MzAwMn0sVU5BVVRIT1JJWkVEX1VQREFURV9SRVFVRVNUOnttZXNzYWdlOlwiVW5hdXRob3JpemVkIHVwZGF0ZSByZXF1ZXN0LlwiLGNvZGU6MzAwM30sVU5BVVRIT1JJWkVEX0VYVEVORF9SRVFVRVNUOnttZXNzYWdlOlwiVW5hdXRob3JpemVkIGV4dGVuZCByZXF1ZXN0LlwiLGNvZGU6MzAwNH0sVVNFUl9SRUpFQ1RFRDp7bWVzc2FnZTpcIlVzZXIgcmVqZWN0ZWQuXCIsY29kZTo1ZTN9LFVTRVJfUkVKRUNURURfQ0hBSU5TOnttZXNzYWdlOlwiVXNlciByZWplY3RlZCBjaGFpbnMuXCIsY29kZTo1MDAxfSxVU0VSX1JFSkVDVEVEX01FVEhPRFM6e21lc3NhZ2U6XCJVc2VyIHJlamVjdGVkIG1ldGhvZHMuXCIsY29kZTo1MDAyfSxVU0VSX1JFSkVDVEVEX0VWRU5UUzp7bWVzc2FnZTpcIlVzZXIgcmVqZWN0ZWQgZXZlbnRzLlwiLGNvZGU6NTAwM30sVU5TVVBQT1JURURfQ0hBSU5TOnttZXNzYWdlOlwiVW5zdXBwb3J0ZWQgY2hhaW5zLlwiLGNvZGU6NTEwMH0sVU5TVVBQT1JURURfTUVUSE9EUzp7bWVzc2FnZTpcIlVuc3VwcG9ydGVkIG1ldGhvZHMuXCIsY29kZTo1MTAxfSxVTlNVUFBPUlRFRF9FVkVOVFM6e21lc3NhZ2U6XCJVbnN1cHBvcnRlZCBldmVudHMuXCIsY29kZTo1MTAyfSxVTlNVUFBPUlRFRF9BQ0NPVU5UUzp7bWVzc2FnZTpcIlVuc3VwcG9ydGVkIGFjY291bnRzLlwiLGNvZGU6NTEwM30sVU5TVVBQT1JURURfTkFNRVNQQUNFX0tFWTp7bWVzc2FnZTpcIlVuc3VwcG9ydGVkIG5hbWVzcGFjZSBrZXkuXCIsY29kZTo1MTA0fSxVU0VSX0RJU0NPTk5FQ1RFRDp7bWVzc2FnZTpcIlVzZXIgZGlzY29ubmVjdGVkLlwiLGNvZGU6NmUzfSxTRVNTSU9OX1NFVFRMRU1FTlRfRkFJTEVEOnttZXNzYWdlOlwiU2Vzc2lvbiBzZXR0bGVtZW50IGZhaWxlZC5cIixjb2RlOjdlM30sV0NfTUVUSE9EX1VOU1VQUE9SVEVEOnttZXNzYWdlOlwiVW5zdXBwb3J0ZWQgd2NfIG1ldGhvZC5cIixjb2RlOjEwMDAxfX0sQW89e05PVF9JTklUSUFMSVpFRDp7bWVzc2FnZTpcIk5vdCBpbml0aWFsaXplZC5cIixjb2RlOjF9LE5PX01BVENISU5HX0tFWTp7bWVzc2FnZTpcIk5vIG1hdGNoaW5nIGtleS5cIixjb2RlOjJ9LFJFU1RPUkVfV0lMTF9PVkVSUklERTp7bWVzc2FnZTpcIlJlc3RvcmUgd2lsbCBvdmVycmlkZS5cIixjb2RlOjN9LFJFU1VCU0NSSUJFRDp7bWVzc2FnZTpcIlJlc3Vic2NyaWJlZC5cIixjb2RlOjR9LE1JU1NJTkdfT1JfSU5WQUxJRDp7bWVzc2FnZTpcIk1pc3Npbmcgb3IgaW52YWxpZC5cIixjb2RlOjV9LEVYUElSRUQ6e21lc3NhZ2U6XCJFeHBpcmVkLlwiLGNvZGU6Nn0sVU5LTk9XTl9UWVBFOnttZXNzYWdlOlwiVW5rbm93biB0eXBlLlwiLGNvZGU6N30sTUlTTUFUQ0hFRF9UT1BJQzp7bWVzc2FnZTpcIk1pc21hdGNoZWQgdG9waWMuXCIsY29kZTo4fSxOT05fQ09ORk9STUlOR19OQU1FU1BBQ0VTOnttZXNzYWdlOlwiTm9uIGNvbmZvcm1pbmcgbmFtZXNwYWNlcy5cIixjb2RlOjl9fTtmdW5jdGlvbiB4ZShlLHQpe2NvbnN0e21lc3NhZ2U6cixjb2RlOml9PUFvW2VdO3JldHVybnttZXNzYWdlOnQ/YCR7cn0gJHt0fWA6cixjb2RlOml9fWZ1bmN0aW9uIHRyKGUsdCl7Y29uc3R7bWVzc2FnZTpyLGNvZGU6aX09Z29bZV07cmV0dXJue21lc3NhZ2U6dD9gJHtyfSAke3R9YDpyLGNvZGU6aX19ZnVuY3Rpb24gRXIoZSx0KXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKT90eXBlb2YgdDxcInVcIiYmZS5sZW5ndGg/ZS5ldmVyeSh0KTohMDohMX1mdW5jdGlvbiBZcihlKXtyZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKGUpPT09T2JqZWN0LnByb3RvdHlwZSYmT2JqZWN0LmtleXMoZSkubGVuZ3RofWZ1bmN0aW9uIFBlKGUpe3JldHVybiB0eXBlb2YgZT5cInVcIn1mdW5jdGlvbiBHdChlLHQpe3JldHVybiB0JiZQZShlKT8hMDp0eXBlb2YgZT09XCJzdHJpbmdcIiYmISFlLnRyaW0oKS5sZW5ndGh9ZnVuY3Rpb24gVnIoZSx0KXtyZXR1cm4gdCYmUGUoZSk/ITA6dHlwZW9mIGU9PVwibnVtYmVyXCImJiFpc05hTihlKX1mdW5jdGlvbiBRdShlLHQpe2NvbnN0e3JlcXVpcmVkTmFtZXNwYWNlczpyfT10LGk9T2JqZWN0LmtleXMoZS5uYW1lc3BhY2VzKSxuPU9iamVjdC5rZXlzKHIpO2xldCBvPSEwO3JldHVybiBfZShuLGkpPyhpLmZvckVhY2goaD0+e2NvbnN0e2FjY291bnRzOnAsbWV0aG9kczpiLGV2ZW50czptfT1lLm5hbWVzcGFjZXNbaF0sdz0kZShwKSx5PXJbaF07KCFfZShfcihoLHkpLHcpfHwhX2UoeS5tZXRob2RzLGIpfHwhX2UoeS5ldmVudHMsbSkpJiYobz0hMSl9KSxvKTohMX1mdW5jdGlvbiBTcihlKXtyZXR1cm4gR3QoZSwhMSkmJmUuaW5jbHVkZXMoXCI6XCIpP2Uuc3BsaXQoXCI6XCIpLmxlbmd0aD09PTI6ITF9ZnVuY3Rpb24gYm8oZSl7aWYoR3QoZSwhMSkmJmUuaW5jbHVkZXMoXCI6XCIpKXtjb25zdCB0PWUuc3BsaXQoXCI6XCIpO2lmKHQubGVuZ3RoPT09Myl7Y29uc3Qgcj10WzBdK1wiOlwiK3RbMV07cmV0dXJuISF0WzJdJiZTcihyKX19cmV0dXJuITF9ZnVuY3Rpb24gSnUoZSl7aWYoR3QoZSwhMSkpdHJ5e3JldHVybiB0eXBlb2YgbmV3IFVSTChlKTxcInVcIn1jYXRjaHtyZXR1cm4hMX1yZXR1cm4hMX1mdW5jdGlvbiBHdShlKXt2YXIgdDtyZXR1cm4odD1lPy5wcm9wb3Nlcik9PW51bGw/dm9pZCAwOnQucHVibGljS2V5fWZ1bmN0aW9uIFl1KGUpe3JldHVybiBlPy50b3BpY31mdW5jdGlvbiBWdShlLHQpe2xldCByPW51bGw7cmV0dXJuIEd0KGU/LnB1YmxpY0tleSwhMSl8fChyPXhlKFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYCR7dH0gY29udHJvbGxlciBwdWJsaWMga2V5IHNob3VsZCBiZSBhIHN0cmluZ2ApKSxyfWZ1bmN0aW9uIHRuKGUpe2xldCB0PSEwO3JldHVybiBFcihlKT9lLmxlbmd0aCYmKHQ9ZS5ldmVyeShyPT5HdChyLCExKSkpOnQ9ITEsdH1mdW5jdGlvbiB5byhlLHQscil7bGV0IGk9bnVsbDtyZXR1cm4gRXIodCkmJnQubGVuZ3RoP3QuZm9yRWFjaChuPT57aXx8U3Iobil8fChpPXRyKFwiVU5TVVBQT1JURURfQ0hBSU5TXCIsYCR7cn0sIGNoYWluICR7bn0gc2hvdWxkIGJlIGEgc3RyaW5nIGFuZCBjb25mb3JtIHRvIFwibmFtZXNwYWNlOmNoYWluSWRcIiBmb3JtYXRgKSl9KTpTcihlKXx8KGk9dHIoXCJVTlNVUFBPUlRFRF9DSEFJTlNcIixgJHtyfSwgY2hhaW5zIG11c3QgYmUgZGVmaW5lZCBhcyBcIm5hbWVzcGFjZTpjaGFpbklkXCIgZS5nLiBcImVpcDE1NToxXCI6IHsuLi59IGluIHRoZSBuYW1lc3BhY2Uga2V5IE9SIGFzIGFuIGFycmF5IG9mIENBSVAtMiBjaGFpbklkcyBlLmcuIGVpcDE1NTogeyBjaGFpbnM6IFtcImVpcDE1NToxXCIsIFwiZWlwMTU1OjVcIl0gfWApKSxpfWZ1bmN0aW9uIHdvKGUsdCxyKXtsZXQgaT1udWxsO3JldHVybiBPYmplY3QuZW50cmllcyhlKS5mb3JFYWNoKChbbixvXSk9PntpZihpKXJldHVybjtjb25zdCBoPXlvKG4sX3IobixvKSxgJHt0fSAke3J9YCk7aCYmKGk9aCl9KSxpfWZ1bmN0aW9uIHhvKGUsdCl7bGV0IHI9bnVsbDtyZXR1cm4gRXIoZSk/ZS5mb3JFYWNoKGk9PntyfHxibyhpKXx8KHI9dHIoXCJVTlNVUFBPUlRFRF9BQ0NPVU5UU1wiLGAke3R9LCBhY2NvdW50ICR7aX0gc2hvdWxkIGJlIGEgc3RyaW5nIGFuZCBjb25mb3JtIHRvIFwibmFtZXNwYWNlOmNoYWluSWQ6YWRkcmVzc1wiIGZvcm1hdGApKX0pOnI9dHIoXCJVTlNVUFBPUlRFRF9BQ0NPVU5UU1wiLGAke3R9LCBhY2NvdW50cyBzaG91bGQgYmUgYW4gYXJyYXkgb2Ygc3RyaW5ncyBjb25mb3JtaW5nIHRvIFwibmFtZXNwYWNlOmNoYWluSWQ6YWRkcmVzc1wiIGZvcm1hdGApLHJ9ZnVuY3Rpb24gTW8oZSx0KXtsZXQgcj1udWxsO3JldHVybiBPYmplY3QudmFsdWVzKGUpLmZvckVhY2goaT0+e2lmKHIpcmV0dXJuO2NvbnN0IG49eG8oaT8uYWNjb3VudHMsYCR7dH0gbmFtZXNwYWNlYCk7biYmKHI9bil9KSxyfWZ1bmN0aW9uIEVvKGUsdCl7bGV0IHI9bnVsbDtyZXR1cm4gdG4oZT8ubWV0aG9kcyk/dG4oZT8uZXZlbnRzKXx8KHI9dHIoXCJVTlNVUFBPUlRFRF9FVkVOVFNcIixgJHt0fSwgZXZlbnRzIHNob3VsZCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzIG9yIGVtcHR5IGFycmF5IGZvciBubyBldmVudHNgKSk6cj10cihcIlVOU1VQUE9SVEVEX01FVEhPRFNcIixgJHt0fSwgbWV0aG9kcyBzaG91bGQgYmUgYW4gYXJyYXkgb2Ygc3RyaW5ncyBvciBlbXB0eSBhcnJheSBmb3Igbm8gbWV0aG9kc2ApLHJ9ZnVuY3Rpb24gZW4oZSx0KXtsZXQgcj1udWxsO3JldHVybiBPYmplY3QudmFsdWVzKGUpLmZvckVhY2goaT0+e2lmKHIpcmV0dXJuO2NvbnN0IG49RW8oaSxgJHt0fSwgbmFtZXNwYWNlYCk7biYmKHI9bil9KSxyfWZ1bmN0aW9uIFd1KGUsdCxyKXtsZXQgaT1udWxsO2lmKGUmJllyKGUpKXtjb25zdCBuPWVuKGUsdCk7biYmKGk9bik7Y29uc3Qgbz13byhlLHQscik7byYmKGk9byl9ZWxzZSBpPXhlKFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYCR7dH0sICR7cn0gc2hvdWxkIGJlIGFuIG9iamVjdCB3aXRoIGRhdGFgKTtyZXR1cm4gaX1mdW5jdGlvbiBTbyhlLHQpe2xldCByPW51bGw7aWYoZSYmWXIoZSkpe2NvbnN0IGk9ZW4oZSx0KTtpJiYocj1pKTtjb25zdCBuPU1vKGUsdCk7biYmKHI9bil9ZWxzZSByPXhlKFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYCR7dH0sIG5hbWVzcGFjZXMgc2hvdWxkIGJlIGFuIG9iamVjdCB3aXRoIGRhdGFgKTtyZXR1cm4gcn1mdW5jdGlvbiBObyhlKXtyZXR1cm4gR3QoZS5wcm90b2NvbCwhMCl9ZnVuY3Rpb24gWHUoZSx0KXtsZXQgcj0hMTtyZXR1cm4gdCYmIWU/cj0hMDplJiZFcihlKSYmZS5sZW5ndGgmJmUuZm9yRWFjaChpPT57cj1ObyhpKX0pLHJ9ZnVuY3Rpb24gWnUoZSl7cmV0dXJuIHR5cGVvZiBlPT1cIm51bWJlclwifWZ1bmN0aW9uICR1KGUpe3JldHVybiB0eXBlb2YgZTxcInVcIiYmdHlwZW9mIGUhPT1udWxsfWZ1bmN0aW9uIHRoKGUpe3JldHVybiEoIWV8fHR5cGVvZiBlIT1cIm9iamVjdFwifHwhZS5jb2RlfHwhVnIoZS5jb2RlLCExKXx8IWUubWVzc2FnZXx8IUd0KGUubWVzc2FnZSwhMSkpfWZ1bmN0aW9uIGVoKGUpe3JldHVybiEoUGUoZSl8fCFHdChlLm1ldGhvZCwhMSkpfWZ1bmN0aW9uIHJoKGUpe3JldHVybiEoUGUoZSl8fFBlKGUucmVzdWx0KSYmUGUoZS5lcnJvcil8fCFWcihlLmlkLCExKXx8IUd0KGUuanNvbnJwYywhMSkpfWZ1bmN0aW9uIGloKGUpe3JldHVybiEoUGUoZSl8fCFHdChlLm5hbWUsITEpKX1mdW5jdGlvbiBuaChlLHQpe3JldHVybiEoIVNyKHQpfHwhY28oZSkuaW5jbHVkZXModCkpfWZ1bmN0aW9uIGZoKGUsdCxyKXtyZXR1cm4gR3QociwhMSk/bG8oZSx0KS5pbmNsdWRlcyhyKTohMX1mdW5jdGlvbiBvaChlLHQscil7cmV0dXJuIEd0KHIsITEpP3BvKGUsdCkuaW5jbHVkZXMocik6ITF9ZnVuY3Rpb24gSW8oZSx0LHIpe2xldCBpPW51bGw7Y29uc3Qgbj1zaChlKSxvPWFoKHQpLGg9T2JqZWN0LmtleXMobikscD1PYmplY3Qua2V5cyhvKSxiPV9vKE9iamVjdC5rZXlzKGUpKSxtPV9vKE9iamVjdC5rZXlzKHQpKSx3PWIuZmlsdGVyKHk9PiFtLmluY2x1ZGVzKHkpKTtyZXR1cm4gdy5sZW5ndGgmJihpPXhlKFwiTk9OX0NPTkZPUk1JTkdfTkFNRVNQQUNFU1wiLGAke3J9IG5hbWVzcGFjZXMga2V5cyBkb24ndCBzYXRpc2Z5IHJlcXVpcmVkTmFtZXNwYWNlcy5cbiAgICAgIFJlcXVpcmVkOiAke3cudG9TdHJpbmcoKX1cbiAgICAgIFJlY2VpdmVkOiAke09iamVjdC5rZXlzKHQpLnRvU3RyaW5nKCl9YCkpLF9lKGgscCl8fChpPXhlKFwiTk9OX0NPTkZPUk1JTkdfTkFNRVNQQUNFU1wiLGAke3J9IG5hbWVzcGFjZXMgY2hhaW5zIGRvbid0IHNhdGlzZnkgcmVxdWlyZWQgbmFtZXNwYWNlcy5cbiAgICAgIFJlcXVpcmVkOiAke2gudG9TdHJpbmcoKX1cbiAgICAgIEFwcHJvdmVkOiAke3AudG9TdHJpbmcoKX1gKSksT2JqZWN0LmtleXModCkuZm9yRWFjaCh5PT57aWYoIXkuaW5jbHVkZXMoXCI6XCIpfHxpKXJldHVybjtjb25zdCBTPSRlKHRbeV0uYWNjb3VudHMpO1MuaW5jbHVkZXMoeSl8fChpPXhlKFwiTk9OX0NPTkZPUk1JTkdfTkFNRVNQQUNFU1wiLGAke3J9IG5hbWVzcGFjZXMgYWNjb3VudHMgZG9uJ3Qgc2F0aXNmeSBuYW1lc3BhY2UgYWNjb3VudHMgZm9yICR7eX1cbiAgICAgICAgUmVxdWlyZWQ6ICR7eX1cbiAgICAgICAgQXBwcm92ZWQ6ICR7Uy50b1N0cmluZygpfWApKX0pLGguZm9yRWFjaCh5PT57aXx8KF9lKG5beV0ubWV0aG9kcyxvW3ldLm1ldGhvZHMpP19lKG5beV0uZXZlbnRzLG9beV0uZXZlbnRzKXx8KGk9eGUoXCJOT05fQ09ORk9STUlOR19OQU1FU1BBQ0VTXCIsYCR7cn0gbmFtZXNwYWNlcyBldmVudHMgZG9uJ3Qgc2F0aXNmeSBuYW1lc3BhY2UgZXZlbnRzIGZvciAke3l9YCkpOmk9eGUoXCJOT05fQ09ORk9STUlOR19OQU1FU1BBQ0VTXCIsYCR7cn0gbmFtZXNwYWNlcyBtZXRob2RzIGRvbid0IHNhdGlzZnkgbmFtZXNwYWNlIG1ldGhvZHMgZm9yICR7eX1gKSl9KSxpfWZ1bmN0aW9uIHNoKGUpe2NvbnN0IHQ9e307cmV0dXJuIE9iamVjdC5rZXlzKGUpLmZvckVhY2gocj0+e3ZhciBpO3IuaW5jbHVkZXMoXCI6XCIpP3Rbcl09ZVtyXTooaT1lW3JdLmNoYWlucyk9PW51bGx8fGkuZm9yRWFjaChuPT57dFtuXT17bWV0aG9kczplW3JdLm1ldGhvZHMsZXZlbnRzOmVbcl0uZXZlbnRzfX0pfSksdH1mdW5jdGlvbiBfbyhlKXtyZXR1cm5bLi4ubmV3IFNldChlLm1hcCh0PT50LmluY2x1ZGVzKFwiOlwiKT90LnNwbGl0KFwiOlwiKVswXTp0KSldfWZ1bmN0aW9uIGFoKGUpe2NvbnN0IHQ9e307cmV0dXJuIE9iamVjdC5rZXlzKGUpLmZvckVhY2gocj0+e2lmKHIuaW5jbHVkZXMoXCI6XCIpKXRbcl09ZVtyXTtlbHNle2NvbnN0IGk9JGUoZVtyXS5hY2NvdW50cyk7aT8uZm9yRWFjaChuPT57dFtuXT17YWNjb3VudHM6ZVtyXS5hY2NvdW50cy5maWx0ZXIobz0+by5pbmNsdWRlcyhgJHtufTpgKSksbWV0aG9kczplW3JdLm1ldGhvZHMsZXZlbnRzOmVbcl0uZXZlbnRzfX0pfX0pLHR9ZnVuY3Rpb24gdWgoZSx0KXtyZXR1cm4gVnIoZSwhMSkmJmU8PXQubWF4JiZlPj10Lm1pbn1mdW5jdGlvbiBoaCgpe2NvbnN0IGU9V2UoKTtyZXR1cm4gbmV3IFByb21pc2UodD0+e3N3aXRjaChlKXtjYXNlIHF0LmJyb3dzZXI6dChCbygpKTticmVhaztjYXNlIHF0LnJlYWN0TmF0aXZlOnQoQ28oKSk7YnJlYWs7Y2FzZSBxdC5ub2RlOnQoUm8oKSk7YnJlYWs7ZGVmYXVsdDp0KCEwKX19KX1mdW5jdGlvbiBCbygpe3JldHVybiBwcigpJiZuYXZpZ2F0b3I/Lm9uTGluZX1hc3luYyBmdW5jdGlvbiBDbygpe2lmKGVyKCkmJnR5cGVvZiBnbG9iYWw8XCJ1XCImJmdsb2JhbCE9bnVsbCYmZ2xvYmFsLk5ldEluZm8pe2NvbnN0IGU9YXdhaXQoZ2xvYmFsPT1udWxsP3ZvaWQgMDpnbG9iYWwuTmV0SW5mby5mZXRjaCgpKTtyZXR1cm4gZT8uaXNDb25uZWN0ZWR9cmV0dXJuITB9ZnVuY3Rpb24gUm8oKXtyZXR1cm4hMH1mdW5jdGlvbiBjaChlKXtzd2l0Y2goV2UoKSl7Y2FzZSBxdC5icm93c2VyOk9vKGUpO2JyZWFrO2Nhc2UgcXQucmVhY3ROYXRpdmU6UG8oZSk7YnJlYWs7Y2FzZSBxdC5ub2RlOmJyZWFrfX1mdW5jdGlvbiBPbyhlKXshZXIoKSYmcHIoKSYmKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib25saW5lXCIsKCk9PmUoITApKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwoKT0+ZSghMSkpKX1mdW5jdGlvbiBQbyhlKXtlcigpJiZ0eXBlb2YgZ2xvYmFsPFwidVwiJiZnbG9iYWwhPW51bGwmJmdsb2JhbC5OZXRJbmZvJiZnbG9iYWw/Lk5ldEluZm8uYWRkRXZlbnRMaXN0ZW5lcih0PT5lKHQ/LmlzQ29ubmVjdGVkKSl9Y29uc3Qgcm49e307Y2xhc3MgbGh7c3RhdGljIGdldCh0KXtyZXR1cm4gcm5bdF19c3RhdGljIHNldCh0LHIpe3JuW3RdPXJ9c3RhdGljIGRlbGV0ZSh0KXtkZWxldGUgcm5bdF19fWV4cG9ydHtHaSBhcyBCQVNFMTAsenQgYXMgQkFTRTE2LEpyIGFzIEJBU0U2NCxZbyBhcyBDT0xPTixkaSBhcyBERUZBVUxUX0RFUFRILEJyIGFzIEVNUFRZX1NQQUNFLHF0IGFzIEVOVl9NQVAsQW8gYXMgSU5URVJOQUxfRVJST1JTLGxoIGFzIE1lbW9yeVN0b3JlLFZvIGFzIE9ORV9USE9VU0FORCx4biBhcyBSRUFDVF9OQVRJVkVfUFJPRFVDVCxybyBhcyBSRUxBWUVSX0RFRkFVTFRfUFJPVE9DT0wsZ28gYXMgU0RLX0VSUk9SUyxFbiBhcyBTREtfVFlQRSxNbiBhcyBTTEFTSCxZaSBhcyBUWVBFXzAsbHIgYXMgVFlQRV8xLEdyIGFzIFVURjgsVmYgYXMgYWRkUmVzb3VyY2VUb1JlY2FwLFNuIGFzIGFwcGVuZFRvUXVlcnlTdHJpbmcsZTAgYXMgYXNzZXJ0VHlwZSxqaSBhcyBhc3NpZ25BYmlsaXR5VG9BY3Rpb25zLEdmIGFzIGJhc2U2NERlY29kZSxKZiBhcyBiYXNlNjRFbmNvZGUsTHUgYXMgYnVpbGRBcHByb3ZlZE5hbWVzcGFjZXMsc3UgYXMgYnVpbGRBdXRoT2JqZWN0LGp1IGFzIGJ1aWxkTmFtZXNwYWNlc0Zyb21BdXRoLFhmIGFzIGJ1aWxkUmVjYXBTdGF0ZW1lbnQsZDAgYXMgY2FsY0V4cGlyeSxzMCBhcyBjYXBpdGFsaXplLFJuIGFzIGNhcGl0YWxpemVXb3JkLGEwIGFzIGNyZWF0ZURlbGF5ZWRQcm9taXNlLGN1IGFzIGNyZWF0ZUVuY29kZWRSZWNhcCx1MCBhcyBjcmVhdGVFeHBpcmluZ1Byb21pc2UsWWYgYXMgY3JlYXRlUmVjYXAsT2UgYXMgZGVjb2RlUmVjYXAsTXIgYXMgZGVjb2RlVHlwZUJ5dGUseHUgYXMgZGVjcnlwdCxBdSBhcyBkZXJpdmVTeW1LZXksWGkgYXMgZGVzZXJpYWxpemUsanIgYXMgZW5jb2RlUmVjYXAsJGYgYXMgZW5jb2RlVHlwZUJ5dGUsd3UgYXMgZW5jcnlwdCx2MCBhcyBlbmdpbmVFdmVudCxvMCBhcyBlbnVtaWZ5LHZuIGFzIGZvcm1hdEFjY291bnRJZCxLbyBhcyBmb3JtYXRBY2NvdW50V2l0aENoYWluLHBuIGFzIGZvcm1hdENoYWluSWQsdmkgYXMgZm9ybWF0RXhwaXJlclRhcmdldCxjMCBhcyBmb3JtYXRJZFRhcmdldCx6ZiBhcyBmb3JtYXRNZXNzYWdlLHIwIGFzIGZvcm1hdE1lc3NhZ2VDb250ZXh0LGFvIGFzIGZvcm1hdFJlbGF5UGFyYW1zLCRvIGFzIGZvcm1hdFJlbGF5UnBjVXJsLEppIGFzIGZvcm1hdFN0YXRlbWVudEZyb21SZWNhcCxoMCBhcyBmb3JtYXRUb3BpY1RhcmdldCxfbiBhcyBmb3JtYXRVQSxEdSBhcyBmb3JtYXRVcmksbXUgYXMgZ2VuZXJhdGVLZXlQYWlyLGd1IGFzIGdlbmVyYXRlUmFuZG9tQnl0ZXMzMiwkZSBhcyBnZXRBY2NvdW50c0NoYWlucyx6byBhcyBnZXRBY2NvdW50c0Zyb21OYW1lc3BhY2VzLG1uIGFzIGdldEFkZHJlc3NGcm9tQWNjb3VudCxIbyBhcyBnZXRBZGRyZXNzZXNGcm9tQWNjb3VudHMsWG8gYXMgZ2V0QXBwTWV0YWRhdGEsQm8gYXMgZ2V0QnJvd3Nlck9ubGluZVN0YXR1cyxXbyBhcyBnZXRCdW5kbGVJZCxnbiBhcyBnZXRDaGFpbkZyb21BY2NvdW50LEFuIGFzIGdldENoYWluc0Zyb21BY2NvdW50cyxfciBhcyBnZXRDaGFpbnNGcm9tTmFtZXNwYWNlLExvIGFzIGdldENoYWluc0Zyb21OYW1lc3BhY2VzLHB1IGFzIGdldENoYWluc0Zyb21SZWNhcCxqbyBhcyBnZXRDaGFpbnNGcm9tUmVxdWlyZWROYW1lc3BhY2VzLG1pIGFzIGdldENvbW1vblZhbHVlc0luQXJyYXlzLExmIGFzIGdldERlY29kZWRSZWNhcEZyb21SZXNvdXJjZXMsZzAgYXMgZ2V0RGVlcExpbmssTGkgYXMgZ2V0RGlkQWRkcmVzcyxMciBhcyBnZXREaWRBZGRyZXNzU2VnbWVudHMsemkgYXMgZ2V0RGlkQ2hhaW5JZCxXZSBhcyBnZXRFbnZpcm9ubWVudCx0MCBhcyBnZXRIdHRwVXJsLHhlIGFzIGdldEludGVybmFsRXJyb3IsSW4gYXMgZ2V0SmF2YXNjcmlwdElELE5uIGFzIGdldEphdmFzY3JpcHRPUyxDbiBhcyBnZXRMYXN0SXRlbXMsZHUgYXMgZ2V0TWV0aG9kc0Zyb21SZWNhcCxmdSBhcyBnZXROYW1lc3BhY2VkRGlkQ2hhaW5JZCxjbyBhcyBnZXROYW1lc3BhY2VzQ2hhaW5zLHBvIGFzIGdldE5hbWVzcGFjZXNFdmVudHNGb3JDaGFpbklkLG1vIGFzIGdldE5hbWVzcGFjZXNGcm9tQWNjb3VudHMsbG8gYXMgZ2V0TmFtZXNwYWNlc01ldGhvZHNGb3JDaGFpbklkLFJvIGFzIGdldE5vZGVPbmxpbmVTdGF0dXMsUWYgYXMgZ2V0UmVDYXBBY3Rpb25zLENvIGFzIGdldFJlYWN0TmF0aXZlT25saW5lU3RhdHVzLGh1IGFzIGdldFJlY2FwQWJpbGl0aWVzRnJvbVJlc291cmNlLFFyIGFzIGdldFJlY2FwRnJvbVJlc291cmNlcyxqZiBhcyBnZXRSZWNhcFJlc291cmNlLFpvIGFzIGdldFJlbGF5Q2xpZW50TWV0YWRhdGEsTnUgYXMgZ2V0UmVsYXlQcm90b2NvbEFwaSxTdSBhcyBnZXRSZWxheVByb3RvY29sTmFtZSx6dSBhcyBnZXRSZXF1aXJlZE5hbWVzcGFjZXNGcm9tTmFtZXNwYWNlcyx0ciBhcyBnZXRTZGtFcnJvcixsaSBhcyBnZXRVbmlxdWVWYWx1ZXMsbTAgYXMgaGFuZGxlRGVlcGxpbmtSZWRpcmVjdCxfZSBhcyBoYXNPdmVybGFwLGJ1IGFzIGhhc2hLZXkseXUgYXMgaGFzaE1lc3NhZ2UscHIgYXMgaXNCcm93c2VyLFppIGFzIGlzQ2FpcE5hbWVzcGFjZSxJbyBhcyBpc0NvbmZvcm1pbmdOYW1lc3BhY2VzLHAwIGFzIGlzRXhwaXJlZCxwaSBhcyBpc05vZGUsaGggYXMgaXNPbmxpbmUsR3UgYXMgaXNQcm9wb3NhbFN0cnVjdCxlciBhcyBpc1JlYWN0TmF0aXZlLFFpIGFzIGlzUmVjYXAsUXUgYXMgaXNTZXNzaW9uQ29tcGF0aWJsZSxZdSBhcyBpc1Nlc3Npb25TdHJ1Y3QsRXUgYXMgaXNUeXBlT25lRW52ZWxvcGUsUGUgYXMgaXNVbmRlZmluZWQsYm8gYXMgaXNWYWxpZEFjY291bnRJZCx4byBhcyBpc1ZhbGlkQWNjb3VudHMsRW8gYXMgaXNWYWxpZEFjdGlvbnMsRXIgYXMgaXNWYWxpZEFycmF5LFNyIGFzIGlzVmFsaWRDaGFpbklkLHlvIGFzIGlzVmFsaWRDaGFpbnMsVnUgYXMgaXNWYWxpZENvbnRyb2xsZXIsa2YgYXMgaXNWYWxpZEVpcDEyNzFTaWduYXR1cmUsVWYgYXMgaXNWYWxpZEVpcDE5MVNpZ25hdHVyZSx0aCBhcyBpc1ZhbGlkRXJyb3JSZWFzb24saWggYXMgaXNWYWxpZEV2ZW50LFp1IGFzIGlzVmFsaWRJZCxNbyBhcyBpc1ZhbGlkTmFtZXNwYWNlQWNjb3VudHMsZW4gYXMgaXNWYWxpZE5hbWVzcGFjZUFjdGlvbnMsd28gYXMgaXNWYWxpZE5hbWVzcGFjZUNoYWlucyx0biBhcyBpc1ZhbGlkTmFtZXNwYWNlTWV0aG9kc09yRXZlbnRzLFNvIGFzIGlzVmFsaWROYW1lc3BhY2VzLG5oIGFzIGlzVmFsaWROYW1lc3BhY2VzQ2hhaW5JZCxvaCBhcyBpc1ZhbGlkTmFtZXNwYWNlc0V2ZW50LGZoIGFzIGlzVmFsaWROYW1lc3BhY2VzUmVxdWVzdCxWciBhcyBpc1ZhbGlkTnVtYmVyLFlyIGFzIGlzVmFsaWRPYmplY3QsJHUgYXMgaXNWYWxpZFBhcmFtcyxtZSBhcyBpc1ZhbGlkUmVjYXAsTm8gYXMgaXNWYWxpZFJlbGF5LFh1IGFzIGlzVmFsaWRSZWxheXMsZWggYXMgaXNWYWxpZFJlcXVlc3QsdWggYXMgaXNWYWxpZFJlcXVlc3RFeHBpcnksV3UgYXMgaXNWYWxpZFJlcXVpcmVkTmFtZXNwYWNlcyxyaCBhcyBpc1ZhbGlkUmVzcG9uc2UsR3QgYXMgaXNWYWxpZFN0cmluZyxKdSBhcyBpc1ZhbGlkVXJsLGYwIGFzIG1hcEVudHJpZXMsaTAgYXMgbWFwVG9PYmosZ2UgYXMgbWVyZ2VBcnJheXMsbHUgYXMgbWVyZ2VFbmNvZGVkUmVjYXBzLFdmIGFzIG1lcmdlUmVjYXBzLCRpIGFzIG5vcm1hbGl6ZU5hbWVzcGFjZXMsbjAgYXMgb2JqVG9NYXAsY2kgYXMgcGFyc2VBY2NvdW50SWQsZG4gYXMgcGFyc2VDaGFpbklkLEJuIGFzIHBhcnNlQ29udGV4dE5hbWVzLGwwIGFzIHBhcnNlRXhwaXJlclRhcmdldCx2byBhcyBwYXJzZU5hbWVzcGFjZUtleSxvbyBhcyBwYXJzZVJlbGF5UGFyYW1zLHNvIGFzIHBhcnNlVG9waWMsUHUgYXMgcGFyc2VVcmksYXUgYXMgcG9wdWxhdGVBdXRoUGF5bG9hZCx1dSBhcyByZWNhcEhhc1Jlc291cmNlLHRvIGFzIHNlcmlhbGl6ZSxPbyBhcyBzdWJzY3JpYmVUb0Jyb3dzZXJOZXR3b3JrQ2hhbmdlLGNoIGFzIHN1YnNjcmliZVRvTmV0d29ya0NoYW5nZSxQbyBhcyBzdWJzY3JpYmVUb1JlYWN0TmF0aXZlTmV0d29ya0NoYW5nZSxNdSBhcyB2YWxpZGF0ZURlY29kaW5nLGVvIGFzIHZhbGlkYXRlRW5jb2Rpbmcsb3UgYXMgdmFsaWRhdGVTaWduZWRDYWNhbyxUZiBhcyB2ZXJpZnlTaWduYXR1cmV9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@walletconnect/utils/dist/index.es.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/dist/esm/core/controller/SIWEController.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/dist/esm/core/controller/SIWEController.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SIWEController: function() { return /* binding */ SIWEController; }\n/* harmony export */ });\n/* harmony import */ var valtio_vanilla_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! valtio/vanilla/utils */ \"./node_modules/valtio/esm/vanilla/utils.mjs\");\n/* harmony import */ var valtio_vanilla__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! valtio/vanilla */ \"./node_modules/valtio/esm/vanilla.mjs\");\n/* harmony import */ var _web3modal_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3modal/core */ \"./node_modules/@web3modal/core/dist/esm/index.js\");\n\n\n\nconst state = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_1__.proxy)({\n    status: 'uninitialized'\n});\nconst SIWEController = {\n    state,\n    subscribeKey(key, callback) {\n        return (0,valtio_vanilla_utils__WEBPACK_IMPORTED_MODULE_2__.subscribeKey)(state, key, callback);\n    },\n    subscribe(callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_1__.subscribe)(state, () => callback(state));\n    },\n    _getClient() {\n        if (!state._client) {\n            throw new Error('SIWEController client not set');\n        }\n        return state._client;\n    },\n    async getNonce(address) {\n        const client = this._getClient();\n        const nonce = await client.getNonce(address);\n        this.setNonce(nonce);\n        return nonce;\n    },\n    async getSession() {\n        try {\n            const client = this._getClient();\n            const session = await client.getSession();\n            if (session) {\n                this.setSession(session);\n                this.setStatus('success');\n            }\n            return session;\n        }\n        catch {\n            return undefined;\n        }\n    },\n    createMessage(args) {\n        const client = this._getClient();\n        const message = client.createMessage(args);\n        this.setMessage(message);\n        return message;\n    },\n    async verifyMessage(args) {\n        const client = this._getClient();\n        const isValid = await client.verifyMessage(args);\n        return isValid;\n    },\n    async signIn() {\n        const client = this._getClient();\n        const session = await client.signIn();\n        return session;\n    },\n    async signOut() {\n        const client = this._getClient();\n        await client.signOut();\n        this.setStatus('ready');\n        this.setSession(undefined);\n        client.onSignOut?.();\n    },\n    onSignIn(args) {\n        const client = this._getClient();\n        client.onSignIn?.(args);\n    },\n    onSignOut() {\n        const client = this._getClient();\n        client.onSignOut?.();\n    },\n    setSIWEClient(client) {\n        state._client = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_1__.ref)(client);\n        state.status = 'ready';\n        _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.OptionsController.setIsSiweEnabled(client.options.enabled);\n    },\n    setNonce(nonce) {\n        state.nonce = nonce;\n    },\n    setStatus(status) {\n        state.status = status;\n    },\n    setMessage(message) {\n        state.message = message;\n    },\n    setSession(session) {\n        state.session = session;\n        state.status = session ? 'success' : 'ready';\n    }\n};\n//# sourceMappingURL=SIWEController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL2Rpc3QvZXNtL2NvcmUvY29udHJvbGxlci9TSVdFQ29udHJvbGxlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThEO0FBQ0E7QUFDVjtBQUNwRCxjQUFjLHFEQUFLO0FBQ25CO0FBQ0EsQ0FBQztBQUNNO0FBQ1A7QUFDQTtBQUNBLGVBQWUsa0VBQU07QUFDckIsS0FBSztBQUNMO0FBQ0EsZUFBZSx5REFBRztBQUNsQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSx3QkFBd0IsbURBQUc7QUFDM0I7QUFDQSxRQUFRLDhEQUFpQjtBQUN6QixLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3Npd2UvZGlzdC9lc20vY29yZS9jb250cm9sbGVyL1NJV0VDb250cm9sbGVyLmpzP2I0NzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3Vic2NyaWJlS2V5IGFzIHN1YktleSB9IGZyb20gJ3ZhbHRpby92YW5pbGxhL3V0aWxzJztcbmltcG9ydCB7IHByb3h5LCByZWYsIHN1YnNjcmliZSBhcyBzdWIgfSBmcm9tICd2YWx0aW8vdmFuaWxsYSc7XG5pbXBvcnQgeyBPcHRpb25zQ29udHJvbGxlciB9IGZyb20gJ0B3ZWIzbW9kYWwvY29yZSc7XG5jb25zdCBzdGF0ZSA9IHByb3h5KHtcbiAgICBzdGF0dXM6ICd1bmluaXRpYWxpemVkJ1xufSk7XG5leHBvcnQgY29uc3QgU0lXRUNvbnRyb2xsZXIgPSB7XG4gICAgc3RhdGUsXG4gICAgc3Vic2NyaWJlS2V5KGtleSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHN1YktleShzdGF0ZSwga2V5LCBjYWxsYmFjayk7XG4gICAgfSxcbiAgICBzdWJzY3JpYmUoY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHN1YihzdGF0ZSwgKCkgPT4gY2FsbGJhY2soc3RhdGUpKTtcbiAgICB9LFxuICAgIF9nZXRDbGllbnQoKSB7XG4gICAgICAgIGlmICghc3RhdGUuX2NsaWVudCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTSVdFQ29udHJvbGxlciBjbGllbnQgbm90IHNldCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdGF0ZS5fY2xpZW50O1xuICAgIH0sXG4gICAgYXN5bmMgZ2V0Tm9uY2UoYWRkcmVzcykge1xuICAgICAgICBjb25zdCBjbGllbnQgPSB0aGlzLl9nZXRDbGllbnQoKTtcbiAgICAgICAgY29uc3Qgbm9uY2UgPSBhd2FpdCBjbGllbnQuZ2V0Tm9uY2UoYWRkcmVzcyk7XG4gICAgICAgIHRoaXMuc2V0Tm9uY2Uobm9uY2UpO1xuICAgICAgICByZXR1cm4gbm9uY2U7XG4gICAgfSxcbiAgICBhc3luYyBnZXRTZXNzaW9uKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgY2xpZW50ID0gdGhpcy5fZ2V0Q2xpZW50KCk7XG4gICAgICAgICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgY2xpZW50LmdldFNlc3Npb24oKTtcbiAgICAgICAgICAgIGlmIChzZXNzaW9uKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTZXNzaW9uKHNlc3Npb24pO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdHVzKCdzdWNjZXNzJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc2Vzc2lvbjtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBjcmVhdGVNZXNzYWdlKGFyZ3MpIHtcbiAgICAgICAgY29uc3QgY2xpZW50ID0gdGhpcy5fZ2V0Q2xpZW50KCk7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBjbGllbnQuY3JlYXRlTWVzc2FnZShhcmdzKTtcbiAgICAgICAgdGhpcy5zZXRNZXNzYWdlKG1lc3NhZ2UpO1xuICAgICAgICByZXR1cm4gbWVzc2FnZTtcbiAgICB9LFxuICAgIGFzeW5jIHZlcmlmeU1lc3NhZ2UoYXJncykge1xuICAgICAgICBjb25zdCBjbGllbnQgPSB0aGlzLl9nZXRDbGllbnQoKTtcbiAgICAgICAgY29uc3QgaXNWYWxpZCA9IGF3YWl0IGNsaWVudC52ZXJpZnlNZXNzYWdlKGFyZ3MpO1xuICAgICAgICByZXR1cm4gaXNWYWxpZDtcbiAgICB9LFxuICAgIGFzeW5jIHNpZ25JbigpIHtcbiAgICAgICAgY29uc3QgY2xpZW50ID0gdGhpcy5fZ2V0Q2xpZW50KCk7XG4gICAgICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBjbGllbnQuc2lnbkluKCk7XG4gICAgICAgIHJldHVybiBzZXNzaW9uO1xuICAgIH0sXG4gICAgYXN5bmMgc2lnbk91dCgpIHtcbiAgICAgICAgY29uc3QgY2xpZW50ID0gdGhpcy5fZ2V0Q2xpZW50KCk7XG4gICAgICAgIGF3YWl0IGNsaWVudC5zaWduT3V0KCk7XG4gICAgICAgIHRoaXMuc2V0U3RhdHVzKCdyZWFkeScpO1xuICAgICAgICB0aGlzLnNldFNlc3Npb24odW5kZWZpbmVkKTtcbiAgICAgICAgY2xpZW50Lm9uU2lnbk91dD8uKCk7XG4gICAgfSxcbiAgICBvblNpZ25JbihhcmdzKSB7XG4gICAgICAgIGNvbnN0IGNsaWVudCA9IHRoaXMuX2dldENsaWVudCgpO1xuICAgICAgICBjbGllbnQub25TaWduSW4/LihhcmdzKTtcbiAgICB9LFxuICAgIG9uU2lnbk91dCgpIHtcbiAgICAgICAgY29uc3QgY2xpZW50ID0gdGhpcy5fZ2V0Q2xpZW50KCk7XG4gICAgICAgIGNsaWVudC5vblNpZ25PdXQ/LigpO1xuICAgIH0sXG4gICAgc2V0U0lXRUNsaWVudChjbGllbnQpIHtcbiAgICAgICAgc3RhdGUuX2NsaWVudCA9IHJlZihjbGllbnQpO1xuICAgICAgICBzdGF0ZS5zdGF0dXMgPSAncmVhZHknO1xuICAgICAgICBPcHRpb25zQ29udHJvbGxlci5zZXRJc1Npd2VFbmFibGVkKGNsaWVudC5vcHRpb25zLmVuYWJsZWQpO1xuICAgIH0sXG4gICAgc2V0Tm9uY2Uobm9uY2UpIHtcbiAgICAgICAgc3RhdGUubm9uY2UgPSBub25jZTtcbiAgICB9LFxuICAgIHNldFN0YXR1cyhzdGF0dXMpIHtcbiAgICAgICAgc3RhdGUuc3RhdHVzID0gc3RhdHVzO1xuICAgIH0sXG4gICAgc2V0TWVzc2FnZShtZXNzYWdlKSB7XG4gICAgICAgIHN0YXRlLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIH0sXG4gICAgc2V0U2Vzc2lvbihzZXNzaW9uKSB7XG4gICAgICAgIHN0YXRlLnNlc3Npb24gPSBzZXNzaW9uO1xuICAgICAgICBzdGF0ZS5zdGF0dXMgPSBzZXNzaW9uID8gJ3N1Y2Nlc3MnIDogJ3JlYWR5JztcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U0lXRUNvbnRyb2xsZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/dist/esm/core/controller/SIWEController.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/dist/esm/core/helpers/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/dist/esm/core/helpers/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAddressFromMessage: function() { return /* binding */ getAddressFromMessage; },\n/* harmony export */   getChainIdFromMessage: function() { return /* binding */ getChainIdFromMessage; },\n/* harmony export */   verifySignature: function() { return /* binding */ verifySignature; }\n/* harmony export */ });\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/utils */ \"./node_modules/@web3modal/siwe/node_modules/@walletconnect/utils/dist/index.es.js\");\n\nconst ETH_ADDRESS_PATTERN = /0x[a-fA-F0-9]{40}/u;\nconst ETH_CHAIN_ID_IN_SIWE_PATTERN = /Chain ID: (?<temp1>\\d+)/u;\nfunction getAddressFromMessage(message) {\n    return message.match(ETH_ADDRESS_PATTERN)?.[0] || '';\n}\nfunction getChainIdFromMessage(message) {\n    return `eip155:${message.match(ETH_CHAIN_ID_IN_SIWE_PATTERN)?.[1] || 1}`;\n}\nasync function verifySignature({ address, message, signature, chainId, projectId }) {\n    let isValid = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_0__.isValidEip191Signature)(address, message, signature);\n    if (!isValid) {\n        isValid = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_0__.isValidEip1271Signature)(address, message, signature, chainId, projectId);\n    }\n    return isValid;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL2Rpc3QvZXNtL2NvcmUvaGVscGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVGO0FBQ3ZGLDJDQUEyQyxHQUFHO0FBQzlDO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUCxxQkFBcUIsc0RBQXNEO0FBQzNFO0FBQ08saUNBQWlDLGlEQUFpRDtBQUN6RixrQkFBa0IsNEVBQXNCO0FBQ3hDO0FBQ0Esd0JBQXdCLDZFQUF1QjtBQUMvQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL2Rpc3QvZXNtL2NvcmUvaGVscGVycy9pbmRleC5qcz8xMmY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzVmFsaWRFaXAxOTFTaWduYXR1cmUsIGlzVmFsaWRFaXAxMjcxU2lnbmF0dXJlIH0gZnJvbSAnQHdhbGxldGNvbm5lY3QvdXRpbHMnO1xuY29uc3QgRVRIX0FERFJFU1NfUEFUVEVSTiA9IC8weFthLWZBLUYwLTldezQwfS91O1xuY29uc3QgRVRIX0NIQUlOX0lEX0lOX1NJV0VfUEFUVEVSTiA9IC9DaGFpbiBJRDogKD88dGVtcDE+XFxkKykvdTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRBZGRyZXNzRnJvbU1lc3NhZ2UobWVzc2FnZSkge1xuICAgIHJldHVybiBtZXNzYWdlLm1hdGNoKEVUSF9BRERSRVNTX1BBVFRFUk4pPy5bMF0gfHwgJyc7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2hhaW5JZEZyb21NZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICByZXR1cm4gYGVpcDE1NToke21lc3NhZ2UubWF0Y2goRVRIX0NIQUlOX0lEX0lOX1NJV0VfUEFUVEVSTik/LlsxXSB8fCAxfWA7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5U2lnbmF0dXJlKHsgYWRkcmVzcywgbWVzc2FnZSwgc2lnbmF0dXJlLCBjaGFpbklkLCBwcm9qZWN0SWQgfSkge1xuICAgIGxldCBpc1ZhbGlkID0gaXNWYWxpZEVpcDE5MVNpZ25hdHVyZShhZGRyZXNzLCBtZXNzYWdlLCBzaWduYXR1cmUpO1xuICAgIGlmICghaXNWYWxpZCkge1xuICAgICAgICBpc1ZhbGlkID0gYXdhaXQgaXNWYWxpZEVpcDEyNzFTaWduYXR1cmUoYWRkcmVzcywgbWVzc2FnZSwgc2lnbmF0dXJlLCBjaGFpbklkLCBwcm9qZWN0SWQpO1xuICAgIH1cbiAgICByZXR1cm4gaXNWYWxpZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/dist/esm/core/helpers/index.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/dist/esm/core/utils/ConstantsUtil.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/dist/esm/core/utils/ConstantsUtil.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConstantsUtil: function() { return /* binding */ ConstantsUtil; }\n/* harmony export */ });\nconst ConstantsUtil = {\n    FIVE_MINUTES_IN_MS: 300000\n};\n//# sourceMappingURL=ConstantsUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL2Rpc3QvZXNtL2NvcmUvdXRpbHMvQ29uc3RhbnRzVXRpbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvc2l3ZS9kaXN0L2VzbS9jb3JlL3V0aWxzL0NvbnN0YW50c1V0aWwuanM/OWJhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgQ29uc3RhbnRzVXRpbCA9IHtcbiAgICBGSVZFX01JTlVURVNfSU5fTVM6IDMwMDAwMFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnN0YW50c1V0aWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/dist/esm/core/utils/ConstantsUtil.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/dist/esm/exports/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/dist/esm/exports/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SIWEController: function() { return /* reexport safe */ _core_controller_SIWEController_js__WEBPACK_IMPORTED_MODULE_3__.SIWEController; },\n/* harmony export */   createSIWEConfig: function() { return /* binding */ createSIWEConfig; },\n/* harmony export */   formatMessage: function() { return /* reexport safe */ _walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.formatMessage; },\n/* harmony export */   getAddressFromMessage: function() { return /* reexport safe */ _core_helpers_index_js__WEBPACK_IMPORTED_MODULE_1__.getAddressFromMessage; },\n/* harmony export */   getChainIdFromMessage: function() { return /* reexport safe */ _core_helpers_index_js__WEBPACK_IMPORTED_MODULE_1__.getChainIdFromMessage; },\n/* harmony export */   getDidAddress: function() { return /* reexport safe */ _walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getDidAddress; },\n/* harmony export */   getDidChainId: function() { return /* reexport safe */ _walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getDidChainId; },\n/* harmony export */   verifySignature: function() { return /* reexport safe */ _core_helpers_index_js__WEBPACK_IMPORTED_MODULE_1__.verifySignature; }\n/* harmony export */ });\n/* harmony import */ var _src_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/client.js */ \"./node_modules/@web3modal/siwe/dist/esm/src/client.js\");\n/* harmony import */ var _core_helpers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/helpers/index.js */ \"./node_modules/@web3modal/siwe/dist/esm/core/helpers/index.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/utils */ \"./node_modules/@web3modal/siwe/node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _core_controller_SIWEController_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/controller/SIWEController.js */ \"./node_modules/@web3modal/siwe/dist/esm/core/controller/SIWEController.js\");\n/* harmony import */ var _scaffold_partials_w3m_connecting_siwe_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scaffold/partials/w3m-connecting-siwe/index.js */ \"./node_modules/@web3modal/siwe/dist/esm/scaffold/partials/w3m-connecting-siwe/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _scaffold_partials_w3m_connecting_siwe_index_js__WEBPACK_IMPORTED_MODULE_4__) if([\"default\",\"getAddressFromMessage\",\"getChainIdFromMessage\",\"verifySignature\",\"formatMessage\",\"getDidChainId\",\"getDidAddress\",\"SIWEController\",\"createSIWEConfig\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _scaffold_partials_w3m_connecting_siwe_index_js__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _scaffold_views_w3m_connecting_siwe_view_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../scaffold/views/w3m-connecting-siwe-view/index.js */ \"./node_modules/@web3modal/siwe/dist/esm/scaffold/views/w3m-connecting-siwe-view/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _scaffold_views_w3m_connecting_siwe_view_index_js__WEBPACK_IMPORTED_MODULE_5__) if([\"default\",\"getAddressFromMessage\",\"getChainIdFromMessage\",\"verifySignature\",\"formatMessage\",\"getDidChainId\",\"getDidAddress\",\"SIWEController\",\"createSIWEConfig\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _scaffold_views_w3m_connecting_siwe_view_index_js__WEBPACK_IMPORTED_MODULE_5__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\nfunction createSIWEConfig(siweConfig) {\n    return new _src_client_js__WEBPACK_IMPORTED_MODULE_0__.Web3ModalSIWEClient(siweConfig);\n}\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL2Rpc3QvZXNtL2V4cG9ydHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBdUQ7QUFDa0Q7QUFDdEI7QUFDYjtBQUMvRDtBQUNQLGVBQWUsK0RBQW1CO0FBQ2xDO0FBQ2tFO0FBQ0U7QUFDcEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvc2l3ZS9kaXN0L2VzbS9leHBvcnRzL2luZGV4LmpzPzA5YTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2ViM01vZGFsU0lXRUNsaWVudCB9IGZyb20gJy4uL3NyYy9jbGllbnQuanMnO1xuZXhwb3J0IHsgZ2V0QWRkcmVzc0Zyb21NZXNzYWdlLCBnZXRDaGFpbklkRnJvbU1lc3NhZ2UsIHZlcmlmeVNpZ25hdHVyZSB9IGZyb20gJy4uL2NvcmUvaGVscGVycy9pbmRleC5qcyc7XG5leHBvcnQgeyBmb3JtYXRNZXNzYWdlLCBnZXREaWRDaGFpbklkLCBnZXREaWRBZGRyZXNzIH0gZnJvbSAnQHdhbGxldGNvbm5lY3QvdXRpbHMnO1xuZXhwb3J0IHsgU0lXRUNvbnRyb2xsZXIgfSBmcm9tICcuLi9jb3JlL2NvbnRyb2xsZXIvU0lXRUNvbnRyb2xsZXIuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNJV0VDb25maWcoc2l3ZUNvbmZpZykge1xuICAgIHJldHVybiBuZXcgV2ViM01vZGFsU0lXRUNsaWVudChzaXdlQ29uZmlnKTtcbn1cbmV4cG9ydCAqIGZyb20gJy4uL3NjYWZmb2xkL3BhcnRpYWxzL3czbS1jb25uZWN0aW5nLXNpd2UvaW5kZXguanMnO1xuZXhwb3J0ICogZnJvbSAnLi4vc2NhZmZvbGQvdmlld3MvdzNtLWNvbm5lY3Rpbmctc2l3ZS12aWV3L2luZGV4LmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/dist/esm/exports/index.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/dist/esm/scaffold/partials/w3m-connecting-siwe/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/dist/esm/scaffold/partials/w3m-connecting-siwe/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   W3mConnectingSiwe: function() { return /* binding */ W3mConnectingSiwe; }\n/* harmony export */ });\n/* harmony import */ var _web3modal_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3modal/ui */ \"./node_modules/@web3modal/ui/dist/esm/index.js\");\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit */ \"./node_modules/@web3modal/siwe/node_modules/lit/index.js\");\n/* harmony import */ var _styles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./styles.js */ \"./node_modules/@web3modal/siwe/dist/esm/scaffold/partials/w3m-connecting-siwe/styles.js\");\n/* harmony import */ var _web3modal_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @web3modal/core */ \"./node_modules/@web3modal/core/dist/esm/index.js\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\nlet W3mConnectingSiwe = class W3mConnectingSiwe extends lit__WEBPACK_IMPORTED_MODULE_1__.LitElement {\n    constructor() {\n        super(...arguments);\n        this.dappImageUrl = _web3modal_core__WEBPACK_IMPORTED_MODULE_3__.OptionsController.state.metadata?.icons;\n        this.walletImageUrl = _web3modal_core__WEBPACK_IMPORTED_MODULE_3__.StorageUtil.getConnectedWalletImageUrl();\n    }\n    firstUpdated() {\n        const visuals = this.shadowRoot?.querySelectorAll('wui-visual-thumbnail');\n        if (visuals?.[0]) {\n            this.createAnimation(visuals[0], 'translate(18px)');\n        }\n        if (visuals?.[1]) {\n            this.createAnimation(visuals[1], 'translate(-18px)');\n        }\n    }\n    render() {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_1__.html) `\n      <wui-visual-thumbnail\n        ?borderRadiusFull=${true}\n        .imageSrc=${this.dappImageUrl?.[0]}\n      ></wui-visual-thumbnail>\n      <wui-visual-thumbnail .imageSrc=${this.walletImageUrl}></wui-visual-thumbnail>\n    `;\n    }\n    createAnimation(element, translation) {\n        element.animate([{ transform: 'translateX(0px)' }, { transform: translation }], {\n            duration: 1600,\n            easing: 'cubic-bezier(0.56, 0, 0.48, 1)',\n            direction: 'alternate',\n            iterations: Infinity\n        });\n    }\n};\nW3mConnectingSiwe.styles = _styles_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\nW3mConnectingSiwe = __decorate([\n    (0,_web3modal_ui__WEBPACK_IMPORTED_MODULE_0__.customElement)('w3m-connecting-siwe')\n], W3mConnectingSiwe);\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL2Rpc3QvZXNtL3NjYWZmb2xkL3BhcnRpYWxzL3czbS1jb25uZWN0aW5nLXNpd2UvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxrQkFBa0IsU0FBSSxJQUFJLFNBQUk7QUFDOUI7QUFDQTtBQUNBLDZDQUE2QyxRQUFRO0FBQ3JEO0FBQ0E7QUFDOEM7QUFDUDtBQUNOO0FBQ2dDO0FBQ2pFLHdEQUF3RCwyQ0FBVTtBQUNsRTtBQUNBO0FBQ0EsNEJBQTRCLDhEQUFpQjtBQUM3Qyw4QkFBOEIsd0RBQVc7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUseUNBQUk7QUFDbkI7QUFDQSw0QkFBNEI7QUFDNUIsb0JBQW9CO0FBQ3BCO0FBQ0Esd0NBQXdDLG9CQUFvQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsOEJBQThCLElBQUksd0JBQXdCO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwyQkFBMkIsa0RBQU07QUFDakM7QUFDQSxJQUFJLDREQUFhO0FBQ2pCO0FBQzZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3Npd2UvZGlzdC9lc20vc2NhZmZvbGQvcGFydGlhbHMvdzNtLWNvbm5lY3Rpbmctc2l3ZS9pbmRleC5qcz8zZWI4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbmltcG9ydCB7IGN1c3RvbUVsZW1lbnQgfSBmcm9tICdAd2ViM21vZGFsL3VpJztcbmltcG9ydCB7IExpdEVsZW1lbnQsIGh0bWwgfSBmcm9tICdsaXQnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcy5qcyc7XG5pbXBvcnQgeyBPcHRpb25zQ29udHJvbGxlciwgU3RvcmFnZVV0aWwgfSBmcm9tICdAd2ViM21vZGFsL2NvcmUnO1xubGV0IFczbUNvbm5lY3RpbmdTaXdlID0gY2xhc3MgVzNtQ29ubmVjdGluZ1Npd2UgZXh0ZW5kcyBMaXRFbGVtZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5kYXBwSW1hZ2VVcmwgPSBPcHRpb25zQ29udHJvbGxlci5zdGF0ZS5tZXRhZGF0YT8uaWNvbnM7XG4gICAgICAgIHRoaXMud2FsbGV0SW1hZ2VVcmwgPSBTdG9yYWdlVXRpbC5nZXRDb25uZWN0ZWRXYWxsZXRJbWFnZVVybCgpO1xuICAgIH1cbiAgICBmaXJzdFVwZGF0ZWQoKSB7XG4gICAgICAgIGNvbnN0IHZpc3VhbHMgPSB0aGlzLnNoYWRvd1Jvb3Q/LnF1ZXJ5U2VsZWN0b3JBbGwoJ3d1aS12aXN1YWwtdGh1bWJuYWlsJyk7XG4gICAgICAgIGlmICh2aXN1YWxzPy5bMF0pIHtcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlQW5pbWF0aW9uKHZpc3VhbHNbMF0sICd0cmFuc2xhdGUoMThweCknKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmlzdWFscz8uWzFdKSB7XG4gICAgICAgICAgICB0aGlzLmNyZWF0ZUFuaW1hdGlvbih2aXN1YWxzWzFdLCAndHJhbnNsYXRlKC0xOHB4KScpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIGh0bWwgYFxuICAgICAgPHd1aS12aXN1YWwtdGh1bWJuYWlsXG4gICAgICAgID9ib3JkZXJSYWRpdXNGdWxsPSR7dHJ1ZX1cbiAgICAgICAgLmltYWdlU3JjPSR7dGhpcy5kYXBwSW1hZ2VVcmw/LlswXX1cbiAgICAgID48L3d1aS12aXN1YWwtdGh1bWJuYWlsPlxuICAgICAgPHd1aS12aXN1YWwtdGh1bWJuYWlsIC5pbWFnZVNyYz0ke3RoaXMud2FsbGV0SW1hZ2VVcmx9Pjwvd3VpLXZpc3VhbC10aHVtYm5haWw+XG4gICAgYDtcbiAgICB9XG4gICAgY3JlYXRlQW5pbWF0aW9uKGVsZW1lbnQsIHRyYW5zbGF0aW9uKSB7XG4gICAgICAgIGVsZW1lbnQuYW5pbWF0ZShbeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDBweCknIH0sIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGlvbiB9XSwge1xuICAgICAgICAgICAgZHVyYXRpb246IDE2MDAsXG4gICAgICAgICAgICBlYXNpbmc6ICdjdWJpYy1iZXppZXIoMC41NiwgMCwgMC40OCwgMSknLFxuICAgICAgICAgICAgZGlyZWN0aW9uOiAnYWx0ZXJuYXRlJyxcbiAgICAgICAgICAgIGl0ZXJhdGlvbnM6IEluZmluaXR5XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5XM21Db25uZWN0aW5nU2l3ZS5zdHlsZXMgPSBzdHlsZXM7XG5XM21Db25uZWN0aW5nU2l3ZSA9IF9fZGVjb3JhdGUoW1xuICAgIGN1c3RvbUVsZW1lbnQoJ3czbS1jb25uZWN0aW5nLXNpd2UnKVxuXSwgVzNtQ29ubmVjdGluZ1Npd2UpO1xuZXhwb3J0IHsgVzNtQ29ubmVjdGluZ1Npd2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/dist/esm/scaffold/partials/w3m-connecting-siwe/index.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/dist/esm/scaffold/partials/w3m-connecting-siwe/styles.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/dist/esm/scaffold/partials/w3m-connecting-siwe/styles.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/@web3modal/siwe/node_modules/lit/index.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ((0,lit__WEBPACK_IMPORTED_MODULE_0__.css) `\n  :host {\n    display: flex;\n    justify-content: center;\n    gap: var(--wui-spacing-2xl);\n  }\n\n  wui-visual-thumbnail:nth-child(1) {\n    z-index: 1;\n  }\n`);\n//# sourceMappingURL=styles.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL2Rpc3QvZXNtL3NjYWZmb2xkL3BhcnRpYWxzL3czbS1jb25uZWN0aW5nLXNpd2Uvc3R5bGVzLmpzIiwibWFwcGluZ3MiOiI7O0FBQTBCO0FBQzFCLCtEQUFlLHdDQUFHO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvc2l3ZS9kaXN0L2VzbS9zY2FmZm9sZC9wYXJ0aWFscy93M20tY29ubmVjdGluZy1zaXdlL3N0eWxlcy5qcz81ODFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ2xpdCc7XG5leHBvcnQgZGVmYXVsdCBjc3MgYFxuICA6aG9zdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBnYXA6IHZhcigtLXd1aS1zcGFjaW5nLTJ4bCk7XG4gIH1cblxuICB3dWktdmlzdWFsLXRodW1ibmFpbDpudGgtY2hpbGQoMSkge1xuICAgIHotaW5kZXg6IDE7XG4gIH1cbmA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHlsZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/dist/esm/scaffold/partials/w3m-connecting-siwe/styles.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/dist/esm/scaffold/views/w3m-connecting-siwe-view/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/dist/esm/scaffold/views/w3m-connecting-siwe-view/index.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   W3mConnectingSiweView: function() { return /* binding */ W3mConnectingSiweView; }\n/* harmony export */ });\n/* harmony import */ var _web3modal_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3modal/core */ \"./node_modules/@web3modal/core/dist/esm/index.js\");\n/* harmony import */ var _web3modal_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3modal/ui */ \"./node_modules/@web3modal/ui/dist/esm/index.js\");\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit */ \"./node_modules/@web3modal/siwe/node_modules/lit/index.js\");\n/* harmony import */ var lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit/decorators.js */ \"./node_modules/@web3modal/siwe/node_modules/lit/decorators.js\");\n/* harmony import */ var _core_controller_SIWEController_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/controller/SIWEController.js */ \"./node_modules/@web3modal/siwe/dist/esm/core/controller/SIWEController.js\");\n/* harmony import */ var _web3modal_wallet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @web3modal/wallet */ \"./node_modules/@web3modal/wallet/dist/esm/index.js\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\nlet W3mConnectingSiweView = class W3mConnectingSiweView extends lit__WEBPACK_IMPORTED_MODULE_2__.LitElement {\n    constructor() {\n        super(...arguments);\n        this.dappName = _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.OptionsController.state.metadata?.name;\n        this.isSigning = false;\n    }\n    render() {\n        this.onRender();\n        return (0,lit__WEBPACK_IMPORTED_MODULE_2__.html) `\n      <wui-flex justifyContent=\"center\" .padding=${['2xl', '0', 'xxl', '0']}>\n        <w3m-connecting-siwe></w3m-connecting-siwe>\n      </wui-flex>\n      <wui-flex\n        .padding=${['0', '4xl', 'l', '4xl']}\n        gap=\"s\"\n        justifyContent=\"space-between\"\n      >\n        <wui-text variant=\"paragraph-500\" align=\"center\" color=\"fg-100\"\n          >${this.dappName ?? 'Dapp'} needs to connect to your wallet</wui-text\n        >\n      </wui-flex>\n      <wui-flex\n        .padding=${['0', '3xl', 'l', '3xl']}\n        gap=\"s\"\n        justifyContent=\"space-between\"\n      >\n        <wui-text variant=\"small-400\" align=\"center\" color=\"fg-200\"\n          >Sign this message to prove you own this wallet and proceed. Canceling will disconnect\n          you.</wui-text\n        >\n      </wui-flex>\n      <wui-flex .padding=${['l', 'xl', 'xl', 'xl']} gap=\"s\" justifyContent=\"space-between\">\n        <wui-button\n          size=\"lg\"\n          borderRadius=\"xs\"\n          fullWidth\n          variant=\"neutral\"\n          @click=${this.onCancel.bind(this)}\n          data-testid=\"w3m-connecting-siwe-cancel\"\n        >\n          Cancel\n        </wui-button>\n        <wui-button\n          size=\"lg\"\n          borderRadius=\"xs\"\n          fullWidth\n          variant=\"main\"\n          @click=${this.onSign.bind(this)}\n          ?loading=${this.isSigning}\n          data-testid=\"w3m-connecting-siwe-sign\"\n        >\n          ${this.isSigning ? 'Signing...' : 'Sign'}\n        </wui-button>\n      </wui-flex>\n    `;\n    }\n    onRender() {\n        if (_core_controller_SIWEController_js__WEBPACK_IMPORTED_MODULE_4__.SIWEController.state.session) {\n            _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalController.close();\n        }\n    }\n    async onSign() {\n        this.isSigning = true;\n        _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.EventsController.sendEvent({\n            event: 'CLICK_SIGN_SIWE_MESSAGE',\n            type: 'track'\n        });\n        try {\n            _core_controller_SIWEController_js__WEBPACK_IMPORTED_MODULE_4__.SIWEController.setStatus('loading');\n            const session = await _core_controller_SIWEController_js__WEBPACK_IMPORTED_MODULE_4__.SIWEController.signIn();\n            _core_controller_SIWEController_js__WEBPACK_IMPORTED_MODULE_4__.SIWEController.setStatus('success');\n            _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.EventsController.sendEvent({\n                event: 'SIWE_AUTH_SUCCESS',\n                type: 'track'\n            });\n            return session;\n        }\n        catch (error) {\n            const preferredAccountType = _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.AccountController.state.preferredAccountType;\n            if (preferredAccountType === _web3modal_wallet__WEBPACK_IMPORTED_MODULE_5__.W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT) {\n                _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.SnackController.showError('This application might not support Smart Accounts');\n            }\n            else {\n                _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.SnackController.showError('Signature declined');\n            }\n            _core_controller_SIWEController_js__WEBPACK_IMPORTED_MODULE_4__.SIWEController.setStatus('error');\n            return _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.EventsController.sendEvent({\n                event: 'SIWE_AUTH_ERROR',\n                type: 'track'\n            });\n        }\n        finally {\n            this.isSigning = false;\n        }\n    }\n    async onCancel() {\n        const { isConnected } = _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.AccountController.state;\n        if (isConnected) {\n            await _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.ConnectionController.disconnect();\n            _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalController.close();\n        }\n        else {\n            _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.RouterController.push('Connect');\n        }\n        _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.EventsController.sendEvent({\n            event: 'CLICK_CANCEL_SIWE',\n            type: 'track'\n        });\n    }\n};\n__decorate([\n    (0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_3__.state)()\n], W3mConnectingSiweView.prototype, \"isSigning\", void 0);\nW3mConnectingSiweView = __decorate([\n    (0,_web3modal_ui__WEBPACK_IMPORTED_MODULE_1__.customElement)('w3m-connecting-siwe-view')\n], W3mConnectingSiweView);\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/dist/esm/scaffold/views/w3m-connecting-siwe-view/index.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/dist/esm/src/client.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/dist/esm/src/client.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Web3ModalSIWEClient: function() { return /* binding */ Web3ModalSIWEClient; }\n/* harmony export */ });\n/* harmony import */ var _web3modal_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3modal/core */ \"./node_modules/@web3modal/core/dist/esm/index.js\");\n/* harmony import */ var _web3modal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3modal/common */ \"./node_modules/@web3modal/common/dist/esm/index.js\");\n/* harmony import */ var _core_utils_ConstantsUtil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/utils/ConstantsUtil.js */ \"./node_modules/@web3modal/siwe/dist/esm/core/utils/ConstantsUtil.js\");\n\n\n\nclass Web3ModalSIWEClient {\n    constructor(siweConfig) {\n        const { enabled = true, nonceRefetchIntervalMs = _core_utils_ConstantsUtil_js__WEBPACK_IMPORTED_MODULE_2__.ConstantsUtil.FIVE_MINUTES_IN_MS, sessionRefetchIntervalMs = _core_utils_ConstantsUtil_js__WEBPACK_IMPORTED_MODULE_2__.ConstantsUtil.FIVE_MINUTES_IN_MS, signOutOnAccountChange = true, signOutOnDisconnect = true, signOutOnNetworkChange = true, ...siweConfigMethods } = siweConfig;\n        this.options = {\n            enabled,\n            nonceRefetchIntervalMs,\n            sessionRefetchIntervalMs,\n            signOutOnDisconnect,\n            signOutOnAccountChange,\n            signOutOnNetworkChange\n        };\n        this.methods = siweConfigMethods;\n    }\n    async getNonce(address) {\n        const nonce = await this.methods.getNonce(address);\n        if (!nonce) {\n            throw new Error('siweControllerClient:getNonce - nonce is undefined');\n        }\n        return nonce;\n    }\n    async getMessageParams() {\n        const params = await this.methods.getMessageParams();\n        return params || {};\n    }\n    createMessage(args) {\n        const message = this.methods.createMessage(args);\n        if (!message) {\n            throw new Error('siweControllerClient:createMessage - message is undefined');\n        }\n        return message;\n    }\n    async verifyMessage(args) {\n        const isValid = await this.methods.verifyMessage(args);\n        return isValid;\n    }\n    async getSession() {\n        const session = await this.methods.getSession();\n        if (!session) {\n            throw new Error('siweControllerClient:getSession - session is undefined');\n        }\n        return session;\n    }\n    async signIn() {\n        const { address } = _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.AccountController.state;\n        const nonce = await this.methods.getNonce(address);\n        if (!address) {\n            throw new Error('An address is required to create a SIWE message.');\n        }\n        const chainId = _web3modal_common__WEBPACK_IMPORTED_MODULE_1__.NetworkUtil.caipNetworkIdToNumber(_web3modal_core__WEBPACK_IMPORTED_MODULE_0__.NetworkController.state.caipNetwork?.id);\n        if (!chainId) {\n            throw new Error('A chainId is required to create a SIWE message.');\n        }\n        const messageParams = await this.getMessageParams();\n        const message = this.methods.createMessage({\n            address: `eip155:${chainId}:${address}`,\n            chainId,\n            nonce,\n            version: '1',\n            iat: messageParams.iat || new Date().toISOString(),\n            ...messageParams\n        });\n        const type = _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.StorageUtil.getConnectedConnector();\n        if (type === 'AUTH') {\n            _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.RouterController.pushTransactionStack({\n                view: null,\n                goBack: false,\n                replace: true,\n                onCancel() {\n                    _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.RouterController.replace('ConnectingSiwe');\n                }\n            });\n        }\n        const signature = await _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.ConnectionController.signMessage(message);\n        const isValid = await this.methods.verifyMessage({ message, signature });\n        if (!isValid) {\n            throw new Error('Error verifying SIWE signature');\n        }\n        const session = await this.methods.getSession();\n        if (!session) {\n            throw new Error('Error verifying SIWE signature');\n        }\n        if (this.methods.onSignIn) {\n            this.methods.onSignIn(session);\n        }\n        _web3modal_core__WEBPACK_IMPORTED_MODULE_0__.RouterUtil.navigateAfterNetworkSwitch();\n        return session;\n    }\n    async signOut() {\n        this.methods.onSignOut?.();\n        return this.methods.signOut();\n    }\n}\n//# sourceMappingURL=client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL2Rpc3QvZXNtL3NyYy9jbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3STtBQUN4RjtBQUNlO0FBQ3hEO0FBQ1A7QUFDQSxnQkFBZ0IseUNBQXlDLHVFQUFhLGdEQUFnRCx1RUFBYSxzSUFBc0k7QUFDelE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsVUFBVSxFQUFFLDhEQUFpQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwREFBVyx1QkFBdUIsOERBQWlCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsUUFBUSxHQUFHLFFBQVE7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxxQkFBcUIsd0RBQVc7QUFDaEM7QUFDQSxZQUFZLDZEQUFnQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw2REFBZ0I7QUFDcEM7QUFDQSxhQUFhO0FBQ2I7QUFDQSxnQ0FBZ0MsaUVBQW9CO0FBQ3BELDJEQUEyRCxvQkFBb0I7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVEQUFVO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvc2l3ZS9kaXN0L2VzbS9zcmMvY2xpZW50LmpzP2U1OTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWNjb3VudENvbnRyb2xsZXIsIE5ldHdvcmtDb250cm9sbGVyLCBDb25uZWN0aW9uQ29udHJvbGxlciwgUm91dGVyVXRpbCwgUm91dGVyQ29udHJvbGxlciwgU3RvcmFnZVV0aWwgfSBmcm9tICdAd2ViM21vZGFsL2NvcmUnO1xuaW1wb3J0IHsgTmV0d29ya1V0aWwgfSBmcm9tICdAd2ViM21vZGFsL2NvbW1vbic7XG5pbXBvcnQgeyBDb25zdGFudHNVdGlsIH0gZnJvbSAnLi4vY29yZS91dGlscy9Db25zdGFudHNVdGlsLmpzJztcbmV4cG9ydCBjbGFzcyBXZWIzTW9kYWxTSVdFQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3RvcihzaXdlQ29uZmlnKSB7XG4gICAgICAgIGNvbnN0IHsgZW5hYmxlZCA9IHRydWUsIG5vbmNlUmVmZXRjaEludGVydmFsTXMgPSBDb25zdGFudHNVdGlsLkZJVkVfTUlOVVRFU19JTl9NUywgc2Vzc2lvblJlZmV0Y2hJbnRlcnZhbE1zID0gQ29uc3RhbnRzVXRpbC5GSVZFX01JTlVURVNfSU5fTVMsIHNpZ25PdXRPbkFjY291bnRDaGFuZ2UgPSB0cnVlLCBzaWduT3V0T25EaXNjb25uZWN0ID0gdHJ1ZSwgc2lnbk91dE9uTmV0d29ya0NoYW5nZSA9IHRydWUsIC4uLnNpd2VDb25maWdNZXRob2RzIH0gPSBzaXdlQ29uZmlnO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSB7XG4gICAgICAgICAgICBlbmFibGVkLFxuICAgICAgICAgICAgbm9uY2VSZWZldGNoSW50ZXJ2YWxNcyxcbiAgICAgICAgICAgIHNlc3Npb25SZWZldGNoSW50ZXJ2YWxNcyxcbiAgICAgICAgICAgIHNpZ25PdXRPbkRpc2Nvbm5lY3QsXG4gICAgICAgICAgICBzaWduT3V0T25BY2NvdW50Q2hhbmdlLFxuICAgICAgICAgICAgc2lnbk91dE9uTmV0d29ya0NoYW5nZVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLm1ldGhvZHMgPSBzaXdlQ29uZmlnTWV0aG9kcztcbiAgICB9XG4gICAgYXN5bmMgZ2V0Tm9uY2UoYWRkcmVzcykge1xuICAgICAgICBjb25zdCBub25jZSA9IGF3YWl0IHRoaXMubWV0aG9kcy5nZXROb25jZShhZGRyZXNzKTtcbiAgICAgICAgaWYgKCFub25jZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdzaXdlQ29udHJvbGxlckNsaWVudDpnZXROb25jZSAtIG5vbmNlIGlzIHVuZGVmaW5lZCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBub25jZTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0TWVzc2FnZVBhcmFtcygpIHtcbiAgICAgICAgY29uc3QgcGFyYW1zID0gYXdhaXQgdGhpcy5tZXRob2RzLmdldE1lc3NhZ2VQYXJhbXMoKTtcbiAgICAgICAgcmV0dXJuIHBhcmFtcyB8fCB7fTtcbiAgICB9XG4gICAgY3JlYXRlTWVzc2FnZShhcmdzKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSB0aGlzLm1ldGhvZHMuY3JlYXRlTWVzc2FnZShhcmdzKTtcbiAgICAgICAgaWYgKCFtZXNzYWdlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3Npd2VDb250cm9sbGVyQ2xpZW50OmNyZWF0ZU1lc3NhZ2UgLSBtZXNzYWdlIGlzIHVuZGVmaW5lZCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtZXNzYWdlO1xuICAgIH1cbiAgICBhc3luYyB2ZXJpZnlNZXNzYWdlKGFyZ3MpIHtcbiAgICAgICAgY29uc3QgaXNWYWxpZCA9IGF3YWl0IHRoaXMubWV0aG9kcy52ZXJpZnlNZXNzYWdlKGFyZ3MpO1xuICAgICAgICByZXR1cm4gaXNWYWxpZDtcbiAgICB9XG4gICAgYXN5bmMgZ2V0U2Vzc2lvbigpIHtcbiAgICAgICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IHRoaXMubWV0aG9kcy5nZXRTZXNzaW9uKCk7XG4gICAgICAgIGlmICghc2Vzc2lvbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdzaXdlQ29udHJvbGxlckNsaWVudDpnZXRTZXNzaW9uIC0gc2Vzc2lvbiBpcyB1bmRlZmluZWQnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2Vzc2lvbjtcbiAgICB9XG4gICAgYXN5bmMgc2lnbkluKCkge1xuICAgICAgICBjb25zdCB7IGFkZHJlc3MgfSA9IEFjY291bnRDb250cm9sbGVyLnN0YXRlO1xuICAgICAgICBjb25zdCBub25jZSA9IGF3YWl0IHRoaXMubWV0aG9kcy5nZXROb25jZShhZGRyZXNzKTtcbiAgICAgICAgaWYgKCFhZGRyZXNzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FuIGFkZHJlc3MgaXMgcmVxdWlyZWQgdG8gY3JlYXRlIGEgU0lXRSBtZXNzYWdlLicpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNoYWluSWQgPSBOZXR3b3JrVXRpbC5jYWlwTmV0d29ya0lkVG9OdW1iZXIoTmV0d29ya0NvbnRyb2xsZXIuc3RhdGUuY2FpcE5ldHdvcms/LmlkKTtcbiAgICAgICAgaWYgKCFjaGFpbklkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0EgY2hhaW5JZCBpcyByZXF1aXJlZCB0byBjcmVhdGUgYSBTSVdFIG1lc3NhZ2UuJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWVzc2FnZVBhcmFtcyA9IGF3YWl0IHRoaXMuZ2V0TWVzc2FnZVBhcmFtcygpO1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gdGhpcy5tZXRob2RzLmNyZWF0ZU1lc3NhZ2Uoe1xuICAgICAgICAgICAgYWRkcmVzczogYGVpcDE1NToke2NoYWluSWR9OiR7YWRkcmVzc31gLFxuICAgICAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgICAgIG5vbmNlLFxuICAgICAgICAgICAgdmVyc2lvbjogJzEnLFxuICAgICAgICAgICAgaWF0OiBtZXNzYWdlUGFyYW1zLmlhdCB8fCBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgICAgICAuLi5tZXNzYWdlUGFyYW1zXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCB0eXBlID0gU3RvcmFnZVV0aWwuZ2V0Q29ubmVjdGVkQ29ubmVjdG9yKCk7XG4gICAgICAgIGlmICh0eXBlID09PSAnQVVUSCcpIHtcbiAgICAgICAgICAgIFJvdXRlckNvbnRyb2xsZXIucHVzaFRyYW5zYWN0aW9uU3RhY2soe1xuICAgICAgICAgICAgICAgIHZpZXc6IG51bGwsXG4gICAgICAgICAgICAgICAgZ29CYWNrOiBmYWxzZSxcbiAgICAgICAgICAgICAgICByZXBsYWNlOiB0cnVlLFxuICAgICAgICAgICAgICAgIG9uQ2FuY2VsKCkge1xuICAgICAgICAgICAgICAgICAgICBSb3V0ZXJDb250cm9sbGVyLnJlcGxhY2UoJ0Nvbm5lY3RpbmdTaXdlJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgQ29ubmVjdGlvbkNvbnRyb2xsZXIuc2lnbk1lc3NhZ2UobWVzc2FnZSk7XG4gICAgICAgIGNvbnN0IGlzVmFsaWQgPSBhd2FpdCB0aGlzLm1ldGhvZHMudmVyaWZ5TWVzc2FnZSh7IG1lc3NhZ2UsIHNpZ25hdHVyZSB9KTtcbiAgICAgICAgaWYgKCFpc1ZhbGlkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIHZlcmlmeWluZyBTSVdFIHNpZ25hdHVyZScpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCB0aGlzLm1ldGhvZHMuZ2V0U2Vzc2lvbigpO1xuICAgICAgICBpZiAoIXNlc3Npb24pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXJyb3IgdmVyaWZ5aW5nIFNJV0Ugc2lnbmF0dXJlJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMubWV0aG9kcy5vblNpZ25Jbikge1xuICAgICAgICAgICAgdGhpcy5tZXRob2RzLm9uU2lnbkluKHNlc3Npb24pO1xuICAgICAgICB9XG4gICAgICAgIFJvdXRlclV0aWwubmF2aWdhdGVBZnRlck5ldHdvcmtTd2l0Y2goKTtcbiAgICAgICAgcmV0dXJuIHNlc3Npb247XG4gICAgfVxuICAgIGFzeW5jIHNpZ25PdXQoKSB7XG4gICAgICAgIHRoaXMubWV0aG9kcy5vblNpZ25PdXQ/LigpO1xuICAgICAgICByZXR1cm4gdGhpcy5tZXRob2RzLnNpZ25PdXQoKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/dist/esm/src/client.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/css-tag.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/css-tag.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSSResult: function() { return /* binding */ CSSResult; },\n/* harmony export */   adoptStyles: function() { return /* binding */ adoptStyles; },\n/* harmony export */   css: function() { return /* binding */ css; },\n/* harmony export */   getCompatibleStyle: function() { return /* binding */ getCompatibleStyle; },\n/* harmony export */   supportsAdoptingStyleSheets: function() { return /* binding */ supportsAdoptingStyleSheets; },\n/* harmony export */   unsafeCSS: function() { return /* binding */ unsafeCSS; }\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst NODE_MODE = false;\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nconst supportsAdoptingStyleSheets = global.ShadowRoot &&\n    (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n    'adoptedStyleSheets' in Document.prototype &&\n    'replace' in CSSStyleSheet.prototype;\nconst constructionToken = Symbol();\nconst cssTagCache = new WeakMap();\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nclass CSSResult {\n    constructor(cssText, strings, safeToken) {\n        // This property needs to remain unminified.\n        this['_$cssResult$'] = true;\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n        this._strings = strings;\n    }\n    // This is a getter so that it's lazy. In practice, this means stylesheets\n    // are not created until the first element instance is made.\n    get styleSheet() {\n        // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n        // constructable.\n        let styleSheet = this._styleSheet;\n        const strings = this._strings;\n        if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n            const cacheable = strings !== undefined && strings.length === 1;\n            if (cacheable) {\n                styleSheet = cssTagCache.get(strings);\n            }\n            if (styleSheet === undefined) {\n                (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(this.cssText);\n                if (cacheable) {\n                    cssTagCache.set(strings, styleSheet);\n                }\n            }\n        }\n        return styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\nconst textFromCSSResult = (value) => {\n    // This property needs to remain unminified.\n    if (value['_$cssResult$'] === true) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ` +\n            `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n            `to ensure page security.`);\n    }\n};\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nconst unsafeCSS = (value) => new CSSResult(typeof value === 'string' ? value : String(value), undefined, constructionToken);\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nconst css = (strings, ...values) => {\n    const cssText = strings.length === 1\n        ? strings[0]\n        : values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, strings, constructionToken);\n};\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nconst adoptStyles = (renderRoot, styles) => {\n    if (supportsAdoptingStyleSheets) {\n        renderRoot.adoptedStyleSheets = styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n    }\n    else {\n        for (const s of styles) {\n            const style = document.createElement('style');\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const nonce = global['litNonce'];\n            if (nonce !== undefined) {\n                style.setAttribute('nonce', nonce);\n            }\n            style.textContent = s.cssText;\n            renderRoot.appendChild(style);\n        }\n    }\n};\nconst cssResultFromStyleSheet = (sheet) => {\n    let cssText = '';\n    for (const rule of sheet.cssRules) {\n        cssText += rule.cssText;\n    }\n    return unsafeCSS(cssText);\n};\nconst getCompatibleStyle = supportsAdoptingStyleSheets ||\n    (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s) => s\n    : (s) => s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n//# sourceMappingURL=css-tag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/css-tag.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/base.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/base.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   desc: function() { return /* binding */ desc; }\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Wraps up a few best practices when returning a property descriptor from a\n * decorator.\n *\n * Marks the defined property as configurable, and enumerable, and handles\n * the case where we have a busted Reflect.decorate zombiefill (e.g. in Angular\n * apps).\n *\n * @internal\n */\nconst desc = (obj, name, descriptor) => {\n    // For backwards compatibility, we keep them configurable and enumerable.\n    descriptor.configurable = true;\n    descriptor.enumerable = true;\n    if (\n    // We check for Reflect.decorate each time, in case the zombiefill\n    // is applied via lazy loading some Angular code.\n    Reflect.decorate &&\n        typeof name !== 'object') {\n        // If we're called as a legacy decorator, and Reflect.decorate is present\n        // then we have no guarantees that the returned descriptor will be\n        // defined on the class, so we must apply it directly ourselves.\n        Object.defineProperty(obj, name, descriptor);\n    }\n    return descriptor;\n};\n//# sourceMappingURL=base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9AbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGV2ZWxvcG1lbnQvZGVjb3JhdG9ycy9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3Npd2Uvbm9kZV9tb2R1bGVzL0BsaXQvcmVhY3RpdmUtZWxlbWVudC9kZXZlbG9wbWVudC9kZWNvcmF0b3JzL2Jhc2UuanM/YTMwYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbi8qKlxuICogV3JhcHMgdXAgYSBmZXcgYmVzdCBwcmFjdGljZXMgd2hlbiByZXR1cm5pbmcgYSBwcm9wZXJ0eSBkZXNjcmlwdG9yIGZyb20gYVxuICogZGVjb3JhdG9yLlxuICpcbiAqIE1hcmtzIHRoZSBkZWZpbmVkIHByb3BlcnR5IGFzIGNvbmZpZ3VyYWJsZSwgYW5kIGVudW1lcmFibGUsIGFuZCBoYW5kbGVzXG4gKiB0aGUgY2FzZSB3aGVyZSB3ZSBoYXZlIGEgYnVzdGVkIFJlZmxlY3QuZGVjb3JhdGUgem9tYmllZmlsbCAoZS5nLiBpbiBBbmd1bGFyXG4gKiBhcHBzKS5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IGRlc2MgPSAob2JqLCBuYW1lLCBkZXNjcmlwdG9yKSA9PiB7XG4gICAgLy8gRm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LCB3ZSBrZWVwIHRoZW0gY29uZmlndXJhYmxlIGFuZCBlbnVtZXJhYmxlLlxuICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSB0cnVlO1xuICAgIGlmIChcbiAgICAvLyBXZSBjaGVjayBmb3IgUmVmbGVjdC5kZWNvcmF0ZSBlYWNoIHRpbWUsIGluIGNhc2UgdGhlIHpvbWJpZWZpbGxcbiAgICAvLyBpcyBhcHBsaWVkIHZpYSBsYXp5IGxvYWRpbmcgc29tZSBBbmd1bGFyIGNvZGUuXG4gICAgUmVmbGVjdC5kZWNvcmF0ZSAmJlxuICAgICAgICB0eXBlb2YgbmFtZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgLy8gSWYgd2UncmUgY2FsbGVkIGFzIGEgbGVnYWN5IGRlY29yYXRvciwgYW5kIFJlZmxlY3QuZGVjb3JhdGUgaXMgcHJlc2VudFxuICAgICAgICAvLyB0aGVuIHdlIGhhdmUgbm8gZ3VhcmFudGVlcyB0aGF0IHRoZSByZXR1cm5lZCBkZXNjcmlwdG9yIHdpbGwgYmVcbiAgICAgICAgLy8gZGVmaW5lZCBvbiB0aGUgY2xhc3MsIHNvIHdlIG11c3QgYXBwbHkgaXQgZGlyZWN0bHkgb3Vyc2VsdmVzLlxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBuYW1lLCBkZXNjcmlwdG9yKTtcbiAgICB9XG4gICAgcmV0dXJuIGRlc2NyaXB0b3I7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/base.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/custom-element.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/custom-element.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   customElement: function() { return /* binding */ customElement; }\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nconst customElement = (tagName) => (classOrTarget, context) => {\n    if (context !== undefined) {\n        context.addInitializer(() => {\n            customElements.define(tagName, classOrTarget);\n        });\n    }\n    else {\n        customElements.define(tagName, classOrTarget);\n    }\n};\n//# sourceMappingURL=custom-element.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9AbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGV2ZWxvcG1lbnQvZGVjb3JhdG9ycy9jdXN0b20tZWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvc2l3ZS9ub2RlX21vZHVsZXMvQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RldmVsb3BtZW50L2RlY29yYXRvcnMvY3VzdG9tLWVsZW1lbnQuanM/NzY2MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbi8qKlxuICogQ2xhc3MgZGVjb3JhdG9yIGZhY3RvcnkgdGhhdCBkZWZpbmVzIHRoZSBkZWNvcmF0ZWQgY2xhc3MgYXMgYSBjdXN0b20gZWxlbWVudC5cbiAqXG4gKiBgYGBqc1xuICogQGN1c3RvbUVsZW1lbnQoJ215LWVsZW1lbnQnKVxuICogY2xhc3MgTXlFbGVtZW50IGV4dGVuZHMgTGl0RWxlbWVudCB7XG4gKiAgIHJlbmRlcigpIHtcbiAqICAgICByZXR1cm4gaHRtbGBgO1xuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqIEBjYXRlZ29yeSBEZWNvcmF0b3JcbiAqIEBwYXJhbSB0YWdOYW1lIFRoZSB0YWcgbmFtZSBvZiB0aGUgY3VzdG9tIGVsZW1lbnQgdG8gZGVmaW5lLlxuICovXG5leHBvcnQgY29uc3QgY3VzdG9tRWxlbWVudCA9ICh0YWdOYW1lKSA9PiAoY2xhc3NPclRhcmdldCwgY29udGV4dCkgPT4ge1xuICAgIGlmIChjb250ZXh0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29udGV4dC5hZGRJbml0aWFsaXplcigoKSA9PiB7XG4gICAgICAgICAgICBjdXN0b21FbGVtZW50cy5kZWZpbmUodGFnTmFtZSwgY2xhc3NPclRhcmdldCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKHRhZ05hbWUsIGNsYXNzT3JUYXJnZXQpO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jdXN0b20tZWxlbWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/custom-element.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/event-options.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/event-options.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eventOptions: function() { return /* binding */ eventOptions; }\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction eventOptions(options) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return ((protoOrValue, nameOrContext) => {\n        const method = typeof protoOrValue === 'function'\n            ? protoOrValue\n            : protoOrValue[nameOrContext];\n        Object.assign(method, options);\n    });\n}\n//# sourceMappingURL=event-options.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9AbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGV2ZWxvcG1lbnQvZGVjb3JhdG9ycy9ldmVudC1vcHRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsY0FBYztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGNBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3Npd2Uvbm9kZV9tb2R1bGVzL0BsaXQvcmVhY3RpdmUtZWxlbWVudC9kZXZlbG9wbWVudC9kZWNvcmF0b3JzL2V2ZW50LW9wdGlvbnMuanM/NWFlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbi8qKlxuICogQWRkcyBldmVudCBsaXN0ZW5lciBvcHRpb25zIHRvIGEgbWV0aG9kIHVzZWQgYXMgYW4gZXZlbnQgbGlzdGVuZXIgaW4gYVxuICogbGl0LWh0bWwgdGVtcGxhdGUuXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgQW4gb2JqZWN0IHRoYXQgc3BlY2lmaWVzIGV2ZW50IGxpc3RlbmVyIG9wdGlvbnMgYXMgYWNjZXB0ZWQgYnlcbiAqIGBFdmVudFRhcmdldCNhZGRFdmVudExpc3RlbmVyYCBhbmQgYEV2ZW50VGFyZ2V0I3JlbW92ZUV2ZW50TGlzdGVuZXJgLlxuICpcbiAqIEN1cnJlbnQgYnJvd3NlcnMgc3VwcG9ydCB0aGUgYGNhcHR1cmVgLCBgcGFzc2l2ZWAsIGFuZCBgb25jZWAgb3B0aW9ucy4gU2VlOlxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0V2ZW50VGFyZ2V0L2FkZEV2ZW50TGlzdGVuZXIjUGFyYW1ldGVyc1xuICpcbiAqIGBgYHRzXG4gKiBjbGFzcyBNeUVsZW1lbnQge1xuICogICBjbGlja2VkID0gZmFsc2U7XG4gKlxuICogICByZW5kZXIoKSB7XG4gKiAgICAgcmV0dXJuIGh0bWxgXG4gKiAgICAgICA8ZGl2IEBjbGljaz0ke3RoaXMuX29uQ2xpY2t9PlxuICogICAgICAgICA8YnV0dG9uPjwvYnV0dG9uPlxuICogICAgICAgPC9kaXY+XG4gKiAgICAgYDtcbiAqICAgfVxuICpcbiAqICAgQGV2ZW50T3B0aW9ucyh7Y2FwdHVyZTogdHJ1ZX0pXG4gKiAgIF9vbkNsaWNrKGUpIHtcbiAqICAgICB0aGlzLmNsaWNrZWQgPSB0cnVlO1xuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqIEBjYXRlZ29yeSBEZWNvcmF0b3JcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV2ZW50T3B0aW9ucyhvcHRpb25zKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICByZXR1cm4gKChwcm90b09yVmFsdWUsIG5hbWVPckNvbnRleHQpID0+IHtcbiAgICAgICAgY29uc3QgbWV0aG9kID0gdHlwZW9mIHByb3RvT3JWYWx1ZSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICAgICAgPyBwcm90b09yVmFsdWVcbiAgICAgICAgICAgIDogcHJvdG9PclZhbHVlW25hbWVPckNvbnRleHRdO1xuICAgICAgICBPYmplY3QuYXNzaWduKG1ldGhvZCwgb3B0aW9ucyk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmVudC1vcHRpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/event-options.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/property.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/property.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   property: function() { return /* binding */ property; },\n/* harmony export */   standardProperty: function() { return /* binding */ standardProperty; }\n/* harmony export */ });\n/* harmony import */ var _reactive_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../reactive-element.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/reactive-element.js\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (globalThis.litIssuedWarnings ??= new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\nconst legacyProperty = (options, proto, name) => {\n    const hasOwnProperty = proto.hasOwnProperty(name);\n    proto.constructor.createProperty(name, hasOwnProperty ? { ...options, wrapped: true } : options);\n    // For accessors (which have a descriptor on the prototype) we need to\n    // return a descriptor, otherwise TypeScript overwrites the descriptor we\n    // define in createProperty() with the original descriptor. We don't do this\n    // for fields, which don't have a descriptor, because this could overwrite\n    // descriptor defined by other decorators.\n    return hasOwnProperty\n        ? Object.getOwnPropertyDescriptor(proto, name)\n        : undefined;\n};\n// This is duplicated from a similar variable in reactive-element.ts, but\n// actually makes sense to have this default defined with the decorator, so\n// that different decorators could have different defaults.\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: _reactive_element_js__WEBPACK_IMPORTED_MODULE_0__.defaultConverter,\n    reflect: false,\n    hasChanged: _reactive_element_js__WEBPACK_IMPORTED_MODULE_0__.notEqual,\n};\n/**\n * Wraps a class accessor or setter so that `requestUpdate()` is called with the\n * property name and old value when the accessor is set.\n */\nconst standardProperty = (options = defaultPropertyDeclaration, target, context) => {\n    const { kind, metadata } = context;\n    if (DEV_MODE && metadata == null) {\n        issueWarning('missing-class-metadata', `The class ${target} is missing decorator metadata. This ` +\n            `could mean that you're using a compiler that supports decorators ` +\n            `but doesn't support decorator metadata, such as TypeScript 5.1. ` +\n            `Please update your compiler.`);\n    }\n    // Store the property options\n    let properties = globalThis.litPropertyMetadata.get(metadata);\n    if (properties === undefined) {\n        globalThis.litPropertyMetadata.set(metadata, (properties = new Map()));\n    }\n    properties.set(context.name, options);\n    if (kind === 'accessor') {\n        // Standard decorators cannot dynamically modify the class, so we can't\n        // replace a field with accessors. The user must use the new `accessor`\n        // keyword instead.\n        const { name } = context;\n        return {\n            set(v) {\n                const oldValue = target.get.call(this);\n                target.set.call(this, v);\n                this.requestUpdate(name, oldValue, options);\n            },\n            init(v) {\n                if (v !== undefined) {\n                    this._$changeProperty(name, undefined, options);\n                }\n                return v;\n            },\n        };\n    }\n    else if (kind === 'setter') {\n        const { name } = context;\n        return function (value) {\n            const oldValue = this[name];\n            target.call(this, value);\n            this.requestUpdate(name, oldValue, options);\n        };\n    }\n    throw new Error(`Unsupported decorator location: ${kind}`);\n};\n/**\n * A class field or accessor decorator which creates a reactive property that\n * reflects a corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nfunction property(options) {\n    return (protoOrTarget, nameOrContext\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) => {\n        return (typeof nameOrContext === 'object'\n            ? standardProperty(options, protoOrTarget, nameOrContext)\n            : legacyProperty(options, protoOrTarget, nameOrContext));\n    };\n}\n//# sourceMappingURL=property.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/property.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-all.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-all.js ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   queryAll: function() { return /* binding */ queryAll; }\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Shared fragment used to generate empty NodeLists when a render root is\n// undefined\nlet fragment;\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs: NodeListOf<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction queryAll(selector) {\n    return ((obj, name) => {\n        return (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.desc)(obj, name, {\n            get() {\n                const container = this.renderRoot ?? (fragment ??= document.createDocumentFragment());\n                return container.querySelectorAll(selector);\n            },\n        });\n    });\n}\n//# sourceMappingURL=query-all.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9AbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGV2ZWxvcG1lbnQvZGVjb3JhdG9ycy9xdWVyeS1hbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxlQUFlLDhDQUFJO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvc2l3ZS9ub2RlX21vZHVsZXMvQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RldmVsb3BtZW50L2RlY29yYXRvcnMvcXVlcnktYWxsLmpzPzI4YjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovXG5pbXBvcnQgeyBkZXNjIH0gZnJvbSAnLi9iYXNlLmpzJztcbi8vIFNoYXJlZCBmcmFnbWVudCB1c2VkIHRvIGdlbmVyYXRlIGVtcHR5IE5vZGVMaXN0cyB3aGVuIGEgcmVuZGVyIHJvb3QgaXNcbi8vIHVuZGVmaW5lZFxubGV0IGZyYWdtZW50O1xuLyoqXG4gKiBBIHByb3BlcnR5IGRlY29yYXRvciB0aGF0IGNvbnZlcnRzIGEgY2xhc3MgcHJvcGVydHkgaW50byBhIGdldHRlclxuICogdGhhdCBleGVjdXRlcyBhIHF1ZXJ5U2VsZWN0b3JBbGwgb24gdGhlIGVsZW1lbnQncyByZW5kZXJSb290LlxuICpcbiAqIEBwYXJhbSBzZWxlY3RvciBBIERPTVN0cmluZyBjb250YWluaW5nIG9uZSBvciBtb3JlIHNlbGVjdG9ycyB0byBtYXRjaC5cbiAqXG4gKiBTZWU6XG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRG9jdW1lbnQvcXVlcnlTZWxlY3RvckFsbFxuICpcbiAqIGBgYHRzXG4gKiBjbGFzcyBNeUVsZW1lbnQge1xuICogICBAcXVlcnlBbGwoJ2RpdicpXG4gKiAgIGRpdnM6IE5vZGVMaXN0T2Y8SFRNTERpdkVsZW1lbnQ+O1xuICpcbiAqICAgcmVuZGVyKCkge1xuICogICAgIHJldHVybiBodG1sYFxuICogICAgICAgPGRpdiBpZD1cImZpcnN0XCI+PC9kaXY+XG4gKiAgICAgICA8ZGl2IGlkPVwic2Vjb25kXCI+PC9kaXY+XG4gKiAgICAgYDtcbiAqICAgfVxuICogfVxuICogYGBgXG4gKiBAY2F0ZWdvcnkgRGVjb3JhdG9yXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBxdWVyeUFsbChzZWxlY3Rvcikge1xuICAgIHJldHVybiAoKG9iaiwgbmFtZSkgPT4ge1xuICAgICAgICByZXR1cm4gZGVzYyhvYmosIG5hbWUsIHtcbiAgICAgICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLnJlbmRlclJvb3QgPz8gKGZyYWdtZW50ID8/PSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5LWFsbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-all.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-assigned-elements.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-assigned-elements.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   queryAssignedElements: function() { return /* binding */ queryAssignedElements; }\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/base.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nfunction queryAssignedElements(options) {\n    return ((obj, name) => {\n        const { slot, selector } = options ?? {};\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        return (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.desc)(obj, name, {\n            get() {\n                const slotEl = this.renderRoot?.querySelector(slotSelector);\n                const elements = slotEl?.assignedElements(options) ?? [];\n                return (selector === undefined\n                    ? elements\n                    : elements.filter((node) => node.matches(selector)));\n            },\n        });\n    });\n}\n//# sourceMappingURL=query-assigned-elements.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9AbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGV2ZWxvcG1lbnQvZGVjb3JhdG9ycy9xdWVyeS1hc3NpZ25lZC1lbGVtZW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHdDQUF3QztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixjQUFjO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQyxvQ0FBb0MsZ0JBQWdCLEtBQUssb0JBQW9CO0FBQzdFLGVBQWUsOENBQUk7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9AbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGV2ZWxvcG1lbnQvZGVjb3JhdG9ycy9xdWVyeS1hc3NpZ25lZC1lbGVtZW50cy5qcz8zYmQ0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL1xuaW1wb3J0IHsgZGVzYyB9IGZyb20gJy4vYmFzZS5qcyc7XG4vKipcbiAqIEEgcHJvcGVydHkgZGVjb3JhdG9yIHRoYXQgY29udmVydHMgYSBjbGFzcyBwcm9wZXJ0eSBpbnRvIGEgZ2V0dGVyIHRoYXRcbiAqIHJldHVybnMgdGhlIGBhc3NpZ25lZEVsZW1lbnRzYCBvZiB0aGUgZ2l2ZW4gYHNsb3RgLiBQcm92aWRlcyBhIGRlY2xhcmF0aXZlXG4gKiB3YXkgdG8gdXNlXG4gKiBbYEhUTUxTbG90RWxlbWVudC5hc3NpZ25lZEVsZW1lbnRzYF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxTbG90RWxlbWVudC9hc3NpZ25lZEVsZW1lbnRzKS5cbiAqXG4gKiBDYW4gYmUgcGFzc2VkIGFuIG9wdGlvbmFsIHtAbGlua2NvZGUgUXVlcnlBc3NpZ25lZEVsZW1lbnRzT3B0aW9uc30gb2JqZWN0LlxuICpcbiAqIEV4YW1wbGUgdXNhZ2U6XG4gKiBgYGB0c1xuICogY2xhc3MgTXlFbGVtZW50IHtcbiAqICAgQHF1ZXJ5QXNzaWduZWRFbGVtZW50cyh7IHNsb3Q6ICdsaXN0JyB9KVxuICogICBsaXN0SXRlbXMhOiBBcnJheTxIVE1MRWxlbWVudD47XG4gKiAgIEBxdWVyeUFzc2lnbmVkRWxlbWVudHMoKVxuICogICB1bm5hbWVkU2xvdEVscyE6IEFycmF5PEhUTUxFbGVtZW50PjtcbiAqXG4gKiAgIHJlbmRlcigpIHtcbiAqICAgICByZXR1cm4gaHRtbGBcbiAqICAgICAgIDxzbG90IG5hbWU9XCJsaXN0XCI+PC9zbG90PlxuICogICAgICAgPHNsb3Q+PC9zbG90PlxuICogICAgIGA7XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICpcbiAqIE5vdGUsIHRoZSB0eXBlIG9mIHRoaXMgcHJvcGVydHkgc2hvdWxkIGJlIGFubm90YXRlZCBhcyBgQXJyYXk8SFRNTEVsZW1lbnQ+YC5cbiAqXG4gKiBAY2F0ZWdvcnkgRGVjb3JhdG9yXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBxdWVyeUFzc2lnbmVkRWxlbWVudHMob3B0aW9ucykge1xuICAgIHJldHVybiAoKG9iaiwgbmFtZSkgPT4ge1xuICAgICAgICBjb25zdCB7IHNsb3QsIHNlbGVjdG9yIH0gPSBvcHRpb25zID8/IHt9O1xuICAgICAgICBjb25zdCBzbG90U2VsZWN0b3IgPSBgc2xvdCR7c2xvdCA/IGBbbmFtZT0ke3Nsb3R9XWAgOiAnOm5vdChbbmFtZV0pJ31gO1xuICAgICAgICByZXR1cm4gZGVzYyhvYmosIG5hbWUsIHtcbiAgICAgICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBzbG90RWwgPSB0aGlzLnJlbmRlclJvb3Q/LnF1ZXJ5U2VsZWN0b3Ioc2xvdFNlbGVjdG9yKTtcbiAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50cyA9IHNsb3RFbD8uYXNzaWduZWRFbGVtZW50cyhvcHRpb25zKSA/PyBbXTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHNlbGVjdG9yID09PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgPyBlbGVtZW50c1xuICAgICAgICAgICAgICAgICAgICA6IGVsZW1lbnRzLmZpbHRlcigobm9kZSkgPT4gbm9kZS5tYXRjaGVzKHNlbGVjdG9yKSkpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeS1hc3NpZ25lZC1lbGVtZW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-assigned-elements.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-assigned-nodes.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-assigned-nodes.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   queryAssignedNodes: function() { return /* binding */ queryAssignedNodes; }\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given `slot`.\n *\n * Can be passed an optional {@linkcode QueryAssignedNodesOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes({slot: 'list', flatten: true})\n *   listItems!: Array<Node>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note the type of this property should be annotated as `Array<Node>`. Use the\n * queryAssignedElements decorator to list only elements, and optionally filter\n * the element list using a CSS selector.\n *\n * @category Decorator\n */\nfunction queryAssignedNodes(options) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return ((obj, name) => {\n        const { slot } = options ?? {};\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        return (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.desc)(obj, name, {\n            get() {\n                const slotEl = this.renderRoot?.querySelector(slotSelector);\n                return (slotEl?.assignedNodes(options) ?? []);\n            },\n        });\n    });\n}\n//# sourceMappingURL=query-assigned-nodes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9AbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGV2ZWxvcG1lbnQvZGVjb3JhdG9ycy9xdWVyeS1hc3NpZ25lZC1ub2Rlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscUNBQXFDO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDRCQUE0QjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGdCQUFnQixPQUFPO0FBQ3ZCLG9DQUFvQyxnQkFBZ0IsS0FBSyxvQkFBb0I7QUFDN0UsZUFBZSw4Q0FBSTtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3Npd2Uvbm9kZV9tb2R1bGVzL0BsaXQvcmVhY3RpdmUtZWxlbWVudC9kZXZlbG9wbWVudC9kZWNvcmF0b3JzL3F1ZXJ5LWFzc2lnbmVkLW5vZGVzLmpzPzdlNDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovXG5pbXBvcnQgeyBkZXNjIH0gZnJvbSAnLi9iYXNlLmpzJztcbi8qKlxuICogQSBwcm9wZXJ0eSBkZWNvcmF0b3IgdGhhdCBjb252ZXJ0cyBhIGNsYXNzIHByb3BlcnR5IGludG8gYSBnZXR0ZXIgdGhhdFxuICogcmV0dXJucyB0aGUgYGFzc2lnbmVkTm9kZXNgIG9mIHRoZSBnaXZlbiBgc2xvdGAuXG4gKlxuICogQ2FuIGJlIHBhc3NlZCBhbiBvcHRpb25hbCB7QGxpbmtjb2RlIFF1ZXJ5QXNzaWduZWROb2Rlc09wdGlvbnN9IG9iamVjdC5cbiAqXG4gKiBFeGFtcGxlIHVzYWdlOlxuICogYGBgdHNcbiAqIGNsYXNzIE15RWxlbWVudCB7XG4gKiAgIEBxdWVyeUFzc2lnbmVkTm9kZXMoe3Nsb3Q6ICdsaXN0JywgZmxhdHRlbjogdHJ1ZX0pXG4gKiAgIGxpc3RJdGVtcyE6IEFycmF5PE5vZGU+O1xuICpcbiAqICAgcmVuZGVyKCkge1xuICogICAgIHJldHVybiBodG1sYFxuICogICAgICAgPHNsb3QgbmFtZT1cImxpc3RcIj48L3Nsb3Q+XG4gKiAgICAgYDtcbiAqICAgfVxuICogfVxuICogYGBgXG4gKlxuICogTm90ZSB0aGUgdHlwZSBvZiB0aGlzIHByb3BlcnR5IHNob3VsZCBiZSBhbm5vdGF0ZWQgYXMgYEFycmF5PE5vZGU+YC4gVXNlIHRoZVxuICogcXVlcnlBc3NpZ25lZEVsZW1lbnRzIGRlY29yYXRvciB0byBsaXN0IG9ubHkgZWxlbWVudHMsIGFuZCBvcHRpb25hbGx5IGZpbHRlclxuICogdGhlIGVsZW1lbnQgbGlzdCB1c2luZyBhIENTUyBzZWxlY3Rvci5cbiAqXG4gKiBAY2F0ZWdvcnkgRGVjb3JhdG9yXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBxdWVyeUFzc2lnbmVkTm9kZXMob3B0aW9ucykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgcmV0dXJuICgob2JqLCBuYW1lKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgc2xvdCB9ID0gb3B0aW9ucyA/PyB7fTtcbiAgICAgICAgY29uc3Qgc2xvdFNlbGVjdG9yID0gYHNsb3Qke3Nsb3QgPyBgW25hbWU9JHtzbG90fV1gIDogJzpub3QoW25hbWVdKSd9YDtcbiAgICAgICAgcmV0dXJuIGRlc2Mob2JqLCBuYW1lLCB7XG4gICAgICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2xvdEVsID0gdGhpcy5yZW5kZXJSb290Py5xdWVyeVNlbGVjdG9yKHNsb3RTZWxlY3Rvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChzbG90RWw/LmFzc2lnbmVkTm9kZXMob3B0aW9ucykgPz8gW10pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeS1hc3NpZ25lZC1ub2Rlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-assigned-nodes.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-async.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-async.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   queryAsync: function() { return /* binding */ queryAsync; }\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first: Promise<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nfunction queryAsync(selector) {\n    return ((obj, name) => {\n        return (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.desc)(obj, name, {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot?.querySelector(selector) ?? null;\n            },\n        });\n    });\n}\n//# sourceMappingURL=query-async.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9AbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGV2ZWxvcG1lbnQvZGVjb3JhdG9ycy9xdWVyeS1hc3luYy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZUFBZSw4Q0FBSTtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3Npd2Uvbm9kZV9tb2R1bGVzL0BsaXQvcmVhY3RpdmUtZWxlbWVudC9kZXZlbG9wbWVudC9kZWNvcmF0b3JzL3F1ZXJ5LWFzeW5jLmpzPzliY2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovXG5pbXBvcnQgeyBkZXNjIH0gZnJvbSAnLi9iYXNlLmpzJztcbi8vIE5vdGUsIGluIHRoZSBmdXR1cmUsIHdlIG1heSBleHRlbmQgdGhpcyBkZWNvcmF0b3IgdG8gc3VwcG9ydCB0aGUgdXNlIGNhc2Vcbi8vIHdoZXJlIHRoZSBxdWVyaWVkIGVsZW1lbnQgbWF5IG5lZWQgdG8gZG8gd29yayB0byBiZWNvbWUgcmVhZHkgdG8gaW50ZXJhY3Rcbi8vIHdpdGggKGUuZy4gbG9hZCBzb21lIGltcGxlbWVudGF0aW9uIGNvZGUpLiBJZiBzbywgd2UgbWlnaHQgZWxlY3QgdG9cbi8vIGFkZCBhIHNlY29uZCBhcmd1bWVudCBkZWZpbmluZyBhIGZ1bmN0aW9uIHRoYXQgY2FuIGJlIHJ1biB0byBtYWtlIHRoZVxuLy8gcXVlcmllZCBlbGVtZW50IGxvYWRlZC91cGRhdGVkL3JlYWR5LlxuLyoqXG4gKiBBIHByb3BlcnR5IGRlY29yYXRvciB0aGF0IGNvbnZlcnRzIGEgY2xhc3MgcHJvcGVydHkgaW50byBhIGdldHRlciB0aGF0XG4gKiByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSByZXN1bHQgb2YgYSBxdWVyeVNlbGVjdG9yIG9uIHRoZVxuICogZWxlbWVudCdzIHJlbmRlclJvb3QgZG9uZSBhZnRlciB0aGUgZWxlbWVudCdzIGB1cGRhdGVDb21wbGV0ZWAgcHJvbWlzZVxuICogcmVzb2x2ZXMuIFdoZW4gdGhlIHF1ZXJpZWQgcHJvcGVydHkgbWF5IGNoYW5nZSB3aXRoIGVsZW1lbnQgc3RhdGUsIHRoaXNcbiAqIGRlY29yYXRvciBjYW4gYmUgdXNlZCBpbnN0ZWFkIG9mIHJlcXVpcmluZyB1c2VycyB0byBhd2FpdCB0aGVcbiAqIGB1cGRhdGVDb21wbGV0ZWAgYmVmb3JlIGFjY2Vzc2luZyB0aGUgcHJvcGVydHkuXG4gKlxuICogQHBhcmFtIHNlbGVjdG9yIEEgRE9NU3RyaW5nIGNvbnRhaW5pbmcgb25lIG9yIG1vcmUgc2VsZWN0b3JzIHRvIG1hdGNoLlxuICpcbiAqIFNlZTogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L3F1ZXJ5U2VsZWN0b3JcbiAqXG4gKiBgYGB0c1xuICogY2xhc3MgTXlFbGVtZW50IHtcbiAqICAgQHF1ZXJ5QXN5bmMoJyNmaXJzdCcpXG4gKiAgIGZpcnN0OiBQcm9taXNlPEhUTUxEaXZFbGVtZW50PjtcbiAqXG4gKiAgIHJlbmRlcigpIHtcbiAqICAgICByZXR1cm4gaHRtbGBcbiAqICAgICAgIDxkaXYgaWQ9XCJmaXJzdFwiPjwvZGl2PlxuICogICAgICAgPGRpdiBpZD1cInNlY29uZFwiPjwvZGl2PlxuICogICAgIGA7XG4gKiAgIH1cbiAqIH1cbiAqXG4gKiAvLyBleHRlcm5hbCB1c2FnZVxuICogYXN5bmMgZG9Tb21ldGhpbmdXaXRoRmlyc3QoKSB7XG4gKiAgKGF3YWl0IGFNeUVsZW1lbnQuZmlyc3QpLmRvU29tZXRoaW5nKCk7XG4gKiB9XG4gKiBgYGBcbiAqIEBjYXRlZ29yeSBEZWNvcmF0b3JcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHF1ZXJ5QXN5bmMoc2VsZWN0b3IpIHtcbiAgICByZXR1cm4gKChvYmosIG5hbWUpID0+IHtcbiAgICAgICAgcmV0dXJuIGRlc2Mob2JqLCBuYW1lLCB7XG4gICAgICAgICAgICBhc3luYyBnZXQoKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy51cGRhdGVDb21wbGV0ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJSb290Py5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKSA/PyBudWxsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeS1hc3luYy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-async.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   query: function() { return /* binding */ query; }\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (globalThis.litIssuedWarnings ??= new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += code\n            ? ` See https://lit.dev/msg/${code} for more information.`\n            : '';\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction query(selector, cache) {\n    return ((protoOrTarget, nameOrContext, descriptor) => {\n        const doQuery = (el) => {\n            const result = (el.renderRoot?.querySelector(selector) ?? null);\n            if (DEV_MODE && result === null && cache && !el.hasUpdated) {\n                const name = typeof nameOrContext === 'object'\n                    ? nameOrContext.name\n                    : nameOrContext;\n                issueWarning('', `@query'd field ${JSON.stringify(String(name))} with the 'cache' ` +\n                    `flag set for selector '${selector}' has been accessed before ` +\n                    `the first update and returned null. This is expected if the ` +\n                    `renderRoot tree has not been provided beforehand (e.g. via ` +\n                    `Declarative Shadow DOM). Therefore the value hasn't been cached.`);\n            }\n            // TODO: if we want to allow users to assert that the query will never\n            // return null, we need a new option and to throw here if the result\n            // is null.\n            return result;\n        };\n        if (cache) {\n            // Accessors to wrap from either:\n            //   1. The decorator target, in the case of standard decorators\n            //   2. The property descriptor, in the case of experimental decorators\n            //      on auto-accessors.\n            //   3. Functions that access our own cache-key property on the instance,\n            //      in the case of experimental decorators on fields.\n            const { get, set } = typeof nameOrContext === 'object'\n                ? protoOrTarget\n                : descriptor ??\n                    (() => {\n                        const key = DEV_MODE\n                            ? Symbol(`${String(nameOrContext)} (@query() cache)`)\n                            : Symbol();\n                        return {\n                            get() {\n                                return this[key];\n                            },\n                            set(v) {\n                                this[key] = v;\n                            },\n                        };\n                    })();\n            return (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.desc)(protoOrTarget, nameOrContext, {\n                get() {\n                    let result = get.call(this);\n                    if (result === undefined) {\n                        result = doQuery(this);\n                        if (result !== null || this.hasUpdated) {\n                            set.call(this, result);\n                        }\n                    }\n                    return result;\n                },\n            });\n        }\n        else {\n            // This object works as the return type for both standard and\n            // experimental decorators.\n            return (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.desc)(protoOrTarget, nameOrContext, {\n                get() {\n                    return doQuery(this);\n                },\n            });\n        }\n    });\n}\n//# sourceMappingURL=query.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9AbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGV2ZWxvcG1lbnQvZGVjb3JhdG9ycy9xdWVyeS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLE1BQU07QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsOEJBQThCO0FBQ2pGLDhDQUE4QyxTQUFTO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFdBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsdUJBQXVCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSxxQkFBcUI7QUFDckIsbUJBQW1CLDhDQUFJO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsOENBQUk7QUFDdkI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9AbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGV2ZWxvcG1lbnQvZGVjb3JhdG9ycy9xdWVyeS5qcz8xNjk4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL1xuaW1wb3J0IHsgZGVzYyB9IGZyb20gJy4vYmFzZS5qcyc7XG5jb25zdCBERVZfTU9ERSA9IHRydWU7XG5sZXQgaXNzdWVXYXJuaW5nO1xuaWYgKERFVl9NT0RFKSB7XG4gICAgLy8gRW5zdXJlIHdhcm5pbmdzIGFyZSBpc3N1ZWQgb25seSAxeCwgZXZlbiBpZiBtdWx0aXBsZSB2ZXJzaW9ucyBvZiBMaXRcbiAgICAvLyBhcmUgbG9hZGVkLlxuICAgIGNvbnN0IGlzc3VlZFdhcm5pbmdzID0gKGdsb2JhbFRoaXMubGl0SXNzdWVkV2FybmluZ3MgPz89IG5ldyBTZXQoKSk7XG4gICAgLy8gSXNzdWUgYSB3YXJuaW5nLCBpZiB3ZSBoYXZlbid0IGFscmVhZHkuXG4gICAgaXNzdWVXYXJuaW5nID0gKGNvZGUsIHdhcm5pbmcpID0+IHtcbiAgICAgICAgd2FybmluZyArPSBjb2RlXG4gICAgICAgICAgICA/IGAgU2VlIGh0dHBzOi8vbGl0LmRldi9tc2cvJHtjb2RlfSBmb3IgbW9yZSBpbmZvcm1hdGlvbi5gXG4gICAgICAgICAgICA6ICcnO1xuICAgICAgICBpZiAoIWlzc3VlZFdhcm5pbmdzLmhhcyh3YXJuaW5nKSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKHdhcm5pbmcpO1xuICAgICAgICAgICAgaXNzdWVkV2FybmluZ3MuYWRkKHdhcm5pbmcpO1xuICAgICAgICB9XG4gICAgfTtcbn1cbi8qKlxuICogQSBwcm9wZXJ0eSBkZWNvcmF0b3IgdGhhdCBjb252ZXJ0cyBhIGNsYXNzIHByb3BlcnR5IGludG8gYSBnZXR0ZXIgdGhhdFxuICogZXhlY3V0ZXMgYSBxdWVyeVNlbGVjdG9yIG9uIHRoZSBlbGVtZW50J3MgcmVuZGVyUm9vdC5cbiAqXG4gKiBAcGFyYW0gc2VsZWN0b3IgQSBET01TdHJpbmcgY29udGFpbmluZyBvbmUgb3IgbW9yZSBzZWxlY3RvcnMgdG8gbWF0Y2guXG4gKiBAcGFyYW0gY2FjaGUgQW4gb3B0aW9uYWwgYm9vbGVhbiB3aGljaCB3aGVuIHRydWUgcGVyZm9ybXMgdGhlIERPTSBxdWVyeSBvbmx5XG4gKiAgICAgb25jZSBhbmQgY2FjaGVzIHRoZSByZXN1bHQuXG4gKlxuICogU2VlOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRG9jdW1lbnQvcXVlcnlTZWxlY3RvclxuICpcbiAqIGBgYHRzXG4gKiBjbGFzcyBNeUVsZW1lbnQge1xuICogICBAcXVlcnkoJyNmaXJzdCcpXG4gKiAgIGZpcnN0OiBIVE1MRGl2RWxlbWVudDtcbiAqXG4gKiAgIHJlbmRlcigpIHtcbiAqICAgICByZXR1cm4gaHRtbGBcbiAqICAgICAgIDxkaXYgaWQ9XCJmaXJzdFwiPjwvZGl2PlxuICogICAgICAgPGRpdiBpZD1cInNlY29uZFwiPjwvZGl2PlxuICogICAgIGA7XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICogQGNhdGVnb3J5IERlY29yYXRvclxuICovXG5leHBvcnQgZnVuY3Rpb24gcXVlcnkoc2VsZWN0b3IsIGNhY2hlKSB7XG4gICAgcmV0dXJuICgocHJvdG9PclRhcmdldCwgbmFtZU9yQ29udGV4dCwgZGVzY3JpcHRvcikgPT4ge1xuICAgICAgICBjb25zdCBkb1F1ZXJ5ID0gKGVsKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSAoZWwucmVuZGVyUm9vdD8ucXVlcnlTZWxlY3RvcihzZWxlY3RvcikgPz8gbnVsbCk7XG4gICAgICAgICAgICBpZiAoREVWX01PREUgJiYgcmVzdWx0ID09PSBudWxsICYmIGNhY2hlICYmICFlbC5oYXNVcGRhdGVkKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IHR5cGVvZiBuYW1lT3JDb250ZXh0ID09PSAnb2JqZWN0J1xuICAgICAgICAgICAgICAgICAgICA/IG5hbWVPckNvbnRleHQubmFtZVxuICAgICAgICAgICAgICAgICAgICA6IG5hbWVPckNvbnRleHQ7XG4gICAgICAgICAgICAgICAgaXNzdWVXYXJuaW5nKCcnLCBgQHF1ZXJ5J2QgZmllbGQgJHtKU09OLnN0cmluZ2lmeShTdHJpbmcobmFtZSkpfSB3aXRoIHRoZSAnY2FjaGUnIGAgK1xuICAgICAgICAgICAgICAgICAgICBgZmxhZyBzZXQgZm9yIHNlbGVjdG9yICcke3NlbGVjdG9yfScgaGFzIGJlZW4gYWNjZXNzZWQgYmVmb3JlIGAgK1xuICAgICAgICAgICAgICAgICAgICBgdGhlIGZpcnN0IHVwZGF0ZSBhbmQgcmV0dXJuZWQgbnVsbC4gVGhpcyBpcyBleHBlY3RlZCBpZiB0aGUgYCArXG4gICAgICAgICAgICAgICAgICAgIGByZW5kZXJSb290IHRyZWUgaGFzIG5vdCBiZWVuIHByb3ZpZGVkIGJlZm9yZWhhbmQgKGUuZy4gdmlhIGAgK1xuICAgICAgICAgICAgICAgICAgICBgRGVjbGFyYXRpdmUgU2hhZG93IERPTSkuIFRoZXJlZm9yZSB0aGUgdmFsdWUgaGFzbid0IGJlZW4gY2FjaGVkLmApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVE9ETzogaWYgd2Ugd2FudCB0byBhbGxvdyB1c2VycyB0byBhc3NlcnQgdGhhdCB0aGUgcXVlcnkgd2lsbCBuZXZlclxuICAgICAgICAgICAgLy8gcmV0dXJuIG51bGwsIHdlIG5lZWQgYSBuZXcgb3B0aW9uIGFuZCB0byB0aHJvdyBoZXJlIGlmIHRoZSByZXN1bHRcbiAgICAgICAgICAgIC8vIGlzIG51bGwuXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9O1xuICAgICAgICBpZiAoY2FjaGUpIHtcbiAgICAgICAgICAgIC8vIEFjY2Vzc29ycyB0byB3cmFwIGZyb20gZWl0aGVyOlxuICAgICAgICAgICAgLy8gICAxLiBUaGUgZGVjb3JhdG9yIHRhcmdldCwgaW4gdGhlIGNhc2Ugb2Ygc3RhbmRhcmQgZGVjb3JhdG9yc1xuICAgICAgICAgICAgLy8gICAyLiBUaGUgcHJvcGVydHkgZGVzY3JpcHRvciwgaW4gdGhlIGNhc2Ugb2YgZXhwZXJpbWVudGFsIGRlY29yYXRvcnNcbiAgICAgICAgICAgIC8vICAgICAgb24gYXV0by1hY2Nlc3NvcnMuXG4gICAgICAgICAgICAvLyAgIDMuIEZ1bmN0aW9ucyB0aGF0IGFjY2VzcyBvdXIgb3duIGNhY2hlLWtleSBwcm9wZXJ0eSBvbiB0aGUgaW5zdGFuY2UsXG4gICAgICAgICAgICAvLyAgICAgIGluIHRoZSBjYXNlIG9mIGV4cGVyaW1lbnRhbCBkZWNvcmF0b3JzIG9uIGZpZWxkcy5cbiAgICAgICAgICAgIGNvbnN0IHsgZ2V0LCBzZXQgfSA9IHR5cGVvZiBuYW1lT3JDb250ZXh0ID09PSAnb2JqZWN0J1xuICAgICAgICAgICAgICAgID8gcHJvdG9PclRhcmdldFxuICAgICAgICAgICAgICAgIDogZGVzY3JpcHRvciA/P1xuICAgICAgICAgICAgICAgICAgICAoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qga2V5ID0gREVWX01PREVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFN5bWJvbChgJHtTdHJpbmcobmFtZU9yQ29udGV4dCl9IChAcXVlcnkoKSBjYWNoZSlgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogU3ltYm9sKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXNba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldCh2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNba2V5XSA9IHY7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH0pKCk7XG4gICAgICAgICAgICByZXR1cm4gZGVzYyhwcm90b09yVGFyZ2V0LCBuYW1lT3JDb250ZXh0LCB7XG4gICAgICAgICAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gZ2V0LmNhbGwodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gZG9RdWVyeSh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgIT09IG51bGwgfHwgdGhpcy5oYXNVcGRhdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0LmNhbGwodGhpcywgcmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIFRoaXMgb2JqZWN0IHdvcmtzIGFzIHRoZSByZXR1cm4gdHlwZSBmb3IgYm90aCBzdGFuZGFyZCBhbmRcbiAgICAgICAgICAgIC8vIGV4cGVyaW1lbnRhbCBkZWNvcmF0b3JzLlxuICAgICAgICAgICAgcmV0dXJuIGRlc2MocHJvdG9PclRhcmdldCwgbmFtZU9yQ29udGV4dCwge1xuICAgICAgICAgICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvUXVlcnkodGhpcyk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/state.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/state.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   state: function() { return /* binding */ state; }\n/* harmony export */ });\n/* harmony import */ var _property_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./property.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/property.js\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nfunction state(options) {\n    return (0,_property_js__WEBPACK_IMPORTED_MODULE_0__.property)({\n        ...options,\n        // Add both `state` and `attribute` because we found a third party\n        // controller that is keying off of PropertyOptions.state to determine\n        // whether a field is a private internal property or not.\n        state: true,\n        attribute: false,\n    });\n}\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9AbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGV2ZWxvcG1lbnQvZGVjb3JhdG9ycy9zdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsc0RBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvc2l3ZS9ub2RlX21vZHVsZXMvQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RldmVsb3BtZW50L2RlY29yYXRvcnMvc3RhdGUuanM/ZTM5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbi8qXG4gKiBJTVBPUlRBTlQ6IEZvciBjb21wYXRpYmlsaXR5IHdpdGggdHNpY2tsZSBhbmQgdGhlIENsb3N1cmUgSlMgY29tcGlsZXIsIGFsbFxuICogcHJvcGVydHkgZGVjb3JhdG9ycyAoYnV0IG5vdCBjbGFzcyBkZWNvcmF0b3JzKSBpbiB0aGlzIGZpbGUgdGhhdCBoYXZlXG4gKiBhbiBARXhwb3J0RGVjb3JhdGVkSXRlbXMgYW5ub3RhdGlvbiBtdXN0IGJlIGRlZmluZWQgYXMgYSByZWd1bGFyIGZ1bmN0aW9uLFxuICogbm90IGFuIGFycm93IGZ1bmN0aW9uLlxuICovXG5pbXBvcnQgeyBwcm9wZXJ0eSB9IGZyb20gJy4vcHJvcGVydHkuanMnO1xuLyoqXG4gKiBEZWNsYXJlcyBhIHByaXZhdGUgb3IgcHJvdGVjdGVkIHJlYWN0aXZlIHByb3BlcnR5IHRoYXQgc3RpbGwgdHJpZ2dlcnNcbiAqIHVwZGF0ZXMgdG8gdGhlIGVsZW1lbnQgd2hlbiBpdCBjaGFuZ2VzLiBJdCBkb2VzIG5vdCByZWZsZWN0IGZyb20gdGhlXG4gKiBjb3JyZXNwb25kaW5nIGF0dHJpYnV0ZS5cbiAqXG4gKiBQcm9wZXJ0aWVzIGRlY2xhcmVkIHRoaXMgd2F5IG11c3Qgbm90IGJlIHVzZWQgZnJvbSBIVE1MIG9yIEhUTUwgdGVtcGxhdGluZ1xuICogc3lzdGVtcywgdGhleSdyZSBzb2xlbHkgZm9yIHByb3BlcnRpZXMgaW50ZXJuYWwgdG8gdGhlIGVsZW1lbnQuIFRoZXNlXG4gKiBwcm9wZXJ0aWVzIG1heSBiZSByZW5hbWVkIGJ5IG9wdGltaXphdGlvbiB0b29scyBsaWtlIGNsb3N1cmUgY29tcGlsZXIuXG4gKiBAY2F0ZWdvcnkgRGVjb3JhdG9yXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdGF0ZShvcHRpb25zKSB7XG4gICAgcmV0dXJuIHByb3BlcnR5KHtcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgLy8gQWRkIGJvdGggYHN0YXRlYCBhbmQgYGF0dHJpYnV0ZWAgYmVjYXVzZSB3ZSBmb3VuZCBhIHRoaXJkIHBhcnR5XG4gICAgICAgIC8vIGNvbnRyb2xsZXIgdGhhdCBpcyBrZXlpbmcgb2ZmIG9mIFByb3BlcnR5T3B0aW9ucy5zdGF0ZSB0byBkZXRlcm1pbmVcbiAgICAgICAgLy8gd2hldGhlciBhIGZpZWxkIGlzIGEgcHJpdmF0ZSBpbnRlcm5hbCBwcm9wZXJ0eSBvciBub3QuXG4gICAgICAgIHN0YXRlOiB0cnVlLFxuICAgICAgICBhdHRyaWJ1dGU6IGZhbHNlLFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/state.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/reactive-element.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/reactive-element.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReactiveElement: function() { return /* binding */ ReactiveElement; },\n/* harmony export */   defaultConverter: function() { return /* binding */ defaultConverter; },\n/* harmony export */   notEqual: function() { return /* binding */ notEqual; }\n/* harmony export */ });\n/* harmony import */ var _css_tag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css-tag.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/css-tag.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _css_tag_js__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"defaultConverter\",\"notEqual\",\"ReactiveElement\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _css_tag_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\n// TODO (justinfagnani): Add `hasOwn` here when we ship ES2022\nconst { is, defineProperty, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, getPrototypeOf, } = Object;\nconst NODE_MODE = false;\n// Lets a minifier replace globalThis references with a minified name\nconst global = globalThis;\nif (NODE_MODE) {\n    global.customElements ??= customElements;\n}\nconst DEV_MODE = true;\nlet issueWarning;\nconst trustedTypes = global\n    .trustedTypes;\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n    ? trustedTypes.emptyScript\n    : '';\nconst polyfillSupport = DEV_MODE\n    ? global.reactiveElementPolyfillSupportDevMode\n    : global.reactiveElementPolyfillSupport;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (global.litIssuedWarnings ??=\n        new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n    issueWarning('dev-mode', `Lit is in dev mode. Not recommended for production!`);\n    // Issue polyfill support warning.\n    if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n        issueWarning('polyfill-support-missing', `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n            `the \\`polyfill-support\\` module has not been loaded.`);\n    }\n}\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n    ? (event) => {\n        const shouldEmit = global\n            .emitLitDebugLogEvents;\n        if (!shouldEmit) {\n            return;\n        }\n        global.dispatchEvent(new CustomEvent('lit-debug', {\n            detail: event,\n        }));\n    }\n    : undefined;\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = (prop, _obj) => prop;\nconst defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                value = value ? emptyStringForBooleanAttribute : null;\n                break;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                value = value == null ? value : JSON.stringify(value);\n                break;\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        let fromValue = value;\n        switch (type) {\n            case Boolean:\n                fromValue = value !== null;\n                break;\n            case Number:\n                fromValue = value === null ? null : Number(value);\n                break;\n            case Object:\n            case Array:\n                // Do *not* generate exception when invalid JSON is set as elements\n                // don't normally complain on being mis-configured.\n                // TODO(sorvell): Do generate exception in *dev mode*.\n                try {\n                    // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n                    fromValue = JSON.parse(value);\n                }\n                catch (e) {\n                    fromValue = null;\n                }\n                break;\n        }\n        return fromValue;\n    },\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nconst notEqual = (value, old) => !is(value, old);\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual,\n};\n// Ensure metadata is enabled. TypeScript does not polyfill\n// Symbol.metadata, so we must ensure that it exists.\nSymbol.metadata ??= Symbol('metadata');\n// Map from a class's metadata object to property options\n// Note that we must use nullish-coalescing assignment so that we only use one\n// map even if we load multiple version of this module.\nglobal.litPropertyMetadata ??= new WeakMap();\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclasses to render updates as desired.\n * @noInheritDoc\n */\nclass ReactiveElement\n// In the Node build, this `extends` clause will be substituted with\n// `(globalThis.HTMLElement ?? HTMLElement)`.\n//\n// This way, we will first prefer any global `HTMLElement` polyfill that the\n// user has assigned, and then fall back to the `HTMLElement` shim which has\n// been imported (see note at the top of this file about how this import is\n// generated by Rollup). Note that the `HTMLElement` variable has been\n// shadowed by this import, so it no longer refers to the global.\n extends HTMLElement {\n    /**\n     * Adds an initializer function to the class that is called during instance\n     * construction.\n     *\n     * This is useful for code that runs against a `ReactiveElement`\n     * subclass, such as a decorator, that needs to do work for each\n     * instance, such as setting up a `ReactiveController`.\n     *\n     * ```ts\n     * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n     *   target.addInitializer((instance: ReactiveElement) => {\n     *     // This is run during construction of the element\n     *     new MyController(instance);\n     *   });\n     * }\n     * ```\n     *\n     * Decorating a field will then cause each instance to run an initializer\n     * that adds a controller:\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   @myDecorator foo;\n     * }\n     * ```\n     *\n     * Initializers are stored per-constructor. Adding an initializer to a\n     * subclass does not add it to a superclass. Since initializers are run in\n     * constructors, initializers will run in order of the class hierarchy,\n     * starting with superclasses and progressing to the instance's class.\n     *\n     * @nocollapse\n     */\n    static addInitializer(initializer) {\n        this.__prepare();\n        (this._initializers ??= []).push(initializer);\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     * @category attributes\n     */\n    static get observedAttributes() {\n        // Ensure we've created all properties\n        this.finalize();\n        // this.__attributeToPropertyMap is only undefined after finalize() in\n        // ReactiveElement itself. ReactiveElement.observedAttributes is only\n        // accessed with ReactiveElement as the receiver when a subclass or mixin\n        // calls super.observedAttributes\n        return (this.__attributeToPropertyMap && [...this.__attributeToPropertyMap.keys()]);\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a {@linkcode PropertyDeclaration} for the property with the\n     * given options. The property setter calls the property's `hasChanged`\n     * property option or uses a strict identity check to determine whether or not\n     * to request an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * ```ts\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     * ```\n     *\n     * @nocollapse\n     * @category properties\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // If this is a state property, force the attribute to false.\n        if (options.state) {\n            options.attribute = false;\n        }\n        this.__prepare();\n        this.elementProperties.set(name, options);\n        if (!options.noAccessor) {\n            const key = DEV_MODE\n                ? // Use Symbol.for in dev mode to make it easier to maintain state\n                    // when doing HMR.\n                    Symbol.for(`${String(name)} (@property() cache)`)\n                : Symbol();\n            const descriptor = this.getPropertyDescriptor(name, key, options);\n            if (descriptor !== undefined) {\n                defineProperty(this.prototype, name, descriptor);\n            }\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   static getPropertyDescriptor(name, key, options) {\n     *     const defaultDescriptor =\n     *         super.getPropertyDescriptor(name, key, options);\n     *     const setter = defaultDescriptor.set;\n     *     return {\n     *       get: defaultDescriptor.get,\n     *       set(value) {\n     *         setter.call(this, value);\n     *         // custom action.\n     *       },\n     *       configurable: true,\n     *       enumerable: true\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @nocollapse\n     * @category properties\n     */\n    static getPropertyDescriptor(name, key, options) {\n        const { get, set } = getOwnPropertyDescriptor(this.prototype, name) ?? {\n            get() {\n                return this[key];\n            },\n            set(v) {\n                this[key] = v;\n            },\n        };\n        if (DEV_MODE && get == null) {\n            if ('value' in (getOwnPropertyDescriptor(this.prototype, name) ?? {})) {\n                throw new Error(`Field ${JSON.stringify(String(name))} on ` +\n                    `${this.name} was declared as a reactive property ` +\n                    `but it's actually declared as a value on the prototype. ` +\n                    `Usually this is due to using @property or @state on a method.`);\n            }\n            issueWarning('reactive-property-without-getter', `Field ${JSON.stringify(String(name))} on ` +\n                `${this.name} was declared as a reactive property ` +\n                `but it does not have a getter. This will be an error in a ` +\n                `future version of Lit.`);\n        }\n        return {\n            get() {\n                return get?.call(this);\n            },\n            set(value) {\n                const oldValue = get?.call(this);\n                set.call(this, value);\n                this.requestUpdate(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true,\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a `PropertyDeclaration` via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override\n     * {@linkcode createProperty}.\n     *\n     * @nocollapse\n     * @final\n     * @category properties\n     */\n    static getPropertyOptions(name) {\n        return this.elementProperties.get(name) ?? defaultPropertyDeclaration;\n    }\n    /**\n     * Initializes static own properties of the class used in bookkeeping\n     * for element properties, initializers, etc.\n     *\n     * Can be called multiple times by code that needs to ensure these\n     * properties exist before using them.\n     *\n     * This method ensures the superclass is finalized so that inherited\n     * property metadata can be copied down.\n     * @nocollapse\n     */\n    static __prepare() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('elementProperties', this))) {\n            // Already prepared\n            return;\n        }\n        // Finalize any superclasses\n        const superCtor = getPrototypeOf(this);\n        superCtor.finalize();\n        // Create own set of initializers for this class if any exist on the\n        // superclass and copy them down. Note, for a small perf boost, avoid\n        // creating initializers unless needed.\n        if (superCtor._initializers !== undefined) {\n            this._initializers = [...superCtor._initializers];\n        }\n        // Initialize elementProperties from the superclass\n        this.elementProperties = new Map(superCtor.elementProperties);\n    }\n    /**\n     * Finishes setting up the class so that it's ready to be registered\n     * as a custom element and instantiated.\n     *\n     * This method is called by the ReactiveElement.observedAttributes getter.\n     * If you override the observedAttributes getter, you must either call\n     * super.observedAttributes to trigger finalization, or call finalize()\n     * yourself.\n     *\n     * @nocollapse\n     */\n    static finalize() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this))) {\n            return;\n        }\n        this.finalized = true;\n        this.__prepare();\n        // Create properties from the static properties block:\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            const propKeys = [\n                ...getOwnPropertyNames(props),\n                ...getOwnPropertySymbols(props),\n            ];\n            for (const p of propKeys) {\n                this.createProperty(p, props[p]);\n            }\n        }\n        // Create properties from standard decorator metadata:\n        const metadata = this[Symbol.metadata];\n        if (metadata !== null) {\n            const properties = litPropertyMetadata.get(metadata);\n            if (properties !== undefined) {\n                for (const [p, options] of properties) {\n                    this.elementProperties.set(p, options);\n                }\n            }\n        }\n        // Create the attribute-to-property map\n        this.__attributeToPropertyMap = new Map();\n        for (const [p, options] of this.elementProperties) {\n            const attr = this.__attributeNameForProperty(p, options);\n            if (attr !== undefined) {\n                this.__attributeToPropertyMap.set(attr, p);\n            }\n        }\n        this.elementStyles = this.finalizeStyles(this.styles);\n        if (DEV_MODE) {\n            if (this.hasOwnProperty('createProperty')) {\n                issueWarning('no-override-create-property', 'Overriding ReactiveElement.createProperty() is deprecated. ' +\n                    'The override will not be called with standard decorators');\n            }\n            if (this.hasOwnProperty('getPropertyDescriptor')) {\n                issueWarning('no-override-get-property-descriptor', 'Overriding ReactiveElement.getPropertyDescriptor() is deprecated. ' +\n                    'The override will not be called with standard decorators');\n            }\n        }\n    }\n    /**\n     * Takes the styles the user supplied via the `static styles` property and\n     * returns the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * Styles are deduplicated preserving the _last_ instance in the list. This\n     * is a performance optimization to avoid duplicated styles that can occur\n     * especially when composing via subclassing. The last item is kept to try\n     * to preserve the cascade order with the assumption that it's most important\n     * that last added styles override previous styles.\n     *\n     * @nocollapse\n     * @category styles\n     */\n    static finalizeStyles(styles) {\n        const elementStyles = [];\n        if (Array.isArray(styles)) {\n            // Dedupe the flattened array in reverse order to preserve the last items.\n            // Casting to Array<unknown> works around TS error that\n            // appears to come from trying to flatten a type CSSResultArray.\n            const set = new Set(styles.flat(Infinity).reverse());\n            // Then preserve original order by adding the set items in reverse order.\n            for (const s of set) {\n                elementStyles.unshift((0,_css_tag_js__WEBPACK_IMPORTED_MODULE_0__.getCompatibleStyle)(s));\n            }\n        }\n        else if (styles !== undefined) {\n            elementStyles.push((0,_css_tag_js__WEBPACK_IMPORTED_MODULE_0__.getCompatibleStyle)(styles));\n        }\n        return elementStyles;\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static __attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false\n            ? undefined\n            : typeof attribute === 'string'\n                ? attribute\n                : typeof name === 'string'\n                    ? name.toLowerCase()\n                    : undefined;\n    }\n    constructor() {\n        super();\n        this.__instanceProperties = undefined;\n        /**\n         * True if there is a pending update as a result of calling `requestUpdate()`.\n         * Should only be read.\n         * @category updates\n         */\n        this.isUpdatePending = false;\n        /**\n         * Is set to `true` after the first update. The element code cannot assume\n         * that `renderRoot` exists before the element `hasUpdated`.\n         * @category updates\n         */\n        this.hasUpdated = false;\n        /**\n         * Name of currently reflecting property\n         */\n        this.__reflectingProperty = null;\n        this.__initialize();\n    }\n    /**\n     * Internal only override point for customizing work done when elements\n     * are constructed.\n     */\n    __initialize() {\n        this.__updatePromise = new Promise((res) => (this.enableUpdating = res));\n        this._$changedProperties = new Map();\n        // This enqueues a microtask that ust run before the first update, so it\n        // must be called before requestUpdate()\n        this.__saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdate();\n        this.constructor._initializers?.forEach((i) => i(this));\n    }\n    /**\n     * Registers a `ReactiveController` to participate in the element's reactive\n     * update cycle. The element automatically calls into any registered\n     * controllers during its lifecycle callbacks.\n     *\n     * If the element is connected when `addController()` is called, the\n     * controller's `hostConnected()` callback will be immediately called.\n     * @category controllers\n     */\n    addController(controller) {\n        (this.__controllers ??= new Set()).add(controller);\n        // If a controller is added after the element has been connected,\n        // call hostConnected. Note, re-using existence of `renderRoot` here\n        // (which is set in connectedCallback) to avoid the need to track a\n        // first connected state.\n        if (this.renderRoot !== undefined && this.isConnected) {\n            controller.hostConnected?.();\n        }\n    }\n    /**\n     * Removes a `ReactiveController` from the element.\n     * @category controllers\n     */\n    removeController(controller) {\n        this.__controllers?.delete(controller);\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    __saveInstanceProperties() {\n        const instanceProperties = new Map();\n        const elementProperties = this.constructor\n            .elementProperties;\n        for (const p of elementProperties.keys()) {\n            if (this.hasOwnProperty(p)) {\n                instanceProperties.set(p, this[p]);\n                delete this[p];\n            }\n        }\n        if (instanceProperties.size > 0) {\n            this.__instanceProperties = instanceProperties;\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     *\n     * @return Returns a node into which to render.\n     * @category rendering\n     */\n    createRenderRoot() {\n        const renderRoot = this.shadowRoot ??\n            this.attachShadow(this.constructor.shadowRootOptions);\n        (0,_css_tag_js__WEBPACK_IMPORTED_MODULE_0__.adoptStyles)(renderRoot, this.constructor.elementStyles);\n        return renderRoot;\n    }\n    /**\n     * On first connection, creates the element's renderRoot, sets up\n     * element styling, and enables updating.\n     * @category lifecycle\n     */\n    connectedCallback() {\n        // Create renderRoot before controllers `hostConnected`\n        this.renderRoot ??=\n            this.createRenderRoot();\n        this.enableUpdating(true);\n        this.__controllers?.forEach((c) => c.hostConnected?.());\n    }\n    /**\n     * Note, this method should be considered final and not overridden. It is\n     * overridden on the element instance with a function that triggers the first\n     * update.\n     * @category updates\n     */\n    enableUpdating(_requestedUpdate) { }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     * @category lifecycle\n     */\n    disconnectedCallback() {\n        this.__controllers?.forEach((c) => c.hostDisconnected?.());\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     *\n     * Specifically, when an attribute is set, the corresponding property is set.\n     * You should rarely need to implement this callback. If this method is\n     * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n     * called.\n     *\n     * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n     * on MDN for more information about the `attributeChangedCallback`.\n     * @category attributes\n     */\n    attributeChangedCallback(name, _old, value) {\n        this._$attributeToProperty(name, value);\n    }\n    __propertyToAttribute(name, value) {\n        const elemProperties = this.constructor.elementProperties;\n        const options = elemProperties.get(name);\n        const attr = this.constructor.__attributeNameForProperty(name, options);\n        if (attr !== undefined && options.reflect === true) {\n            const converter = options.converter?.toAttribute !==\n                undefined\n                ? options.converter\n                : defaultConverter;\n            const attrValue = converter.toAttribute(value, options.type);\n            if (DEV_MODE &&\n                this.constructor.enabledWarnings.includes('migration') &&\n                attrValue === undefined) {\n                issueWarning('undefined-attribute-value', `The attribute value for the ${name} property is ` +\n                    `undefined on element ${this.localName}. The attribute will be ` +\n                    `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n                    `the attribute would not have changed.`);\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this.__reflectingProperty = name;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this.__reflectingProperty = null;\n        }\n    }\n    /** @internal */\n    _$attributeToProperty(name, value) {\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        const propName = ctor.__attributeToPropertyMap.get(name);\n        // Use tracking info to avoid reflecting a property value to an attribute\n        // if it was just set because the attribute changed.\n        if (propName !== undefined && this.__reflectingProperty !== propName) {\n            const options = ctor.getPropertyOptions(propName);\n            const converter = typeof options.converter === 'function'\n                ? { fromAttribute: options.converter }\n                : options.converter?.fromAttribute !== undefined\n                    ? options.converter\n                    : defaultConverter;\n            // mark state reflecting\n            this.__reflectingProperty = propName;\n            this[propName] = converter.fromAttribute(value, options.type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            );\n            // mark state not reflecting\n            this.__reflectingProperty = null;\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should be called\n     * when an element should update based on some state not triggered by setting\n     * a reactive property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored.\n     *\n     * @param name name of requesting property\n     * @param oldValue old value of requesting property\n     * @param options property options to use instead of the previously\n     *     configured options\n     * @category updates\n     */\n    requestUpdate(name, oldValue, options) {\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            if (DEV_MODE && name instanceof Event) {\n                issueWarning(``, `The requestUpdate() method was called with an Event as the property name. This is probably a mistake caused by binding this.requestUpdate as an event listener. Instead bind a function that will call it with no arguments: () => this.requestUpdate()`);\n            }\n            options ??= this.constructor.getPropertyOptions(name);\n            const hasChanged = options.hasChanged ?? notEqual;\n            const newValue = this[name];\n            if (hasChanged(newValue, oldValue)) {\n                this._$changeProperty(name, oldValue, options);\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                return;\n            }\n        }\n        if (this.isUpdatePending === false) {\n            this.__updatePromise = this.__enqueueUpdate();\n        }\n    }\n    /**\n     * @internal\n     */\n    _$changeProperty(name, oldValue, options) {\n        // TODO (justinfagnani): Create a benchmark of Map.has() + Map.set(\n        // vs just Map.set()\n        if (!this._$changedProperties.has(name)) {\n            this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `__reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n            (this.__reflectingProperties ??= new Set()).add(name);\n        }\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async __enqueueUpdate() {\n        this.isUpdatePending = true;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this.__updatePromise;\n        }\n        catch (e) {\n            // Refire any previous errors async so they do not disrupt the update\n            // cycle. Errors are refired so developers have a chance to observe\n            // them, and this can be done by implementing\n            // `window.onunhandledrejection`.\n            Promise.reject(e);\n        }\n        const result = this.scheduleUpdate();\n        // If `scheduleUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this.isUpdatePending;\n    }\n    /**\n     * Schedules an element update. You can override this method to change the\n     * timing of updates by returning a Promise. The update will await the\n     * returned Promise, and you should resolve the Promise to allow the update\n     * to proceed. If this method is overridden, `super.scheduleUpdate()`\n     * must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```ts\n     * override protected async scheduleUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.scheduleUpdate();\n     * }\n     * ```\n     * @category updates\n     */\n    scheduleUpdate() {\n        const result = this.performUpdate();\n        if (DEV_MODE &&\n            this.constructor.enabledWarnings.includes('async-perform-update') &&\n            typeof result?.then ===\n                'function') {\n            issueWarning('async-perform-update', `Element ${this.localName} returned a Promise from performUpdate(). ` +\n                `This behavior is deprecated and will be removed in a future ` +\n                `version of ReactiveElement.`);\n        }\n        return result;\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * Call `performUpdate()` to immediately process a pending update. This should\n     * generally not be needed, but it can be done in rare cases when you need to\n     * update synchronously.\n     *\n     * @category updates\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this.isUpdatePending) {\n            return;\n        }\n        debugLogEvent?.({ kind: 'update' });\n        if (!this.hasUpdated) {\n            // Create renderRoot before first update. This occurs in `connectedCallback`\n            // but is done here to support out of tree calls to `enableUpdating`/`performUpdate`.\n            this.renderRoot ??=\n                this.createRenderRoot();\n            if (DEV_MODE) {\n                // Produce warning if any reactive properties on the prototype are\n                // shadowed by class fields. Instance fields set before upgrade are\n                // deleted by this point, so any own property is caused by class field\n                // initialization in the constructor.\n                const ctor = this.constructor;\n                const shadowedProperties = [...ctor.elementProperties.keys()].filter((p) => this.hasOwnProperty(p) && p in getPrototypeOf(this));\n                if (shadowedProperties.length) {\n                    throw new Error(`The following properties on element ${this.localName} will not ` +\n                        `trigger updates as expected because they are set using class ` +\n                        `fields: ${shadowedProperties.join(', ')}. ` +\n                        `Native class fields and some compiled output will overwrite ` +\n                        `accessors used for detecting changes. See ` +\n                        `https://lit.dev/msg/class-field-shadowing ` +\n                        `for more information.`);\n                }\n            }\n            // Mixin instance properties once, if they exist.\n            if (this.__instanceProperties) {\n                // TODO (justinfagnani): should we use the stored value? Could a new value\n                // have been set since we stored the own property value?\n                for (const [p, value] of this.__instanceProperties) {\n                    this[p] = value;\n                }\n                this.__instanceProperties = undefined;\n            }\n            // Trigger initial value reflection and populate the initial\n            // changedProperties map, but only for the case of experimental\n            // decorators on accessors, which will not have already populated the\n            // changedProperties map. We can't know if these accessors had\n            // initializers, so we just set them anyway - a difference from\n            // experimental decorators on fields and standard decorators on\n            // auto-accessors.\n            // For context why experimentalDecorators with auto accessors are handled\n            // specifically also see:\n            // https://github.com/lit/lit/pull/4183#issuecomment-1711959635\n            const elementProperties = this.constructor\n                .elementProperties;\n            if (elementProperties.size > 0) {\n                for (const [p, options] of elementProperties) {\n                    if (options.wrapped === true &&\n                        !this._$changedProperties.has(p) &&\n                        this[p] !== undefined) {\n                        this._$changeProperty(p, this[p], options);\n                    }\n                }\n            }\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._$changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.willUpdate(changedProperties);\n                this.__controllers?.forEach((c) => c.hostUpdate?.());\n                this.update(changedProperties);\n            }\n            else {\n                this.__markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this.__markUpdated();\n            throw e;\n        }\n        // The update is no longer considered pending and further updates are now allowed.\n        if (shouldUpdate) {\n            this._$didUpdate(changedProperties);\n        }\n    }\n    /**\n     * Invoked before `update()` to compute values needed during the update.\n     *\n     * Implement `willUpdate` to compute property values that depend on other\n     * properties and are used in the rest of the update process.\n     *\n     * ```ts\n     * willUpdate(changedProperties) {\n     *   // only need to check changed properties for an expensive computation.\n     *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n     *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n     *   }\n     * }\n     *\n     * render() {\n     *   return html`SHA: ${this.sha}`;\n     * }\n     * ```\n     *\n     * @category updates\n     */\n    willUpdate(_changedProperties) { }\n    // Note, this is an override point for polyfill-support.\n    // @internal\n    _$didUpdate(changedProperties) {\n        this.__controllers?.forEach((c) => c.hostUpdated?.());\n        if (!this.hasUpdated) {\n            this.hasUpdated = true;\n            this.firstUpdated(changedProperties);\n        }\n        this.updated(changedProperties);\n        if (DEV_MODE &&\n            this.isUpdatePending &&\n            this.constructor.enabledWarnings.includes('change-in-update')) {\n            issueWarning('change-in-update', `Element ${this.localName} scheduled an update ` +\n                `(generally because a property was set) ` +\n                `after an update completed, causing a new update to be scheduled. ` +\n                `This is inefficient and should be avoided unless the next update ` +\n                `can only be scheduled as a side effect of the previous update.`);\n        }\n    }\n    __markUpdated() {\n        this._$changedProperties = new Map();\n        this.isUpdatePending = false;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super.getUpdateComplete()`, then any subsequent state.\n     *\n     * @return A promise of a boolean that resolves to true if the update completed\n     *     without triggering another update.\n     * @category updates\n     */\n    get updateComplete() {\n        return this.getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   override async getUpdateComplete() {\n     *     const result = await super.getUpdateComplete();\n     *     await this._myChild.updateComplete;\n     *     return result;\n     *   }\n     * }\n     * ```\n     *\n     * @return A promise of a boolean that resolves to true if the update completed\n     *     without triggering another update.\n     * @category updates\n     */\n    getUpdateComplete() {\n        return this.__updatePromise;\n    }\n    /**\n     * Controls whether or not `update()` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    update(_changedProperties) {\n        // The forEach() expression will only run when when __reflectingProperties is\n        // defined, and it returns undefined, setting __reflectingProperties to\n        // undefined\n        this.__reflectingProperties &&= this.__reflectingProperties.forEach((p) => this.__propertyToAttribute(p, this[p]));\n        this.__markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    updated(_changedProperties) { }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * ```ts\n     * firstUpdated() {\n     *   this.renderRoot.getElementById('my-text-area').focus();\n     * }\n     * ```\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    firstUpdated(_changedProperties) { }\n}\n/**\n * Memoized list of all element styles.\n * Created lazily on user subclasses when finalizing the class.\n * @nocollapse\n * @category styles\n */\nReactiveElement.elementStyles = [];\n/**\n * Options used when calling `attachShadow`. Set this property to customize\n * the options for the shadowRoot; for example, to create a closed\n * shadowRoot: `{mode: 'closed'}`.\n *\n * Note, these options are used in `createRenderRoot`. If this method\n * is customized, options should be respected if possible.\n * @nocollapse\n * @category rendering\n */\nReactiveElement.shadowRootOptions = { mode: 'open' };\n// Assigned here to work around a jscompiler bug with static fields\n// when compiling to ES5.\n// https://github.com/google/closure-compiler/issues/3177\nReactiveElement[JSCompiler_renameProperty('elementProperties', ReactiveElement)] = new Map();\nReactiveElement[JSCompiler_renameProperty('finalized', ReactiveElement)] = new Map();\n// Apply polyfills if available\npolyfillSupport?.({ ReactiveElement });\n// Dev mode warnings...\nif (DEV_MODE) {\n    // Default warning set.\n    ReactiveElement.enabledWarnings = [\n        'change-in-update',\n        'async-perform-update',\n    ];\n    const ensureOwnWarnings = function (ctor) {\n        if (!ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))) {\n            ctor.enabledWarnings = ctor.enabledWarnings.slice();\n        }\n    };\n    ReactiveElement.enableWarning = function (warning) {\n        ensureOwnWarnings(this);\n        if (!this.enabledWarnings.includes(warning)) {\n            this.enabledWarnings.push(warning);\n        }\n    };\n    ReactiveElement.disableWarning = function (warning) {\n        ensureOwnWarnings(this);\n        const i = this.enabledWarnings.indexOf(warning);\n        if (i >= 0) {\n            this.enabledWarnings.splice(i, 1);\n        }\n    };\n}\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('2.0.4');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`);\n}\n//# sourceMappingURL=reactive-element.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/reactive-element.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/lit-element/development/lit-element.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/lit-element/development/lit-element.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LitElement: function() { return /* binding */ LitElement; },\n/* harmony export */   _$LE: function() { return /* binding */ _$LE; }\n/* harmony export */ });\n/* harmony import */ var _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/reactive-element.js\");\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html */ \"./node_modules/@web3modal/siwe/node_modules/lit-html/development/lit-html.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"LitElement\",\"_$LE\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in lit_html__WEBPACK_IMPORTED_MODULE_1__) if([\"default\",\"LitElement\",\"_$LE\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return lit_html__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\n\n\n\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = (prop, _obj) => prop;\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (globalThis.litIssuedWarnings ??= new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nclass LitElement extends _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.ReactiveElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * @category rendering\n         */\n        this.renderOptions = { host: this };\n        this.__childPart = undefined;\n    }\n    /**\n     * @category rendering\n     */\n    createRenderRoot() {\n        const renderRoot = super.createRenderRoot();\n        // When adoptedStyleSheets are shimmed, they are inserted into the\n        // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n        // any styles in Lit content render before adoptedStyleSheets. This is\n        // important so that adoptedStyleSheets have precedence over styles in\n        // the shadowRoot.\n        this.renderOptions.renderBefore ??= renderRoot.firstChild;\n        return renderRoot;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const value = this.render();\n        if (!this.hasUpdated) {\n            this.renderOptions.isConnected = this.isConnected;\n        }\n        super.update(changedProperties);\n        this.__childPart = (0,lit_html__WEBPACK_IMPORTED_MODULE_1__.render)(value, this.renderRoot, this.renderOptions);\n    }\n    /**\n     * Invoked when the component is added to the document's DOM.\n     *\n     * In `connectedCallback()` you should setup tasks that should only occur when\n     * the element is connected to the document. The most common of these is\n     * adding event listeners to nodes external to the element, like a keydown\n     * event handler added to the window.\n     *\n     * ```ts\n     * connectedCallback() {\n     *   super.connectedCallback();\n     *   addEventListener('keydown', this._handleKeydown);\n     * }\n     * ```\n     *\n     * Typically, anything done in `connectedCallback()` should be undone when the\n     * element is disconnected, in `disconnectedCallback()`.\n     *\n     * @category lifecycle\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        this.__childPart?.setConnected(true);\n    }\n    /**\n     * Invoked when the component is removed from the document's DOM.\n     *\n     * This callback is the main signal to the element that it may no longer be\n     * used. `disconnectedCallback()` should ensure that nothing is holding a\n     * reference to the element (such as event listeners added to nodes external\n     * to the element), so that it is free to be garbage collected.\n     *\n     * ```ts\n     * disconnectedCallback() {\n     *   super.disconnectedCallback();\n     *   window.removeEventListener('keydown', this._handleKeydown);\n     * }\n     * ```\n     *\n     * An element may be re-connected after being disconnected.\n     *\n     * @category lifecycle\n     */\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.__childPart?.setConnected(false);\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `ChildPart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     * @category rendering\n     */\n    render() {\n        return lit_html__WEBPACK_IMPORTED_MODULE_1__.noChange;\n    }\n}\n// This property needs to remain unminified.\nLitElement['_$litElement$'] = true;\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See @lit/reactive-element for more information.\n */\nLitElement[JSCompiler_renameProperty('finalized', LitElement)] = true;\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({ LitElement });\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n    ? globalThis.litElementPolyfillSupportDevMode\n    : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({ LitElement });\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nconst _$LE = {\n    _$attributeToProperty: (el, name, value) => {\n        // eslint-disable-next-line\n        el._$attributeToProperty(name, value);\n    },\n    // eslint-disable-next-line\n    _$changedProperties: (el) => el._$changedProperties,\n};\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('4.0.6');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`);\n}\n//# sourceMappingURL=lit-element.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/lit-element/development/lit-element.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/lit-html/development/is-server.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/lit-html/development/is-server.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isServer: function() { return /* binding */ isServer; }\n/* harmony export */ });\n/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * @fileoverview\n *\n * This file exports a boolean const whose value will depend on what environment\n * the module is being imported from.\n */\nconst NODE_MODE = false;\n/**\n * A boolean that will be `true` in server environments like Node, and `false`\n * in browser environments. Note that your server environment or toolchain must\n * support the `\"node\"` export condition for this to be `true`.\n *\n * This can be used when authoring components to change behavior based on\n * whether or not the component is executing in an SSR context.\n */\nconst isServer = NODE_MODE;\n//# sourceMappingURL=is-server.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9saXQtaHRtbC9kZXZlbG9wbWVudC9pcy1zZXJ2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2ViM21vZGFsL3Npd2Uvbm9kZV9tb2R1bGVzL2xpdC1odG1sL2RldmVsb3BtZW50L2lzLXNlcnZlci5qcz80MTM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL1xuLyoqXG4gKiBAZmlsZW92ZXJ2aWV3XG4gKlxuICogVGhpcyBmaWxlIGV4cG9ydHMgYSBib29sZWFuIGNvbnN0IHdob3NlIHZhbHVlIHdpbGwgZGVwZW5kIG9uIHdoYXQgZW52aXJvbm1lbnRcbiAqIHRoZSBtb2R1bGUgaXMgYmVpbmcgaW1wb3J0ZWQgZnJvbS5cbiAqL1xuY29uc3QgTk9ERV9NT0RFID0gZmFsc2U7XG4vKipcbiAqIEEgYm9vbGVhbiB0aGF0IHdpbGwgYmUgYHRydWVgIGluIHNlcnZlciBlbnZpcm9ubWVudHMgbGlrZSBOb2RlLCBhbmQgYGZhbHNlYFxuICogaW4gYnJvd3NlciBlbnZpcm9ubWVudHMuIE5vdGUgdGhhdCB5b3VyIHNlcnZlciBlbnZpcm9ubWVudCBvciB0b29sY2hhaW4gbXVzdFxuICogc3VwcG9ydCB0aGUgYFwibm9kZVwiYCBleHBvcnQgY29uZGl0aW9uIGZvciB0aGlzIHRvIGJlIGB0cnVlYC5cbiAqXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHdoZW4gYXV0aG9yaW5nIGNvbXBvbmVudHMgdG8gY2hhbmdlIGJlaGF2aW9yIGJhc2VkIG9uXG4gKiB3aGV0aGVyIG9yIG5vdCB0aGUgY29tcG9uZW50IGlzIGV4ZWN1dGluZyBpbiBhbiBTU1IgY29udGV4dC5cbiAqL1xuZXhwb3J0IGNvbnN0IGlzU2VydmVyID0gTk9ERV9NT0RFO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtc2VydmVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/lit-html/development/is-server.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/lit-html/development/lit-html.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/lit-html/development/lit-html.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _$LH: function() { return /* binding */ _$LH; },\n/* harmony export */   html: function() { return /* binding */ html; },\n/* harmony export */   noChange: function() { return /* binding */ noChange; },\n/* harmony export */   nothing: function() { return /* binding */ nothing; },\n/* harmony export */   render: function() { return /* binding */ render; },\n/* harmony export */   svg: function() { return /* binding */ svg; }\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n    ? (event) => {\n        const shouldEmit = global\n            .emitLitDebugLogEvents;\n        if (!shouldEmit) {\n            return;\n        }\n        global.dispatchEvent(new CustomEvent('lit-debug', {\n            detail: event,\n        }));\n    }\n    : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\nlet issueWarning;\nif (DEV_MODE) {\n    global.litIssuedWarnings ??= new Set();\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += code\n            ? ` See https://lit.dev/msg/${code} for more information.`\n            : '';\n        if (!global.litIssuedWarnings.has(warning)) {\n            console.warn(warning);\n            global.litIssuedWarnings.add(warning);\n        }\n    };\n    issueWarning('dev-mode', `Lit is in dev mode. Not recommended for production!`);\n}\nconst wrap = ENABLE_SHADYDOM_NOPATCH &&\n    global.ShadyDOM?.inUse &&\n    global.ShadyDOM?.noPatch === true\n    ? global.ShadyDOM.wrap\n    : (node) => node;\nconst trustedTypes = global.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n    ? trustedTypes.createPolicy('lit-html', {\n        createHTML: (s) => s,\n    })\n    : undefined;\nconst identityFunction = (value) => value;\nconst noopSanitizer = (_node, _name, _type) => identityFunction;\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer) => {\n    if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n        return;\n    }\n    if (sanitizerFactoryInternal !== noopSanitizer) {\n        throw new Error(`Attempted to overwrite existing lit-html security policy.` +\n            ` setSanitizeDOMValueFactory should be called at most once.`);\n    }\n    sanitizerFactoryInternal = newSanitizer;\n};\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n    sanitizerFactoryInternal = noopSanitizer;\n};\nconst createSanitizer = (node, name, type) => {\n    return sanitizerFactoryInternal(node, name, type);\n};\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${Math.random().toFixed(9).slice(2)}$`;\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\nconst d = NODE_MODE && global.document === undefined\n    ? {\n        createTreeWalker() {\n            return {};\n        },\n    }\n    : document;\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\nconst isPrimitive = (value) => value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value) => isArray(value) ||\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof value?.[Symbol.iterator] === 'function';\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(`>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`, 'g');\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag = (type) => (strings, ...values) => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n        console.warn('Some template strings are undefined.\\n' +\n            'This is probably caused by illegal octal escape sequences.');\n    }\n    if (DEV_MODE) {\n        // Import static-html.js results in a circular dependency which g3 doesn't\n        // handle. Instead we know that static values must have the field\n        // `_$litStatic$`.\n        if (values.some((val) => val?.['_$litStatic$'])) {\n            issueWarning('', `Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.\\n` +\n                `Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`);\n        }\n    }\n    return {\n        // This property needs to remain unminified.\n        ['_$litType$']: type,\n        strings,\n        values,\n    };\n};\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nconst html = tag(HTML_RESULT);\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nconst svg = tag(SVG_RESULT);\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nconst noChange = Symbol.for('lit-noChange');\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nconst nothing = Symbol.for('lit-nothing');\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap();\nconst walker = d.createTreeWalker(d, 129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */);\nlet sanitizerFactoryInternal = noopSanitizer;\nfunction trustFromTemplateString(tsa, stringFromTSA) {\n    // A security check to prevent spoofing of Lit template results.\n    // In the future, we may be able to replace this with Array.isTemplateObject,\n    // though we might need to make that check inside of the html and svg\n    // functions, because precompiled templates don't come in as\n    // TemplateStringArray objects.\n    if (!Array.isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n        let message = 'invalid template strings array';\n        if (DEV_MODE) {\n            message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n                .trim()\n                .replace(/\\n */g, '\\n');\n        }\n        throw new Error(message);\n    }\n    return policy !== undefined\n        ? policy.createHTML(stringFromTSA)\n        : stringFromTSA;\n}\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (strings, type) => {\n    // Insert makers into the template HTML to represent the position of\n    // bindings. The following code scans the template strings to determine the\n    // syntactic position of the bindings. They can be in text position, where\n    // we insert an HTML comment, attribute value position, where we insert a\n    // sentinel string and re-write the attribute name, or inside a tag where\n    // we insert the sentinel string.\n    const l = strings.length - 1;\n    // Stores the case-sensitive bound attribute names in the order of their\n    // parts. ElementParts are also reflected in this array as undefined\n    // rather than a string, to disambiguate from attribute bindings.\n    const attrNames = [];\n    let html = type === SVG_RESULT ? '<svg>' : '';\n    // When we're inside a raw text tag (not it's text content), the regex\n    // will still be tagRegex so we can find attributes, but will switch to\n    // this regex when the tag ends.\n    let rawTextEndRegex;\n    // The current parsing state, represented as a reference to one of the\n    // regexes\n    let regex = textEndRegex;\n    for (let i = 0; i < l; i++) {\n        const s = strings[i];\n        // The index of the end of the last attribute name. When this is\n        // positive at end of a string, it means we're in an attribute value\n        // position and need to rewrite the attribute name.\n        // We also use a special value of -2 to indicate that we encountered\n        // the end of a string in attribute name position.\n        let attrNameEndIndex = -1;\n        let attrName;\n        let lastIndex = 0;\n        let match;\n        // The conditions in this loop handle the current parse state, and the\n        // assignments to the `regex` variable are the state transitions.\n        while (lastIndex < s.length) {\n            // Make sure we start searching from where we previously left off\n            regex.lastIndex = lastIndex;\n            match = regex.exec(s);\n            if (match === null) {\n                break;\n            }\n            lastIndex = regex.lastIndex;\n            if (regex === textEndRegex) {\n                if (match[COMMENT_START] === '!--') {\n                    regex = commentEndRegex;\n                }\n                else if (match[COMMENT_START] !== undefined) {\n                    // We started a weird comment, like </{\n                    regex = comment2EndRegex;\n                }\n                else if (match[TAG_NAME] !== undefined) {\n                    if (rawTextElement.test(match[TAG_NAME])) {\n                        // Record if we encounter a raw-text element. We'll switch to\n                        // this regex at the end of the tag.\n                        rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n                    }\n                    regex = tagEndRegex;\n                }\n                else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n                    if (DEV_MODE) {\n                        throw new Error('Bindings in tag names are not supported. Please use static templates instead. ' +\n                            'See https://lit.dev/docs/templates/expressions/#static-expressions');\n                    }\n                    regex = tagEndRegex;\n                }\n            }\n            else if (regex === tagEndRegex) {\n                if (match[ENTIRE_MATCH] === '>') {\n                    // End of a tag. If we had started a raw-text element, use that\n                    // regex\n                    regex = rawTextEndRegex ?? textEndRegex;\n                    // We may be ending an unquoted attribute value, so make sure we\n                    // clear any pending attrNameEndIndex\n                    attrNameEndIndex = -1;\n                }\n                else if (match[ATTRIBUTE_NAME] === undefined) {\n                    // Attribute name position\n                    attrNameEndIndex = -2;\n                }\n                else {\n                    attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n                    attrName = match[ATTRIBUTE_NAME];\n                    regex =\n                        match[QUOTE_CHAR] === undefined\n                            ? tagEndRegex\n                            : match[QUOTE_CHAR] === '\"'\n                                ? doubleQuoteAttrEndRegex\n                                : singleQuoteAttrEndRegex;\n                }\n            }\n            else if (regex === doubleQuoteAttrEndRegex ||\n                regex === singleQuoteAttrEndRegex) {\n                regex = tagEndRegex;\n            }\n            else if (regex === commentEndRegex || regex === comment2EndRegex) {\n                regex = textEndRegex;\n            }\n            else {\n                // Not one of the five state regexes, so it must be the dynamically\n                // created raw text regex and we're at the close of that element.\n                regex = tagEndRegex;\n                rawTextEndRegex = undefined;\n            }\n        }\n        if (DEV_MODE) {\n            // If we have a attrNameEndIndex, which indicates that we should\n            // rewrite the attribute name, assert that we're in a valid attribute\n            // position - either in a tag, or a quoted attribute value.\n            console.assert(attrNameEndIndex === -1 ||\n                regex === tagEndRegex ||\n                regex === singleQuoteAttrEndRegex ||\n                regex === doubleQuoteAttrEndRegex, 'unexpected parse state B');\n        }\n        // We have four cases:\n        //  1. We're in text position, and not in a raw text element\n        //     (regex === textEndRegex): insert a comment marker.\n        //  2. We have a non-negative attrNameEndIndex which means we need to\n        //     rewrite the attribute name to add a bound attribute suffix.\n        //  3. We're at the non-first binding in a multi-binding attribute, use a\n        //     plain marker.\n        //  4. We're somewhere else inside the tag. If we're in attribute name\n        //     position (attrNameEndIndex === -2), add a sequential suffix to\n        //     generate a unique attribute name.\n        // Detect a binding next to self-closing tag end and insert a space to\n        // separate the marker from the tag end:\n        const end = regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n        html +=\n            regex === textEndRegex\n                ? s + nodeMarker\n                : attrNameEndIndex >= 0\n                    ? (attrNames.push(attrName),\n                        s.slice(0, attrNameEndIndex) +\n                            boundAttributeSuffix +\n                            s.slice(attrNameEndIndex)) +\n                        marker +\n                        end\n                    : s + marker + (attrNameEndIndex === -2 ? i : end);\n    }\n    const htmlResult = html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n    // Returned as an array for terseness\n    return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\nclass Template {\n    constructor(\n    // This property needs to remain unminified.\n    { strings, ['_$litType$']: type }, options) {\n        this.parts = [];\n        let node;\n        let nodeIndex = 0;\n        let attrNameIndex = 0;\n        const partCount = strings.length - 1;\n        const parts = this.parts;\n        // Create template element\n        const [html, attrNames] = getTemplateHtml(strings, type);\n        this.el = Template.createElement(html, options);\n        walker.currentNode = this.el.content;\n        // Re-parent SVG nodes into template root\n        if (type === SVG_RESULT) {\n            const svgElement = this.el.content.firstChild;\n            svgElement.replaceWith(...svgElement.childNodes);\n        }\n        // Walk the template to find binding markers and create TemplateParts\n        while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n            if (node.nodeType === 1) {\n                if (DEV_MODE) {\n                    const tag = node.localName;\n                    // Warn if `textarea` includes an expression and throw if `template`\n                    // does since these are not supported. We do this by checking\n                    // innerHTML for anything that looks like a marker. This catches\n                    // cases like bindings in textarea there markers turn into text nodes.\n                    if (/^(?:textarea|template)$/i.test(tag) &&\n                        node.innerHTML.includes(marker)) {\n                        const m = `Expressions are not supported inside \\`${tag}\\` ` +\n                            `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n                            `information.`;\n                        if (tag === 'template') {\n                            throw new Error(m);\n                        }\n                        else\n                            issueWarning('', m);\n                    }\n                }\n                // TODO (justinfagnani): for attempted dynamic tag names, we don't\n                // increment the bindingIndex, and it'll be off by 1 in the element\n                // and off by two after it.\n                if (node.hasAttributes()) {\n                    for (const name of node.getAttributeNames()) {\n                        if (name.endsWith(boundAttributeSuffix)) {\n                            const realName = attrNames[attrNameIndex++];\n                            const value = node.getAttribute(name);\n                            const statics = value.split(marker);\n                            const m = /([.?@])?(.*)/.exec(realName);\n                            parts.push({\n                                type: ATTRIBUTE_PART,\n                                index: nodeIndex,\n                                name: m[2],\n                                strings: statics,\n                                ctor: m[1] === '.'\n                                    ? PropertyPart\n                                    : m[1] === '?'\n                                        ? BooleanAttributePart\n                                        : m[1] === '@'\n                                            ? EventPart\n                                            : AttributePart,\n                            });\n                            node.removeAttribute(name);\n                        }\n                        else if (name.startsWith(marker)) {\n                            parts.push({\n                                type: ELEMENT_PART,\n                                index: nodeIndex,\n                            });\n                            node.removeAttribute(name);\n                        }\n                    }\n                }\n                // TODO (justinfagnani): benchmark the regex against testing for each\n                // of the 3 raw text element names.\n                if (rawTextElement.test(node.tagName)) {\n                    // For raw text elements we need to split the text content on\n                    // markers, create a Text node for each segment, and create\n                    // a TemplatePart for each marker.\n                    const strings = node.textContent.split(marker);\n                    const lastIndex = strings.length - 1;\n                    if (lastIndex > 0) {\n                        node.textContent = trustedTypes\n                            ? trustedTypes.emptyScript\n                            : '';\n                        // Generate a new text node for each literal section\n                        // These nodes are also used as the markers for node parts\n                        // We can't use empty text nodes as markers because they're\n                        // normalized when cloning in IE (could simplify when\n                        // IE is no longer supported)\n                        for (let i = 0; i < lastIndex; i++) {\n                            node.append(strings[i], createMarker());\n                            // Walk past the marker node we just added\n                            walker.nextNode();\n                            parts.push({ type: CHILD_PART, index: ++nodeIndex });\n                        }\n                        // Note because this marker is added after the walker's current\n                        // node, it will be walked to in the outer loop (and ignored), so\n                        // we don't need to adjust nodeIndex here\n                        node.append(strings[lastIndex], createMarker());\n                    }\n                }\n            }\n            else if (node.nodeType === 8) {\n                const data = node.data;\n                if (data === markerMatch) {\n                    parts.push({ type: CHILD_PART, index: nodeIndex });\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        parts.push({ type: COMMENT_PART, index: nodeIndex });\n                        // Move to the end of the match\n                        i += marker.length - 1;\n                    }\n                }\n            }\n            nodeIndex++;\n        }\n        if (DEV_MODE) {\n            // If there was a duplicate attribute on a tag, then when the tag is\n            // parsed into an element the attribute gets de-duplicated. We can detect\n            // this mismatch if we haven't precisely consumed every attribute name\n            // when preparing the template. This works because `attrNames` is built\n            // from the template string and `attrNameIndex` comes from processing the\n            // resulting DOM.\n            if (attrNames.length !== attrNameIndex) {\n                throw new Error(`Detected duplicate attribute bindings. This occurs if your template ` +\n                    `has duplicate attributes on an element tag. For example ` +\n                    `\"<input ?disabled=\\${true} ?disabled=\\${false}>\" contains a ` +\n                    `duplicate \"disabled\" attribute. The error was detected in ` +\n                    `the following template: \\n` +\n                    '`' +\n                    strings.join('${...}') +\n                    '`');\n            }\n        }\n        // We could set walker.currentNode to another node here to prevent a memory\n        // leak, but every time we prepare a template, we immediately render it\n        // and re-use the walker in new TemplateInstance._clone().\n        debugLogEvent &&\n            debugLogEvent({\n                kind: 'template prep',\n                template: this,\n                clonableTemplate: this.el,\n                parts: this.parts,\n                strings,\n            });\n    }\n    // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n    /** @nocollapse */\n    static createElement(html, _options) {\n        const el = d.createElement('template');\n        el.innerHTML = html;\n        return el;\n    }\n}\nfunction resolveDirective(part, value, parent = part, attributeIndex) {\n    // Bail early if the value is explicitly noChange. Note, this means any\n    // nested directive is still attached and is not run.\n    if (value === noChange) {\n        return value;\n    }\n    let currentDirective = attributeIndex !== undefined\n        ? parent.__directives?.[attributeIndex]\n        : parent.__directive;\n    const nextDirectiveConstructor = isPrimitive(value)\n        ? undefined\n        : // This property needs to remain unminified.\n            value['_$litDirective$'];\n    if (currentDirective?.constructor !== nextDirectiveConstructor) {\n        // This property needs to remain unminified.\n        currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n        if (nextDirectiveConstructor === undefined) {\n            currentDirective = undefined;\n        }\n        else {\n            currentDirective = new nextDirectiveConstructor(part);\n            currentDirective._$initialize(part, parent, attributeIndex);\n        }\n        if (attributeIndex !== undefined) {\n            (parent.__directives ??= [])[attributeIndex] =\n                currentDirective;\n        }\n        else {\n            parent.__directive = currentDirective;\n        }\n    }\n    if (currentDirective !== undefined) {\n        value = resolveDirective(part, currentDirective._$resolve(part, value.values), currentDirective, attributeIndex);\n    }\n    return value;\n}\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance {\n    constructor(template, parent) {\n        this._$parts = [];\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this._$template = template;\n        this._$parent = parent;\n    }\n    // Called by ChildPart parentNode getter\n    get parentNode() {\n        return this._$parent.parentNode;\n    }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    // This method is separate from the constructor because we need to return a\n    // DocumentFragment and we don't want to hold onto it with an instance field.\n    _clone(options) {\n        const { el: { content }, parts: parts, } = this._$template;\n        const fragment = (options?.creationScope ?? d).importNode(content, true);\n        walker.currentNode = fragment;\n        let node = walker.nextNode();\n        let nodeIndex = 0;\n        let partIndex = 0;\n        let templatePart = parts[0];\n        while (templatePart !== undefined) {\n            if (nodeIndex === templatePart.index) {\n                let part;\n                if (templatePart.type === CHILD_PART) {\n                    part = new ChildPart(node, node.nextSibling, this, options);\n                }\n                else if (templatePart.type === ATTRIBUTE_PART) {\n                    part = new templatePart.ctor(node, templatePart.name, templatePart.strings, this, options);\n                }\n                else if (templatePart.type === ELEMENT_PART) {\n                    part = new ElementPart(node, this, options);\n                }\n                this._$parts.push(part);\n                templatePart = parts[++partIndex];\n            }\n            if (nodeIndex !== templatePart?.index) {\n                node = walker.nextNode();\n                nodeIndex++;\n            }\n        }\n        // We need to set the currentNode away from the cloned tree so that we\n        // don't hold onto the tree even if the tree is detached and should be\n        // freed.\n        walker.currentNode = d;\n        return fragment;\n    }\n    _update(values) {\n        let i = 0;\n        for (const part of this._$parts) {\n            if (part !== undefined) {\n                debugLogEvent &&\n                    debugLogEvent({\n                        kind: 'set part',\n                        part,\n                        value: values[i],\n                        valueIndex: i,\n                        values,\n                        templateInstance: this,\n                    });\n                if (part.strings !== undefined) {\n                    part._$setValue(values, part, i);\n                    // The number of values the part consumes is part.strings.length - 1\n                    // since values are in between template spans. We increment i by 1\n                    // later in the loop, so increment it by part.strings.length - 2 here\n                    i += part.strings.length - 2;\n                }\n                else {\n                    part._$setValue(values[i]);\n                }\n            }\n            i++;\n        }\n    }\n}\nclass ChildPart {\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        // ChildParts that are not at the root should always be created with a\n        // parent; only RootChildNode's won't, so they return the local isConnected\n        // state\n        return this._$parent?._$isConnected ?? this.__isConnected;\n    }\n    constructor(startNode, endNode, parent, options) {\n        this.type = CHILD_PART;\n        this._$committedValue = nothing;\n        // The following fields will be patched onto ChildParts when required by\n        // AsyncDirective\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this._$startNode = startNode;\n        this._$endNode = endNode;\n        this._$parent = parent;\n        this.options = options;\n        // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n        // no _$parent); the value on a non-root-part is \"don't care\", but checking\n        // for parent would be more code\n        this.__isConnected = options?.isConnected ?? true;\n        if (ENABLE_EXTRA_SECURITY_HOOKS) {\n            // Explicitly initialize for consistent class shape.\n            this._textSanitizer = undefined;\n        }\n    }\n    /**\n     * The parent node into which the part renders its content.\n     *\n     * A ChildPart's content consists of a range of adjacent child nodes of\n     * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n     * `.endNode`).\n     *\n     * - If both `.startNode` and `.endNode` are non-null, then the part's content\n     * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n     *\n     * - If `.startNode` is non-null but `.endNode` is null, then the part's\n     * content consists of all siblings following `.startNode`, up to and\n     * including the last child of `.parentNode`. If `.endNode` is non-null, then\n     * `.startNode` will always be non-null.\n     *\n     * - If both `.endNode` and `.startNode` are null, then the part's content\n     * consists of all child nodes of `.parentNode`.\n     */\n    get parentNode() {\n        let parentNode = wrap(this._$startNode).parentNode;\n        const parent = this._$parent;\n        if (parent !== undefined &&\n            parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */) {\n            // If the parentNode is a DocumentFragment, it may be because the DOM is\n            // still in the cloned fragment during initial render; if so, get the real\n            // parentNode the part will be committed into by asking the parent.\n            parentNode = parent.parentNode;\n        }\n        return parentNode;\n    }\n    /**\n     * The part's leading marker node, if any. See `.parentNode` for more\n     * information.\n     */\n    get startNode() {\n        return this._$startNode;\n    }\n    /**\n     * The part's trailing marker node, if any. See `.parentNode` for more\n     * information.\n     */\n    get endNode() {\n        return this._$endNode;\n    }\n    _$setValue(value, directiveParent = this) {\n        if (DEV_MODE && this.parentNode === null) {\n            throw new Error(`This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`);\n        }\n        value = resolveDirective(this, value, directiveParent);\n        if (isPrimitive(value)) {\n            // Non-rendering child values. It's important that these do not render\n            // empty text nodes to avoid issues with preventing default <slot>\n            // fallback content.\n            if (value === nothing || value == null || value === '') {\n                if (this._$committedValue !== nothing) {\n                    debugLogEvent &&\n                        debugLogEvent({\n                            kind: 'commit nothing to child',\n                            start: this._$startNode,\n                            end: this._$endNode,\n                            parent: this._$parent,\n                            options: this.options,\n                        });\n                    this._$clear();\n                }\n                this._$committedValue = nothing;\n            }\n            else if (value !== this._$committedValue && value !== noChange) {\n                this._commitText(value);\n            }\n            // This property needs to remain unminified.\n        }\n        else if (value['_$litType$'] !== undefined) {\n            this._commitTemplateResult(value);\n        }\n        else if (value.nodeType !== undefined) {\n            if (DEV_MODE && this.options?.host === value) {\n                this._commitText(`[probable mistake: rendered a template's host in itself ` +\n                    `(commonly caused by writing \\${this} in a template]`);\n                console.warn(`Attempted to render the template host`, value, `inside itself. This is almost always a mistake, and in dev mode `, `we render some warning text. In production however, we'll `, `render it, which will usually result in an error, and sometimes `, `in the element disappearing from the DOM.`);\n                return;\n            }\n            this._commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this._commitIterable(value);\n        }\n        else {\n            // Fallback, will render the string representation\n            this._commitText(value);\n        }\n    }\n    _insert(node) {\n        return wrap(wrap(this._$startNode).parentNode).insertBefore(node, this._$endNode);\n    }\n    _commitNode(value) {\n        if (this._$committedValue !== value) {\n            this._$clear();\n            if (ENABLE_EXTRA_SECURITY_HOOKS &&\n                sanitizerFactoryInternal !== noopSanitizer) {\n                const parentNodeName = this._$startNode.parentNode?.nodeName;\n                if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n                    let message = 'Forbidden';\n                    if (DEV_MODE) {\n                        if (parentNodeName === 'STYLE') {\n                            message =\n                                `Lit does not support binding inside style nodes. ` +\n                                    `This is a security risk, as style injection attacks can ` +\n                                    `exfiltrate data and spoof UIs. ` +\n                                    `Consider instead using css\\`...\\` literals ` +\n                                    `to compose styles, and make do dynamic styling with ` +\n                                    `css custom properties, ::parts, <slot>s, ` +\n                                    `and by mutating the DOM rather than stylesheets.`;\n                        }\n                        else {\n                            message =\n                                `Lit does not support binding inside script nodes. ` +\n                                    `This is a security risk, as it could allow arbitrary ` +\n                                    `code execution.`;\n                        }\n                    }\n                    throw new Error(message);\n                }\n            }\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'commit node',\n                    start: this._$startNode,\n                    parent: this._$parent,\n                    value: value,\n                    options: this.options,\n                });\n            this._$committedValue = this._insert(value);\n        }\n    }\n    _commitText(value) {\n        // If the committed value is a primitive it means we called _commitText on\n        // the previous render, and we know that this._$startNode.nextSibling is a\n        // Text node. We can now just replace the text content (.data) of the node.\n        if (this._$committedValue !== nothing &&\n            isPrimitive(this._$committedValue)) {\n            const node = wrap(this._$startNode).nextSibling;\n            if (ENABLE_EXTRA_SECURITY_HOOKS) {\n                if (this._textSanitizer === undefined) {\n                    this._textSanitizer = createSanitizer(node, 'data', 'property');\n                }\n                value = this._textSanitizer(value);\n            }\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'commit text',\n                    node,\n                    value,\n                    options: this.options,\n                });\n            node.data = value;\n        }\n        else {\n            if (ENABLE_EXTRA_SECURITY_HOOKS) {\n                const textNode = d.createTextNode('');\n                this._commitNode(textNode);\n                // When setting text content, for security purposes it matters a lot\n                // what the parent is. For example, <style> and <script> need to be\n                // handled with care, while <span> does not. So first we need to put a\n                // text node into the document, then we can sanitize its content.\n                if (this._textSanitizer === undefined) {\n                    this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n                }\n                value = this._textSanitizer(value);\n                debugLogEvent &&\n                    debugLogEvent({\n                        kind: 'commit text',\n                        node: textNode,\n                        value,\n                        options: this.options,\n                    });\n                textNode.data = value;\n            }\n            else {\n                this._commitNode(d.createTextNode(value));\n                debugLogEvent &&\n                    debugLogEvent({\n                        kind: 'commit text',\n                        node: wrap(this._$startNode).nextSibling,\n                        value,\n                        options: this.options,\n                    });\n            }\n        }\n        this._$committedValue = value;\n    }\n    _commitTemplateResult(result) {\n        // This property needs to remain unminified.\n        const { values, ['_$litType$']: type } = result;\n        // If $litType$ is a number, result is a plain TemplateResult and we get\n        // the template from the template cache. If not, result is a\n        // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n        // to create the <template> element the first time we see it.\n        const template = typeof type === 'number'\n            ? this._$getTemplate(result)\n            : (type.el === undefined &&\n                (type.el = Template.createElement(trustFromTemplateString(type.h, type.h[0]), this.options)),\n                type);\n        if (this._$committedValue?._$template === template) {\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'template updating',\n                    template,\n                    instance: this._$committedValue,\n                    parts: this._$committedValue._$parts,\n                    options: this.options,\n                    values,\n                });\n            this._$committedValue._update(values);\n        }\n        else {\n            const instance = new TemplateInstance(template, this);\n            const fragment = instance._clone(this.options);\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'template instantiated',\n                    template,\n                    instance,\n                    parts: instance._$parts,\n                    options: this.options,\n                    fragment,\n                    values,\n                });\n            instance._update(values);\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'template instantiated and updated',\n                    template,\n                    instance,\n                    parts: instance._$parts,\n                    options: this.options,\n                    fragment,\n                    values,\n                });\n            this._commitNode(fragment);\n            this._$committedValue = instance;\n        }\n    }\n    // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n    /** @internal */\n    _$getTemplate(result) {\n        let template = templateCache.get(result.strings);\n        if (template === undefined) {\n            templateCache.set(result.strings, (template = new Template(result)));\n        }\n        return template;\n    }\n    _commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If value is an array, then the previous render was of an\n        // iterable and value will contain the ChildParts from the previous\n        // render. If value is not an array, clear this part and make a new\n        // array for ChildParts.\n        if (!isArray(this._$committedValue)) {\n            this._$committedValue = [];\n            this._$clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this._$committedValue;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            if (partIndex === itemParts.length) {\n                // If no existing part, create a new one\n                // TODO (justinfagnani): test perf impact of always creating two parts\n                // instead of sharing parts between nodes\n                // https://github.com/lit/lit/issues/1266\n                itemParts.push((itemPart = new ChildPart(this._insert(createMarker()), this._insert(createMarker()), this, this.options)));\n            }\n            else {\n                // Reuse an existing part\n                itemPart = itemParts[partIndex];\n            }\n            itemPart._$setValue(item);\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // itemParts always have end nodes\n            this._$clear(itemPart && wrap(itemPart._$endNode).nextSibling, partIndex);\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n        }\n    }\n    /**\n     * Removes the nodes contained within this Part from the DOM.\n     *\n     * @param start Start node to clear from, for clearing a subset of the part's\n     *     DOM (used when truncating iterables)\n     * @param from  When `start` is specified, the index within the iterable from\n     *     which ChildParts are being removed, used for disconnecting directives in\n     *     those Parts.\n     *\n     * @internal\n     */\n    _$clear(start = wrap(this._$startNode).nextSibling, from) {\n        this._$notifyConnectionChanged?.(false, true, from);\n        while (start && start !== this._$endNode) {\n            const n = wrap(start).nextSibling;\n            wrap(start).remove();\n            start = n;\n        }\n    }\n    /**\n     * Implementation of RootPart's `isConnected`. Note that this metod\n     * should only be called on `RootPart`s (the `ChildPart` returned from a\n     * top-level `render()` call). It has no effect on non-root ChildParts.\n     * @param isConnected Whether to set\n     * @internal\n     */\n    setConnected(isConnected) {\n        if (this._$parent === undefined) {\n            this.__isConnected = isConnected;\n            this._$notifyConnectionChanged?.(isConnected);\n        }\n        else if (DEV_MODE) {\n            throw new Error('part.setConnected() may only be called on a ' +\n                'RootPart returned from render().');\n        }\n    }\n}\nclass AttributePart {\n    get tagName() {\n        return this.element.tagName;\n    }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    constructor(element, name, strings, parent, options) {\n        this.type = ATTRIBUTE_PART;\n        /** @internal */\n        this._$committedValue = nothing;\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this.element = element;\n        this.name = name;\n        this._$parent = parent;\n        this.options = options;\n        if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n            this._$committedValue = new Array(strings.length - 1).fill(new String());\n            this.strings = strings;\n        }\n        else {\n            this._$committedValue = nothing;\n        }\n        if (ENABLE_EXTRA_SECURITY_HOOKS) {\n            this._sanitizer = undefined;\n        }\n    }\n    /**\n     * Sets the value of this part by resolving the value from possibly multiple\n     * values and static strings and committing it to the DOM.\n     * If this part is single-valued, `this._strings` will be undefined, and the\n     * method will be called with a single value argument. If this part is\n     * multi-value, `this._strings` will be defined, and the method is called\n     * with the value array of the part's owning TemplateInstance, and an offset\n     * into the value array from which the values should be read.\n     * This method is overloaded this way to eliminate short-lived array slices\n     * of the template instance values, and allow a fast-path for single-valued\n     * parts.\n     *\n     * @param value The part value, or an array of values for multi-valued parts\n     * @param valueIndex the index to start reading values from. `undefined` for\n     *   single-valued parts\n     * @param noCommit causes the part to not commit its value to the DOM. Used\n     *   in hydration to prime attribute parts with their first-rendered value,\n     *   but not set the attribute, and in SSR to no-op the DOM operation and\n     *   capture the value for serialization.\n     *\n     * @internal\n     */\n    _$setValue(value, directiveParent = this, valueIndex, noCommit) {\n        const strings = this.strings;\n        // Whether any of the values has changed, for dirty-checking\n        let change = false;\n        if (strings === undefined) {\n            // Single-value binding case\n            value = resolveDirective(this, value, directiveParent, 0);\n            change =\n                !isPrimitive(value) ||\n                    (value !== this._$committedValue && value !== noChange);\n            if (change) {\n                this._$committedValue = value;\n            }\n        }\n        else {\n            // Interpolation case\n            const values = value;\n            value = strings[0];\n            let i, v;\n            for (i = 0; i < strings.length - 1; i++) {\n                v = resolveDirective(this, values[valueIndex + i], directiveParent, i);\n                if (v === noChange) {\n                    // If the user-provided value is `noChange`, use the previous value\n                    v = this._$committedValue[i];\n                }\n                change ||=\n                    !isPrimitive(v) || v !== this._$committedValue[i];\n                if (v === nothing) {\n                    value = nothing;\n                }\n                else if (value !== nothing) {\n                    value += (v ?? '') + strings[i + 1];\n                }\n                // We always record each value, even if one is `nothing`, for future\n                // change detection.\n                this._$committedValue[i] = v;\n            }\n        }\n        if (change && !noCommit) {\n            this._commitValue(value);\n        }\n    }\n    /** @internal */\n    _commitValue(value) {\n        if (value === nothing) {\n            wrap(this.element).removeAttribute(this.name);\n        }\n        else {\n            if (ENABLE_EXTRA_SECURITY_HOOKS) {\n                if (this._sanitizer === undefined) {\n                    this._sanitizer = sanitizerFactoryInternal(this.element, this.name, 'attribute');\n                }\n                value = this._sanitizer(value ?? '');\n            }\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'commit attribute',\n                    element: this.element,\n                    name: this.name,\n                    value,\n                    options: this.options,\n                });\n            wrap(this.element).setAttribute(this.name, (value ?? ''));\n        }\n    }\n}\nclass PropertyPart extends AttributePart {\n    constructor() {\n        super(...arguments);\n        this.type = PROPERTY_PART;\n    }\n    /** @internal */\n    _commitValue(value) {\n        if (ENABLE_EXTRA_SECURITY_HOOKS) {\n            if (this._sanitizer === undefined) {\n                this._sanitizer = sanitizerFactoryInternal(this.element, this.name, 'property');\n            }\n            value = this._sanitizer(value);\n        }\n        debugLogEvent &&\n            debugLogEvent({\n                kind: 'commit property',\n                element: this.element,\n                name: this.name,\n                value,\n                options: this.options,\n            });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.element[this.name] = value === nothing ? undefined : value;\n    }\n}\nclass BooleanAttributePart extends AttributePart {\n    constructor() {\n        super(...arguments);\n        this.type = BOOLEAN_ATTRIBUTE_PART;\n    }\n    /** @internal */\n    _commitValue(value) {\n        debugLogEvent &&\n            debugLogEvent({\n                kind: 'commit boolean attribute',\n                element: this.element,\n                name: this.name,\n                value: !!(value && value !== nothing),\n                options: this.options,\n            });\n        wrap(this.element).toggleAttribute(this.name, !!value && value !== nothing);\n    }\n}\nclass EventPart extends AttributePart {\n    constructor(element, name, strings, parent, options) {\n        super(element, name, strings, parent, options);\n        this.type = EVENT_PART;\n        if (DEV_MODE && this.strings !== undefined) {\n            throw new Error(`A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n                'invalid content. Event listeners in templates must have exactly ' +\n                'one expression and no surrounding text.');\n        }\n    }\n    // EventPart does not use the base _$setValue/_resolveValue implementation\n    // since the dirty checking is more complex\n    /** @internal */\n    _$setValue(newListener, directiveParent = this) {\n        newListener =\n            resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n        if (newListener === noChange) {\n            return;\n        }\n        const oldListener = this._$committedValue;\n        // If the new value is nothing or any options change we have to remove the\n        // part as a listener.\n        const shouldRemoveListener = (newListener === nothing && oldListener !== nothing) ||\n            newListener.capture !==\n                oldListener.capture ||\n            newListener.once !==\n                oldListener.once ||\n            newListener.passive !==\n                oldListener.passive;\n        // If the new value is not nothing and we removed the listener, we have\n        // to add the part as a listener.\n        const shouldAddListener = newListener !== nothing &&\n            (oldListener === nothing || shouldRemoveListener);\n        debugLogEvent &&\n            debugLogEvent({\n                kind: 'commit event listener',\n                element: this.element,\n                name: this.name,\n                value: newListener,\n                options: this.options,\n                removeListener: shouldRemoveListener,\n                addListener: shouldAddListener,\n                oldListener,\n            });\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.name, this, oldListener);\n        }\n        if (shouldAddListener) {\n            // Beware: IE11 and Chrome 41 don't like using the listener as the\n            // options object. Figure out how to deal w/ this in IE11 - maybe\n            // patch addEventListener?\n            this.element.addEventListener(this.name, this, newListener);\n        }\n        this._$committedValue = newListener;\n    }\n    handleEvent(event) {\n        if (typeof this._$committedValue === 'function') {\n            this._$committedValue.call(this.options?.host ?? this.element, event);\n        }\n        else {\n            this._$committedValue.handleEvent(event);\n        }\n    }\n}\nclass ElementPart {\n    constructor(element, parent, options) {\n        this.element = element;\n        this.type = ELEMENT_PART;\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this._$parent = parent;\n        this.options = options;\n    }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    _$setValue(value) {\n        debugLogEvent &&\n            debugLogEvent({\n                kind: 'commit to element binding',\n                element: this.element,\n                value,\n                options: this.options,\n            });\n        resolveDirective(this, value);\n    }\n}\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nconst _$LH = {\n    // Used in lit-ssr\n    _boundAttributeSuffix: boundAttributeSuffix,\n    _marker: marker,\n    _markerMatch: markerMatch,\n    _HTML_RESULT: HTML_RESULT,\n    _getTemplateHtml: getTemplateHtml,\n    // Used in tests and private-ssr-support\n    _TemplateInstance: TemplateInstance,\n    _isIterable: isIterable,\n    _resolveDirective: resolveDirective,\n    _ChildPart: ChildPart,\n    _AttributePart: AttributePart,\n    _BooleanAttributePart: BooleanAttributePart,\n    _EventPart: EventPart,\n    _PropertyPart: PropertyPart,\n    _ElementPart: ElementPart,\n};\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n    ? global.litHtmlPolyfillSupportDevMode\n    : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('3.1.4');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. ` +\n        `Loading multiple versions is not recommended.`);\n}\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nconst render = (value, container, options) => {\n    if (DEV_MODE && container == null) {\n        // Give a clearer error message than\n        //     Uncaught TypeError: Cannot read properties of null (reading\n        //     '_$litPart$')\n        // which reads like an internal Lit error.\n        throw new TypeError(`The container to render into may not be ${container}`);\n    }\n    const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n    const partOwnerNode = options?.renderBefore ?? container;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let part = partOwnerNode['_$litPart$'];\n    debugLogEvent &&\n        debugLogEvent({\n            kind: 'begin render',\n            id: renderId,\n            value,\n            container,\n            options,\n            part,\n        });\n    if (part === undefined) {\n        const endNode = options?.renderBefore ?? null;\n        // This property needs to remain unminified.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        partOwnerNode['_$litPart$'] = part = new ChildPart(container.insertBefore(createMarker(), endNode), endNode, undefined, options ?? {});\n    }\n    part._$setValue(value);\n    debugLogEvent &&\n        debugLogEvent({\n            kind: 'end render',\n            id: renderId,\n            value,\n            container,\n            options,\n            part,\n        });\n    return part;\n};\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n    render.setSanitizer = setSanitizer;\n    render.createSanitizer = createSanitizer;\n    if (DEV_MODE) {\n        render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n            _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n    }\n}\n//# sourceMappingURL=lit-html.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/lit-html/development/lit-html.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/lit/decorators.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/lit/decorators.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lit_reactive_element_decorators_custom_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element/decorators/custom-element.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/custom-element.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lit_reactive_element_decorators_custom_element_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lit_reactive_element_decorators_custom_element_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lit_reactive_element_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lit/reactive-element/decorators/property.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/property.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lit_reactive_element_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lit_reactive_element_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lit_reactive_element_decorators_state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lit/reactive-element/decorators/state.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/state.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lit_reactive_element_decorators_state_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lit_reactive_element_decorators_state_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lit_reactive_element_decorators_event_options_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @lit/reactive-element/decorators/event-options.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/event-options.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lit_reactive_element_decorators_event_options_js__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lit_reactive_element_decorators_event_options_js__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lit_reactive_element_decorators_query_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @lit/reactive-element/decorators/query.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lit_reactive_element_decorators_query_js__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lit_reactive_element_decorators_query_js__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lit_reactive_element_decorators_query_all_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-all.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-all.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lit_reactive_element_decorators_query_all_js__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lit_reactive_element_decorators_query_all_js__WEBPACK_IMPORTED_MODULE_5__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lit_reactive_element_decorators_query_async_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-async.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-async.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lit_reactive_element_decorators_query_async_js__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lit_reactive_element_decorators_query_async_js__WEBPACK_IMPORTED_MODULE_6__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lit_reactive_element_decorators_query_assigned_elements_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-assigned-elements.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-assigned-elements.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lit_reactive_element_decorators_query_assigned_elements_js__WEBPACK_IMPORTED_MODULE_7__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lit_reactive_element_decorators_query_assigned_elements_js__WEBPACK_IMPORTED_MODULE_7__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lit_reactive_element_decorators_query_assigned_nodes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @lit/reactive-element/decorators/query-assigned-nodes.js */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/decorators/query-assigned-nodes.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lit_reactive_element_decorators_query_assigned_nodes_js__WEBPACK_IMPORTED_MODULE_8__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lit_reactive_element_decorators_query_assigned_nodes_js__WEBPACK_IMPORTED_MODULE_8__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceMappingURL=decorators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9saXQvZGVjb3JhdG9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThpQjtBQUM5aUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvc2l3ZS9ub2RlX21vZHVsZXMvbGl0L2RlY29yYXRvcnMuanM/ZWZmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQqZnJvbVwiQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RlY29yYXRvcnMvY3VzdG9tLWVsZW1lbnQuanNcIjtleHBvcnQqZnJvbVwiQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RlY29yYXRvcnMvcHJvcGVydHkuanNcIjtleHBvcnQqZnJvbVwiQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RlY29yYXRvcnMvc3RhdGUuanNcIjtleHBvcnQqZnJvbVwiQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RlY29yYXRvcnMvZXZlbnQtb3B0aW9ucy5qc1wiO2V4cG9ydCpmcm9tXCJAbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGVjb3JhdG9ycy9xdWVyeS5qc1wiO2V4cG9ydCpmcm9tXCJAbGl0L3JlYWN0aXZlLWVsZW1lbnQvZGVjb3JhdG9ycy9xdWVyeS1hbGwuanNcIjtleHBvcnQqZnJvbVwiQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RlY29yYXRvcnMvcXVlcnktYXN5bmMuanNcIjtleHBvcnQqZnJvbVwiQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RlY29yYXRvcnMvcXVlcnktYXNzaWduZWQtZWxlbWVudHMuanNcIjtleHBvcnQqZnJvbVwiQGxpdC9yZWFjdGl2ZS1lbGVtZW50L2RlY29yYXRvcnMvcXVlcnktYXNzaWduZWQtbm9kZXMuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29yYXRvcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/lit/decorators.js\n"));

/***/ }),

/***/ "./node_modules/@web3modal/siwe/node_modules/lit/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@web3modal/siwe/node_modules/lit/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element */ \"./node_modules/@web3modal/siwe/node_modules/@lit/reactive-element/development/reactive-element.js\");\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html */ \"./node_modules/@web3modal/siwe/node_modules/lit-html/development/lit-html.js\");\n/* harmony import */ var lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit-element/lit-element.js */ \"./node_modules/@web3modal/siwe/node_modules/lit-element/development/lit-element.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var lit_html_is_server_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit-html/is-server.js */ \"./node_modules/@web3modal/siwe/node_modules/lit-html/development/is-server.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in lit_html_is_server_js__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return lit_html_is_server_js__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNtb2RhbC9zaXdlL25vZGVfbW9kdWxlcy9saXQvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMEg7QUFDMUgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzbW9kYWwvc2l3ZS9ub2RlX21vZHVsZXMvbGl0L2luZGV4LmpzPzk0MDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0XCJAbGl0L3JlYWN0aXZlLWVsZW1lbnRcIjtpbXBvcnRcImxpdC1odG1sXCI7ZXhwb3J0KmZyb21cImxpdC1lbGVtZW50L2xpdC1lbGVtZW50LmpzXCI7ZXhwb3J0KmZyb21cImxpdC1odG1sL2lzLXNlcnZlci5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3modal/siwe/node_modules/lit/index.js\n"));

/***/ })

}]);